//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace u_net {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private 受注明細DataTable table受注明細;
        
        private 受注DataTable table受注;
        
        private T見積明細DataTable tableT見積明細;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["受注明細"] != null)) {
                    base.Tables.Add(new 受注明細DataTable(ds.Tables["受注明細"]));
                }
                if ((ds.Tables["受注"] != null)) {
                    base.Tables.Add(new 受注DataTable(ds.Tables["受注"]));
                }
                if ((ds.Tables["T見積明細"] != null)) {
                    base.Tables.Add(new T見積明細DataTable(ds.Tables["T見積明細"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 受注明細DataTable 受注明細 {
            get {
                return this.table受注明細;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 受注DataTable 受注 {
            get {
                return this.table受注;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T見積明細DataTable T見積明細 {
            get {
                return this.tableT見積明細;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["受注明細"] != null)) {
                    base.Tables.Add(new 受注明細DataTable(ds.Tables["受注明細"]));
                }
                if ((ds.Tables["受注"] != null)) {
                    base.Tables.Add(new 受注DataTable(ds.Tables["受注"]));
                }
                if ((ds.Tables["T見積明細"] != null)) {
                    base.Tables.Add(new T見積明細DataTable(ds.Tables["T見積明細"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table受注明細 = ((受注明細DataTable)(base.Tables["受注明細"]));
            if ((initTable == true)) {
                if ((this.table受注明細 != null)) {
                    this.table受注明細.InitVars();
                }
            }
            this.table受注 = ((受注DataTable)(base.Tables["受注"]));
            if ((initTable == true)) {
                if ((this.table受注 != null)) {
                    this.table受注.InitVars();
                }
            }
            this.tableT見積明細 = ((T見積明細DataTable)(base.Tables["T見積明細"]));
            if ((initTable == true)) {
                if ((this.tableT見積明細 != null)) {
                    this.tableT見積明細.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table受注明細 = new 受注明細DataTable();
            base.Tables.Add(this.table受注明細);
            this.table受注 = new 受注DataTable();
            base.Tables.Add(this.table受注);
            this.tableT見積明細 = new T見積明細DataTable();
            base.Tables.Add(this.tableT見積明細);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerialize受注明細() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerialize受注() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeT見積明細() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void 受注明細RowChangeEventHandler(object sender, 受注明細RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void 受注RowChangeEventHandler(object sender, 受注RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void T見積明細RowChangeEventHandler(object sender, T見積明細RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 受注明細DataTable : global::System.Data.TypedTableBase<受注明細Row> {
            
            private global::System.Data.DataColumn column受注明細コード;
            
            private global::System.Data.DataColumn column受注コード;
            
            private global::System.Data.DataColumn column受注版数;
            
            private global::System.Data.DataColumn columnDetailNumber;
            
            private global::System.Data.DataColumn column明細番号;
            
            private global::System.Data.DataColumn column商品コード;
            
            private global::System.Data.DataColumn column受注区分コード;
            
            private global::System.Data.DataColumn columnラインコード;
            
            private global::System.Data.DataColumn column製造先コード;
            
            private global::System.Data.DataColumn column売上区分コード;
            
            private global::System.Data.DataColumn columnシリアル番号付加;
            
            private global::System.Data.DataColumn column品名;
            
            private global::System.Data.DataColumn columnシリーズ名;
            
            private global::System.Data.DataColumn column型番;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn column入力仕様;
            
            private global::System.Data.DataColumn column単価;
            
            private global::System.Data.DataColumn column原価;
            
            private global::System.Data.DataColumn columnシリアル番号1;
            
            private global::System.Data.DataColumn columnシリアル番号2;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column単位コード;
            
            private global::System.Data.DataColumn columnMeasureName;
            
            private global::System.Data.DataColumn columnCustomerSerialNumberFrom;
            
            private global::System.Data.DataColumn columnCustomerSerialNumberTo;
            
            private global::System.Data.DataColumn columnCustomerSerialNumberRequired;
            
            private global::System.Data.DataColumn columnSettingSheet;
            
            private global::System.Data.DataColumn columnInspectionReport;
            
            private global::System.Data.DataColumn columnSpecification;
            
            private global::System.Data.DataColumn columnParameterSheet;
            
            private global::System.Data.DataColumn columnYnEnterInvoice;
            
            private global::System.Data.DataColumn columnYnEnterStateOfDelivery;
            
            private global::System.Data.DataColumn columnYnSendInvoiceFax;
            
            private global::System.Data.DataColumn column備考;
            
            private global::System.Data.DataColumn column順序;
            
            private global::System.Data.DataColumn column在庫締めコード;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnStoreDate;
            
            private global::System.Data.DataColumn column製造予定日;
            
            private global::System.Data.DataColumn column製造予定更新日;
            
            private global::System.Data.DataColumn column製造開始日;
            
            private global::System.Data.DataColumn column製造終了日;
            
            private global::System.Data.DataColumn column出荷予定日;
            
            private global::System.Data.DataColumn column出荷開始日;
            
            private global::System.Data.DataColumn column出荷終了日;
            
            private global::System.Data.DataColumn columnProductionPlanningDate;
            
            private global::System.Data.DataColumn columnProductionBeginDate;
            
            private global::System.Data.DataColumn columnProductionEndDate;
            
            private global::System.Data.DataColumn columnProductionApprovedDate;
            
            private global::System.Data.DataColumn columnProductionApproverCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細DataTable() {
                this.TableName = "受注明細";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal 受注明細DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected 受注明細DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注明細コードColumn {
                get {
                    return this.column受注明細コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注コードColumn {
                get {
                    return this.column受注コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注版数Column {
                get {
                    return this.column受注版数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DetailNumberColumn {
                get {
                    return this.columnDetailNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 明細番号Column {
                get {
                    return this.column明細番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 商品コードColumn {
                get {
                    return this.column商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注区分コードColumn {
                get {
                    return this.column受注区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ラインコードColumn {
                get {
                    return this.columnラインコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造先コードColumn {
                get {
                    return this.column製造先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 売上区分コードColumn {
                get {
                    return this.column売上区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn シリアル番号付加Column {
                get {
                    return this.columnシリアル番号付加;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 品名Column {
                get {
                    return this.column品名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn シリーズ名Column {
                get {
                    return this.columnシリーズ名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 型番Column {
                get {
                    return this.column型番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 入力仕様Column {
                get {
                    return this.column入力仕様;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 単価Column {
                get {
                    return this.column単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 原価Column {
                get {
                    return this.column原価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn シリアル番号1Column {
                get {
                    return this.columnシリアル番号1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn シリアル番号2Column {
                get {
                    return this.columnシリアル番号2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 単位コードColumn {
                get {
                    return this.column単位コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MeasureNameColumn {
                get {
                    return this.columnMeasureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerSerialNumberFromColumn {
                get {
                    return this.columnCustomerSerialNumberFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerSerialNumberToColumn {
                get {
                    return this.columnCustomerSerialNumberTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerSerialNumberRequiredColumn {
                get {
                    return this.columnCustomerSerialNumberRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettingSheetColumn {
                get {
                    return this.columnSettingSheet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InspectionReportColumn {
                get {
                    return this.columnInspectionReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SpecificationColumn {
                get {
                    return this.columnSpecification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParameterSheetColumn {
                get {
                    return this.columnParameterSheet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YnEnterInvoiceColumn {
                get {
                    return this.columnYnEnterInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YnEnterStateOfDeliveryColumn {
                get {
                    return this.columnYnEnterStateOfDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YnSendInvoiceFaxColumn {
                get {
                    return this.columnYnSendInvoiceFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 備考Column {
                get {
                    return this.column備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 順序Column {
                get {
                    return this.column順序;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 在庫締めコードColumn {
                get {
                    return this.column在庫締めコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StoreDateColumn {
                get {
                    return this.columnStoreDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造予定日Column {
                get {
                    return this.column製造予定日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造予定更新日Column {
                get {
                    return this.column製造予定更新日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造開始日Column {
                get {
                    return this.column製造開始日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造終了日Column {
                get {
                    return this.column製造終了日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 出荷予定日Column {
                get {
                    return this.column出荷予定日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 出荷開始日Column {
                get {
                    return this.column出荷開始日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 出荷終了日Column {
                get {
                    return this.column出荷終了日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionPlanningDateColumn {
                get {
                    return this.columnProductionPlanningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionBeginDateColumn {
                get {
                    return this.columnProductionBeginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionEndDateColumn {
                get {
                    return this.columnProductionEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionApprovedDateColumn {
                get {
                    return this.columnProductionApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionApproverCodeColumn {
                get {
                    return this.columnProductionApproverCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細Row this[int index] {
                get {
                    return ((受注明細Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注明細RowChangeEventHandler 受注明細RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注明細RowChangeEventHandler 受注明細RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注明細RowChangeEventHandler 受注明細RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注明細RowChangeEventHandler 受注明細RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Add受注明細Row(受注明細Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細Row Add受注明細Row(
                        string 受注コード, 
                        short 受注版数, 
                        int DetailNumber, 
                        int 明細番号, 
                        string 商品コード, 
                        byte 受注区分コード, 
                        string ラインコード, 
                        byte 製造先コード, 
                        byte 売上区分コード, 
                        byte シリアル番号付加, 
                        string 品名, 
                        string シリーズ名, 
                        string 型番, 
                        string ClientName, 
                        string 入力仕様, 
                        decimal 単価, 
                        decimal 原価, 
                        int シリアル番号1, 
                        int シリアル番号2, 
                        int 数量, 
                        byte 単位コード, 
                        string MeasureName, 
                        string CustomerSerialNumberFrom, 
                        string CustomerSerialNumberTo, 
                        int CustomerSerialNumberRequired, 
                        string SettingSheet, 
                        string InspectionReport, 
                        string Specification, 
                        string ParameterSheet, 
                        short YnEnterInvoice, 
                        short YnEnterStateOfDelivery, 
                        short YnSendInvoiceFax, 
                        string 備考, 
                        float 順序, 
                        int 在庫締めコード, 
                        System.DateTime OrderDate, 
                        System.DateTime StoreDate, 
                        System.DateTime 製造予定日, 
                        System.DateTime 製造予定更新日, 
                        System.DateTime 製造開始日, 
                        System.DateTime 製造終了日, 
                        System.DateTime 出荷予定日, 
                        System.DateTime 出荷開始日, 
                        System.DateTime 出荷終了日, 
                        System.DateTime ProductionPlanningDate, 
                        System.DateTime ProductionBeginDate, 
                        System.DateTime ProductionEndDate, 
                        System.DateTime ProductionApprovedDate, 
                        string ProductionApproverCode) {
                受注明細Row row受注明細Row = ((受注明細Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        受注コード,
                        受注版数,
                        DetailNumber,
                        明細番号,
                        商品コード,
                        受注区分コード,
                        ラインコード,
                        製造先コード,
                        売上区分コード,
                        シリアル番号付加,
                        品名,
                        シリーズ名,
                        型番,
                        ClientName,
                        入力仕様,
                        単価,
                        原価,
                        シリアル番号1,
                        シリアル番号2,
                        数量,
                        単位コード,
                        MeasureName,
                        CustomerSerialNumberFrom,
                        CustomerSerialNumberTo,
                        CustomerSerialNumberRequired,
                        SettingSheet,
                        InspectionReport,
                        Specification,
                        ParameterSheet,
                        YnEnterInvoice,
                        YnEnterStateOfDelivery,
                        YnSendInvoiceFax,
                        備考,
                        順序,
                        在庫締めコード,
                        OrderDate,
                        StoreDate,
                        製造予定日,
                        製造予定更新日,
                        製造開始日,
                        製造終了日,
                        出荷予定日,
                        出荷開始日,
                        出荷終了日,
                        ProductionPlanningDate,
                        ProductionBeginDate,
                        ProductionEndDate,
                        ProductionApprovedDate,
                        ProductionApproverCode};
                row受注明細Row.ItemArray = columnValuesArray;
                this.Rows.Add(row受注明細Row);
                return row受注明細Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細Row FindBy受注明細コード(int 受注明細コード) {
                return ((受注明細Row)(this.Rows.Find(new object[] {
                            受注明細コード})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                受注明細DataTable cln = ((受注明細DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 受注明細DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.column受注明細コード = base.Columns["受注明細コード"];
                this.column受注コード = base.Columns["受注コード"];
                this.column受注版数 = base.Columns["受注版数"];
                this.columnDetailNumber = base.Columns["DetailNumber"];
                this.column明細番号 = base.Columns["明細番号"];
                this.column商品コード = base.Columns["商品コード"];
                this.column受注区分コード = base.Columns["受注区分コード"];
                this.columnラインコード = base.Columns["ラインコード"];
                this.column製造先コード = base.Columns["製造先コード"];
                this.column売上区分コード = base.Columns["売上区分コード"];
                this.columnシリアル番号付加 = base.Columns["シリアル番号付加"];
                this.column品名 = base.Columns["品名"];
                this.columnシリーズ名 = base.Columns["シリーズ名"];
                this.column型番 = base.Columns["型番"];
                this.columnClientName = base.Columns["ClientName"];
                this.column入力仕様 = base.Columns["入力仕様"];
                this.column単価 = base.Columns["単価"];
                this.column原価 = base.Columns["原価"];
                this.columnシリアル番号1 = base.Columns["シリアル番号1"];
                this.columnシリアル番号2 = base.Columns["シリアル番号2"];
                this.column数量 = base.Columns["数量"];
                this.column単位コード = base.Columns["単位コード"];
                this.columnMeasureName = base.Columns["MeasureName"];
                this.columnCustomerSerialNumberFrom = base.Columns["CustomerSerialNumberFrom"];
                this.columnCustomerSerialNumberTo = base.Columns["CustomerSerialNumberTo"];
                this.columnCustomerSerialNumberRequired = base.Columns["CustomerSerialNumberRequired"];
                this.columnSettingSheet = base.Columns["SettingSheet"];
                this.columnInspectionReport = base.Columns["InspectionReport"];
                this.columnSpecification = base.Columns["Specification"];
                this.columnParameterSheet = base.Columns["ParameterSheet"];
                this.columnYnEnterInvoice = base.Columns["YnEnterInvoice"];
                this.columnYnEnterStateOfDelivery = base.Columns["YnEnterStateOfDelivery"];
                this.columnYnSendInvoiceFax = base.Columns["YnSendInvoiceFax"];
                this.column備考 = base.Columns["備考"];
                this.column順序 = base.Columns["順序"];
                this.column在庫締めコード = base.Columns["在庫締めコード"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnStoreDate = base.Columns["StoreDate"];
                this.column製造予定日 = base.Columns["製造予定日"];
                this.column製造予定更新日 = base.Columns["製造予定更新日"];
                this.column製造開始日 = base.Columns["製造開始日"];
                this.column製造終了日 = base.Columns["製造終了日"];
                this.column出荷予定日 = base.Columns["出荷予定日"];
                this.column出荷開始日 = base.Columns["出荷開始日"];
                this.column出荷終了日 = base.Columns["出荷終了日"];
                this.columnProductionPlanningDate = base.Columns["ProductionPlanningDate"];
                this.columnProductionBeginDate = base.Columns["ProductionBeginDate"];
                this.columnProductionEndDate = base.Columns["ProductionEndDate"];
                this.columnProductionApprovedDate = base.Columns["ProductionApprovedDate"];
                this.columnProductionApproverCode = base.Columns["ProductionApproverCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.column受注明細コード = new global::System.Data.DataColumn("受注明細コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注明細コード);
                this.column受注コード = new global::System.Data.DataColumn("受注コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注コード);
                this.column受注版数 = new global::System.Data.DataColumn("受注版数", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注版数);
                this.columnDetailNumber = new global::System.Data.DataColumn("DetailNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailNumber);
                this.column明細番号 = new global::System.Data.DataColumn("明細番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細番号);
                this.column商品コード = new global::System.Data.DataColumn("商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品コード);
                this.column受注区分コード = new global::System.Data.DataColumn("受注区分コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注区分コード);
                this.columnラインコード = new global::System.Data.DataColumn("ラインコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnラインコード);
                this.column製造先コード = new global::System.Data.DataColumn("製造先コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造先コード);
                this.column売上区分コード = new global::System.Data.DataColumn("売上区分コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上区分コード);
                this.columnシリアル番号付加 = new global::System.Data.DataColumn("シリアル番号付加", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシリアル番号付加);
                this.column品名 = new global::System.Data.DataColumn("品名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品名);
                this.columnシリーズ名 = new global::System.Data.DataColumn("シリーズ名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシリーズ名);
                this.column型番 = new global::System.Data.DataColumn("型番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column型番);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.column入力仕様 = new global::System.Data.DataColumn("入力仕様", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力仕様);
                this.column単価 = new global::System.Data.DataColumn("単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単価);
                this.column原価 = new global::System.Data.DataColumn("原価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価);
                this.columnシリアル番号1 = new global::System.Data.DataColumn("シリアル番号1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシリアル番号1);
                this.columnシリアル番号2 = new global::System.Data.DataColumn("シリアル番号2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシリアル番号2);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column単位コード = new global::System.Data.DataColumn("単位コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位コード);
                this.columnMeasureName = new global::System.Data.DataColumn("MeasureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasureName);
                this.columnCustomerSerialNumberFrom = new global::System.Data.DataColumn("CustomerSerialNumberFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSerialNumberFrom);
                this.columnCustomerSerialNumberTo = new global::System.Data.DataColumn("CustomerSerialNumberTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSerialNumberTo);
                this.columnCustomerSerialNumberRequired = new global::System.Data.DataColumn("CustomerSerialNumberRequired", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSerialNumberRequired);
                this.columnSettingSheet = new global::System.Data.DataColumn("SettingSheet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettingSheet);
                this.columnInspectionReport = new global::System.Data.DataColumn("InspectionReport", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionReport);
                this.columnSpecification = new global::System.Data.DataColumn("Specification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecification);
                this.columnParameterSheet = new global::System.Data.DataColumn("ParameterSheet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterSheet);
                this.columnYnEnterInvoice = new global::System.Data.DataColumn("YnEnterInvoice", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYnEnterInvoice);
                this.columnYnEnterStateOfDelivery = new global::System.Data.DataColumn("YnEnterStateOfDelivery", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYnEnterStateOfDelivery);
                this.columnYnSendInvoiceFax = new global::System.Data.DataColumn("YnSendInvoiceFax", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYnSendInvoiceFax);
                this.column備考 = new global::System.Data.DataColumn("備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column備考);
                this.column順序 = new global::System.Data.DataColumn("順序", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column順序);
                this.column在庫締めコード = new global::System.Data.DataColumn("在庫締めコード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫締めコード);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnStoreDate = new global::System.Data.DataColumn("StoreDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreDate);
                this.column製造予定日 = new global::System.Data.DataColumn("製造予定日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造予定日);
                this.column製造予定更新日 = new global::System.Data.DataColumn("製造予定更新日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造予定更新日);
                this.column製造開始日 = new global::System.Data.DataColumn("製造開始日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造開始日);
                this.column製造終了日 = new global::System.Data.DataColumn("製造終了日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造終了日);
                this.column出荷予定日 = new global::System.Data.DataColumn("出荷予定日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷予定日);
                this.column出荷開始日 = new global::System.Data.DataColumn("出荷開始日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷開始日);
                this.column出荷終了日 = new global::System.Data.DataColumn("出荷終了日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷終了日);
                this.columnProductionPlanningDate = new global::System.Data.DataColumn("ProductionPlanningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionPlanningDate);
                this.columnProductionBeginDate = new global::System.Data.DataColumn("ProductionBeginDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionBeginDate);
                this.columnProductionEndDate = new global::System.Data.DataColumn("ProductionEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionEndDate);
                this.columnProductionApprovedDate = new global::System.Data.DataColumn("ProductionApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionApprovedDate);
                this.columnProductionApproverCode = new global::System.Data.DataColumn("ProductionApproverCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionApproverCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column受注明細コード}, true));
                this.column受注明細コード.AutoIncrement = true;
                this.column受注明細コード.AutoIncrementSeed = -1;
                this.column受注明細コード.AutoIncrementStep = -1;
                this.column受注明細コード.AllowDBNull = false;
                this.column受注明細コード.ReadOnly = true;
                this.column受注明細コード.Unique = true;
                this.column受注コード.AllowDBNull = false;
                this.column受注コード.MaxLength = 9;
                this.column受注版数.AllowDBNull = false;
                this.column商品コード.MaxLength = 8;
                this.column受注区分コード.AllowDBNull = false;
                this.columnラインコード.MaxLength = 3;
                this.column売上区分コード.AllowDBNull = false;
                this.column品名.MaxLength = 48;
                this.columnシリーズ名.MaxLength = 24;
                this.column型番.AllowDBNull = false;
                this.column型番.MaxLength = 48;
                this.columnClientName.MaxLength = 200;
                this.column入力仕様.MaxLength = 50;
                this.column単価.AllowDBNull = false;
                this.column数量.AllowDBNull = false;
                this.columnMeasureName.MaxLength = 10;
                this.columnCustomerSerialNumberFrom.MaxLength = 20;
                this.columnCustomerSerialNumberTo.MaxLength = 20;
                this.columnSettingSheet.MaxLength = 2;
                this.columnInspectionReport.MaxLength = 2;
                this.columnSpecification.MaxLength = 2;
                this.columnParameterSheet.MaxLength = 2;
                this.column備考.MaxLength = 250;
                this.columnProductionApproverCode.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細Row New受注明細Row() {
                return ((受注明細Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 受注明細Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(受注明細Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.受注明細RowChanged != null)) {
                    this.受注明細RowChanged(this, new 受注明細RowChangeEvent(((受注明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.受注明細RowChanging != null)) {
                    this.受注明細RowChanging(this, new 受注明細RowChangeEvent(((受注明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.受注明細RowDeleted != null)) {
                    this.受注明細RowDeleted(this, new 受注明細RowChangeEvent(((受注明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.受注明細RowDeleting != null)) {
                    this.受注明細RowDeleting(this, new 受注明細RowChangeEvent(((受注明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Remove受注明細Row(受注明細Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "受注明細DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 受注DataTable : global::System.Data.TypedTableBase<受注Row> {
            
            private global::System.Data.DataColumn column受注コード;
            
            private global::System.Data.DataColumn column受注版数;
            
            private global::System.Data.DataColumn column承認日;
            
            private global::System.Data.DataColumn column受注日;
            
            private global::System.Data.DataColumn column受注納期;
            
            private global::System.Data.DataColumn column出荷予定日;
            
            private global::System.Data.DataColumn column注文番号;
            
            private global::System.Data.DataColumn column顧客コード;
            
            private global::System.Data.DataColumn column顧客担当者名;
            
            private global::System.Data.DataColumn columnClosingDay;
            
            private global::System.Data.DataColumn column自社担当者コード;
            
            private global::System.Data.DataColumn column自社担当者名;
            
            private global::System.Data.DataColumn columnClientCode;
            
            private global::System.Data.DataColumn column発送方法コード;
            
            private global::System.Data.DataColumn columnShippingGroupCode;
            
            private global::System.Data.DataColumn column発送先名;
            
            private global::System.Data.DataColumn column発送先郵便番号;
            
            private global::System.Data.DataColumn column発送先住所1;
            
            private global::System.Data.DataColumn column発送先住所2;
            
            private global::System.Data.DataColumn column発送先TEL;
            
            private global::System.Data.DataColumn column発送先TEL1;
            
            private global::System.Data.DataColumn column発送先TEL2;
            
            private global::System.Data.DataColumn column発送先TEL3;
            
            private global::System.Data.DataColumn column発送先FAX;
            
            private global::System.Data.DataColumn column発送先FAX1;
            
            private global::System.Data.DataColumn column発送先FAX2;
            
            private global::System.Data.DataColumn column発送先FAX3;
            
            private global::System.Data.DataColumn column発送先メールアドレス;
            
            private global::System.Data.DataColumn column発送先担当者名;
            
            private global::System.Data.DataColumn column納品書送付コード;
            
            private global::System.Data.DataColumn column請求書送付コード;
            
            private global::System.Data.DataColumn column請求予定日;
            
            private global::System.Data.DataColumn columnTaxRate;
            
            private global::System.Data.DataColumn columnTaxCalcCode;
            
            private global::System.Data.DataColumn column税端数処理;
            
            private global::System.Data.DataColumn columnPackingSlipInputCode;
            
            private global::System.Data.DataColumn columnPackingSlipInput;
            
            private global::System.Data.DataColumn columnPackingSlipNote;
            
            private global::System.Data.DataColumn columnReceiptCommentCode;
            
            private global::System.Data.DataColumn columnInvoiceInputCode;
            
            private global::System.Data.DataColumn columnInvoiceInput;
            
            private global::System.Data.DataColumn columnInvoiceNote;
            
            private global::System.Data.DataColumn columnInvoiceFaxCode;
            
            private global::System.Data.DataColumn columnInvoiceFax;
            
            private global::System.Data.DataColumn columnProductionNotice;
            
            private global::System.Data.DataColumn column備考;
            
            private global::System.Data.DataColumn columnInvoiceFaxToName;
            
            private global::System.Data.DataColumn columnInvoiceFaxToContact;
            
            private global::System.Data.DataColumn columnInvoiceFaxToNumber;
            
            private global::System.Data.DataColumn column改版履歴;
            
            private global::System.Data.DataColumn column受注承認;
            
            private global::System.Data.DataColumn column製造開始日;
            
            private global::System.Data.DataColumn column製造完了日;
            
            private global::System.Data.DataColumn column出荷完了日;
            
            private global::System.Data.DataColumn column納品書発行日;
            
            private global::System.Data.DataColumn column送り状発行日;
            
            private global::System.Data.DataColumn column確定日時;
            
            private global::System.Data.DataColumn column確定者コード;
            
            private global::System.Data.DataColumn column承認日時;
            
            private global::System.Data.DataColumn column承認者コード;
            
            private global::System.Data.DataColumn columnPaymentConfirmation;
            
            private global::System.Data.DataColumn columnPaymentReceivedDate;
            
            private global::System.Data.DataColumn columnProductionApprovedDate;
            
            private global::System.Data.DataColumn columnProductionApproverCode;
            
            private global::System.Data.DataColumn columnManufacturingCompletionApprovedDate;
            
            private global::System.Data.DataColumn columnManufacturingCompletionApproverCode;
            
            private global::System.Data.DataColumn column完了承認日;
            
            private global::System.Data.DataColumn column完了承認者コード;
            
            private global::System.Data.DataColumn column受注完了承認;
            
            private global::System.Data.DataColumn column集計日付;
            
            private global::System.Data.DataColumn column請求コード;
            
            private global::System.Data.DataColumn column無効日;
            
            private global::System.Data.DataColumn column非表示;
            
            private global::System.Data.DataColumn column登録日;
            
            private global::System.Data.DataColumn columnReceiptComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注DataTable() {
                this.TableName = "受注";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal 受注DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected 受注DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注コードColumn {
                get {
                    return this.column受注コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注版数Column {
                get {
                    return this.column受注版数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 承認日Column {
                get {
                    return this.column承認日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注日Column {
                get {
                    return this.column受注日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注納期Column {
                get {
                    return this.column受注納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 出荷予定日Column {
                get {
                    return this.column出荷予定日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 注文番号Column {
                get {
                    return this.column注文番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 顧客コードColumn {
                get {
                    return this.column顧客コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 顧客担当者名Column {
                get {
                    return this.column顧客担当者名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClosingDayColumn {
                get {
                    return this.columnClosingDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 自社担当者コードColumn {
                get {
                    return this.column自社担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 自社担当者名Column {
                get {
                    return this.column自社担当者名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClientCodeColumn {
                get {
                    return this.columnClientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送方法コードColumn {
                get {
                    return this.column発送方法コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ShippingGroupCodeColumn {
                get {
                    return this.columnShippingGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先名Column {
                get {
                    return this.column発送先名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先郵便番号Column {
                get {
                    return this.column発送先郵便番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先住所1Column {
                get {
                    return this.column発送先住所1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先住所2Column {
                get {
                    return this.column発送先住所2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先TELColumn {
                get {
                    return this.column発送先TEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先TEL1Column {
                get {
                    return this.column発送先TEL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先TEL2Column {
                get {
                    return this.column発送先TEL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先TEL3Column {
                get {
                    return this.column発送先TEL3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先FAXColumn {
                get {
                    return this.column発送先FAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先FAX1Column {
                get {
                    return this.column発送先FAX1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先FAX2Column {
                get {
                    return this.column発送先FAX2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先FAX3Column {
                get {
                    return this.column発送先FAX3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先メールアドレスColumn {
                get {
                    return this.column発送先メールアドレス;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 発送先担当者名Column {
                get {
                    return this.column発送先担当者名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 納品書送付コードColumn {
                get {
                    return this.column納品書送付コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 請求書送付コードColumn {
                get {
                    return this.column請求書送付コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 請求予定日Column {
                get {
                    return this.column請求予定日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TaxRateColumn {
                get {
                    return this.columnTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TaxCalcCodeColumn {
                get {
                    return this.columnTaxCalcCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 税端数処理Column {
                get {
                    return this.column税端数処理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PackingSlipInputCodeColumn {
                get {
                    return this.columnPackingSlipInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PackingSlipInputColumn {
                get {
                    return this.columnPackingSlipInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PackingSlipNoteColumn {
                get {
                    return this.columnPackingSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReceiptCommentCodeColumn {
                get {
                    return this.columnReceiptCommentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceInputCodeColumn {
                get {
                    return this.columnInvoiceInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceInputColumn {
                get {
                    return this.columnInvoiceInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoteColumn {
                get {
                    return this.columnInvoiceNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxCodeColumn {
                get {
                    return this.columnInvoiceFaxCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxColumn {
                get {
                    return this.columnInvoiceFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionNoticeColumn {
                get {
                    return this.columnProductionNotice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 備考Column {
                get {
                    return this.column備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxToNameColumn {
                get {
                    return this.columnInvoiceFaxToName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxToContactColumn {
                get {
                    return this.columnInvoiceFaxToContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxToNumberColumn {
                get {
                    return this.columnInvoiceFaxToNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 改版履歴Column {
                get {
                    return this.column改版履歴;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注承認Column {
                get {
                    return this.column受注承認;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造開始日Column {
                get {
                    return this.column製造開始日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 製造完了日Column {
                get {
                    return this.column製造完了日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 出荷完了日Column {
                get {
                    return this.column出荷完了日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 納品書発行日Column {
                get {
                    return this.column納品書発行日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 送り状発行日Column {
                get {
                    return this.column送り状発行日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 確定日時Column {
                get {
                    return this.column確定日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 確定者コードColumn {
                get {
                    return this.column確定者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 承認日時Column {
                get {
                    return this.column承認日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 承認者コードColumn {
                get {
                    return this.column承認者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PaymentConfirmationColumn {
                get {
                    return this.columnPaymentConfirmation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PaymentReceivedDateColumn {
                get {
                    return this.columnPaymentReceivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionApprovedDateColumn {
                get {
                    return this.columnProductionApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductionApproverCodeColumn {
                get {
                    return this.columnProductionApproverCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ManufacturingCompletionApprovedDateColumn {
                get {
                    return this.columnManufacturingCompletionApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ManufacturingCompletionApproverCodeColumn {
                get {
                    return this.columnManufacturingCompletionApproverCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 完了承認日Column {
                get {
                    return this.column完了承認日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 完了承認者コードColumn {
                get {
                    return this.column完了承認者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 受注完了承認Column {
                get {
                    return this.column受注完了承認;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 集計日付Column {
                get {
                    return this.column集計日付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 請求コードColumn {
                get {
                    return this.column請求コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 無効日Column {
                get {
                    return this.column無効日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 非表示Column {
                get {
                    return this.column非表示;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 登録日Column {
                get {
                    return this.column登録日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReceiptCommentColumn {
                get {
                    return this.columnReceiptComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注Row this[int index] {
                get {
                    return ((受注Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注RowChangeEventHandler 受注RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注RowChangeEventHandler 受注RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注RowChangeEventHandler 受注RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event 受注RowChangeEventHandler 受注RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Add受注Row(受注Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注Row Add受注Row(
                        string 受注コード, 
                        short 受注版数, 
                        System.DateTime 承認日, 
                        System.DateTime 受注日, 
                        System.DateTime 受注納期, 
                        System.DateTime 出荷予定日, 
                        string 注文番号, 
                        string 顧客コード, 
                        string 顧客担当者名, 
                        int ClosingDay, 
                        string 自社担当者コード, 
                        string 自社担当者名, 
                        string ClientCode, 
                        byte 発送方法コード, 
                        short ShippingGroupCode, 
                        string 発送先名, 
                        string 発送先郵便番号, 
                        string 発送先住所1, 
                        string 発送先住所2, 
                        string 発送先TEL, 
                        string 発送先TEL1, 
                        string 発送先TEL2, 
                        string 発送先TEL3, 
                        string 発送先FAX, 
                        string 発送先FAX1, 
                        string 発送先FAX2, 
                        string 発送先FAX3, 
                        string 発送先メールアドレス, 
                        string 発送先担当者名, 
                        byte 納品書送付コード, 
                        byte 請求書送付コード, 
                        System.DateTime 請求予定日, 
                        decimal TaxRate, 
                        byte TaxCalcCode, 
                        byte 税端数処理, 
                        string PackingSlipInputCode, 
                        string PackingSlipInput, 
                        string PackingSlipNote, 
                        string ReceiptCommentCode, 
                        string InvoiceInputCode, 
                        string InvoiceInput, 
                        string InvoiceNote, 
                        string InvoiceFaxCode, 
                        string InvoiceFax, 
                        string ProductionNotice, 
                        string 備考, 
                        string InvoiceFaxToName, 
                        string InvoiceFaxToContact, 
                        string InvoiceFaxToNumber, 
                        string 改版履歴, 
                        byte 受注承認, 
                        System.DateTime 製造開始日, 
                        System.DateTime 製造完了日, 
                        System.DateTime 出荷完了日, 
                        System.DateTime 納品書発行日, 
                        System.DateTime 送り状発行日, 
                        System.DateTime 確定日時, 
                        string 確定者コード, 
                        System.DateTime 承認日時, 
                        string 承認者コード, 
                        short PaymentConfirmation, 
                        System.DateTime PaymentReceivedDate, 
                        System.DateTime ProductionApprovedDate, 
                        string ProductionApproverCode, 
                        System.DateTime ManufacturingCompletionApprovedDate, 
                        string ManufacturingCompletionApproverCode, 
                        System.DateTime 完了承認日, 
                        string 完了承認者コード, 
                        byte 受注完了承認, 
                        System.DateTime 集計日付, 
                        int 請求コード, 
                        System.DateTime 無効日, 
                        short 非表示, 
                        System.DateTime 登録日, 
                        string ReceiptComment) {
                受注Row row受注Row = ((受注Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        受注コード,
                        受注版数,
                        承認日,
                        受注日,
                        受注納期,
                        出荷予定日,
                        注文番号,
                        顧客コード,
                        顧客担当者名,
                        ClosingDay,
                        自社担当者コード,
                        自社担当者名,
                        ClientCode,
                        発送方法コード,
                        ShippingGroupCode,
                        発送先名,
                        発送先郵便番号,
                        発送先住所1,
                        発送先住所2,
                        発送先TEL,
                        発送先TEL1,
                        発送先TEL2,
                        発送先TEL3,
                        発送先FAX,
                        発送先FAX1,
                        発送先FAX2,
                        発送先FAX3,
                        発送先メールアドレス,
                        発送先担当者名,
                        納品書送付コード,
                        請求書送付コード,
                        請求予定日,
                        TaxRate,
                        TaxCalcCode,
                        税端数処理,
                        PackingSlipInputCode,
                        PackingSlipInput,
                        PackingSlipNote,
                        ReceiptCommentCode,
                        InvoiceInputCode,
                        InvoiceInput,
                        InvoiceNote,
                        InvoiceFaxCode,
                        InvoiceFax,
                        ProductionNotice,
                        備考,
                        InvoiceFaxToName,
                        InvoiceFaxToContact,
                        InvoiceFaxToNumber,
                        改版履歴,
                        受注承認,
                        製造開始日,
                        製造完了日,
                        出荷完了日,
                        納品書発行日,
                        送り状発行日,
                        確定日時,
                        確定者コード,
                        承認日時,
                        承認者コード,
                        PaymentConfirmation,
                        PaymentReceivedDate,
                        ProductionApprovedDate,
                        ProductionApproverCode,
                        ManufacturingCompletionApprovedDate,
                        ManufacturingCompletionApproverCode,
                        完了承認日,
                        完了承認者コード,
                        受注完了承認,
                        集計日付,
                        請求コード,
                        無効日,
                        非表示,
                        登録日,
                        ReceiptComment};
                row受注Row.ItemArray = columnValuesArray;
                this.Rows.Add(row受注Row);
                return row受注Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注Row FindBy受注コード受注版数(string 受注コード, short 受注版数) {
                return ((受注Row)(this.Rows.Find(new object[] {
                            受注コード,
                            受注版数})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                受注DataTable cln = ((受注DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 受注DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.column受注コード = base.Columns["受注コード"];
                this.column受注版数 = base.Columns["受注版数"];
                this.column承認日 = base.Columns["承認日"];
                this.column受注日 = base.Columns["受注日"];
                this.column受注納期 = base.Columns["受注納期"];
                this.column出荷予定日 = base.Columns["出荷予定日"];
                this.column注文番号 = base.Columns["注文番号"];
                this.column顧客コード = base.Columns["顧客コード"];
                this.column顧客担当者名 = base.Columns["顧客担当者名"];
                this.columnClosingDay = base.Columns["ClosingDay"];
                this.column自社担当者コード = base.Columns["自社担当者コード"];
                this.column自社担当者名 = base.Columns["自社担当者名"];
                this.columnClientCode = base.Columns["ClientCode"];
                this.column発送方法コード = base.Columns["発送方法コード"];
                this.columnShippingGroupCode = base.Columns["ShippingGroupCode"];
                this.column発送先名 = base.Columns["発送先名"];
                this.column発送先郵便番号 = base.Columns["発送先郵便番号"];
                this.column発送先住所1 = base.Columns["発送先住所1"];
                this.column発送先住所2 = base.Columns["発送先住所2"];
                this.column発送先TEL = base.Columns["発送先TEL"];
                this.column発送先TEL1 = base.Columns["発送先TEL1"];
                this.column発送先TEL2 = base.Columns["発送先TEL2"];
                this.column発送先TEL3 = base.Columns["発送先TEL3"];
                this.column発送先FAX = base.Columns["発送先FAX"];
                this.column発送先FAX1 = base.Columns["発送先FAX1"];
                this.column発送先FAX2 = base.Columns["発送先FAX2"];
                this.column発送先FAX3 = base.Columns["発送先FAX3"];
                this.column発送先メールアドレス = base.Columns["発送先メールアドレス"];
                this.column発送先担当者名 = base.Columns["発送先担当者名"];
                this.column納品書送付コード = base.Columns["納品書送付コード"];
                this.column請求書送付コード = base.Columns["請求書送付コード"];
                this.column請求予定日 = base.Columns["請求予定日"];
                this.columnTaxRate = base.Columns["TaxRate"];
                this.columnTaxCalcCode = base.Columns["TaxCalcCode"];
                this.column税端数処理 = base.Columns["税端数処理"];
                this.columnPackingSlipInputCode = base.Columns["PackingSlipInputCode"];
                this.columnPackingSlipInput = base.Columns["PackingSlipInput"];
                this.columnPackingSlipNote = base.Columns["PackingSlipNote"];
                this.columnReceiptCommentCode = base.Columns["ReceiptCommentCode"];
                this.columnInvoiceInputCode = base.Columns["InvoiceInputCode"];
                this.columnInvoiceInput = base.Columns["InvoiceInput"];
                this.columnInvoiceNote = base.Columns["InvoiceNote"];
                this.columnInvoiceFaxCode = base.Columns["InvoiceFaxCode"];
                this.columnInvoiceFax = base.Columns["InvoiceFax"];
                this.columnProductionNotice = base.Columns["ProductionNotice"];
                this.column備考 = base.Columns["備考"];
                this.columnInvoiceFaxToName = base.Columns["InvoiceFaxToName"];
                this.columnInvoiceFaxToContact = base.Columns["InvoiceFaxToContact"];
                this.columnInvoiceFaxToNumber = base.Columns["InvoiceFaxToNumber"];
                this.column改版履歴 = base.Columns["改版履歴"];
                this.column受注承認 = base.Columns["受注承認"];
                this.column製造開始日 = base.Columns["製造開始日"];
                this.column製造完了日 = base.Columns["製造完了日"];
                this.column出荷完了日 = base.Columns["出荷完了日"];
                this.column納品書発行日 = base.Columns["納品書発行日"];
                this.column送り状発行日 = base.Columns["送り状発行日"];
                this.column確定日時 = base.Columns["確定日時"];
                this.column確定者コード = base.Columns["確定者コード"];
                this.column承認日時 = base.Columns["承認日時"];
                this.column承認者コード = base.Columns["承認者コード"];
                this.columnPaymentConfirmation = base.Columns["PaymentConfirmation"];
                this.columnPaymentReceivedDate = base.Columns["PaymentReceivedDate"];
                this.columnProductionApprovedDate = base.Columns["ProductionApprovedDate"];
                this.columnProductionApproverCode = base.Columns["ProductionApproverCode"];
                this.columnManufacturingCompletionApprovedDate = base.Columns["ManufacturingCompletionApprovedDate"];
                this.columnManufacturingCompletionApproverCode = base.Columns["ManufacturingCompletionApproverCode"];
                this.column完了承認日 = base.Columns["完了承認日"];
                this.column完了承認者コード = base.Columns["完了承認者コード"];
                this.column受注完了承認 = base.Columns["受注完了承認"];
                this.column集計日付 = base.Columns["集計日付"];
                this.column請求コード = base.Columns["請求コード"];
                this.column無効日 = base.Columns["無効日"];
                this.column非表示 = base.Columns["非表示"];
                this.column登録日 = base.Columns["登録日"];
                this.columnReceiptComment = base.Columns["ReceiptComment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.column受注コード = new global::System.Data.DataColumn("受注コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注コード);
                this.column受注版数 = new global::System.Data.DataColumn("受注版数", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注版数);
                this.column承認日 = new global::System.Data.DataColumn("承認日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column承認日);
                this.column受注日 = new global::System.Data.DataColumn("受注日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注日);
                this.column受注納期 = new global::System.Data.DataColumn("受注納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注納期);
                this.column出荷予定日 = new global::System.Data.DataColumn("出荷予定日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷予定日);
                this.column注文番号 = new global::System.Data.DataColumn("注文番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column注文番号);
                this.column顧客コード = new global::System.Data.DataColumn("顧客コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column顧客コード);
                this.column顧客担当者名 = new global::System.Data.DataColumn("顧客担当者名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column顧客担当者名);
                this.columnClosingDay = new global::System.Data.DataColumn("ClosingDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDay);
                this.column自社担当者コード = new global::System.Data.DataColumn("自社担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社担当者コード);
                this.column自社担当者名 = new global::System.Data.DataColumn("自社担当者名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社担当者名);
                this.columnClientCode = new global::System.Data.DataColumn("ClientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCode);
                this.column発送方法コード = new global::System.Data.DataColumn("発送方法コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送方法コード);
                this.columnShippingGroupCode = new global::System.Data.DataColumn("ShippingGroupCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingGroupCode);
                this.column発送先名 = new global::System.Data.DataColumn("発送先名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先名);
                this.column発送先郵便番号 = new global::System.Data.DataColumn("発送先郵便番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先郵便番号);
                this.column発送先住所1 = new global::System.Data.DataColumn("発送先住所1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先住所1);
                this.column発送先住所2 = new global::System.Data.DataColumn("発送先住所2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先住所2);
                this.column発送先TEL = new global::System.Data.DataColumn("発送先TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先TEL);
                this.column発送先TEL1 = new global::System.Data.DataColumn("発送先TEL1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先TEL1);
                this.column発送先TEL2 = new global::System.Data.DataColumn("発送先TEL2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先TEL2);
                this.column発送先TEL3 = new global::System.Data.DataColumn("発送先TEL3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先TEL3);
                this.column発送先FAX = new global::System.Data.DataColumn("発送先FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先FAX);
                this.column発送先FAX1 = new global::System.Data.DataColumn("発送先FAX1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先FAX1);
                this.column発送先FAX2 = new global::System.Data.DataColumn("発送先FAX2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先FAX2);
                this.column発送先FAX3 = new global::System.Data.DataColumn("発送先FAX3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先FAX3);
                this.column発送先メールアドレス = new global::System.Data.DataColumn("発送先メールアドレス", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先メールアドレス);
                this.column発送先担当者名 = new global::System.Data.DataColumn("発送先担当者名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発送先担当者名);
                this.column納品書送付コード = new global::System.Data.DataColumn("納品書送付コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書送付コード);
                this.column請求書送付コード = new global::System.Data.DataColumn("請求書送付コード", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求書送付コード);
                this.column請求予定日 = new global::System.Data.DataColumn("請求予定日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求予定日);
                this.columnTaxRate = new global::System.Data.DataColumn("TaxRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxRate);
                this.columnTaxCalcCode = new global::System.Data.DataColumn("TaxCalcCode", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCalcCode);
                this.column税端数処理 = new global::System.Data.DataColumn("税端数処理", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税端数処理);
                this.columnPackingSlipInputCode = new global::System.Data.DataColumn("PackingSlipInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingSlipInputCode);
                this.columnPackingSlipInput = new global::System.Data.DataColumn("PackingSlipInput", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingSlipInput);
                this.columnPackingSlipNote = new global::System.Data.DataColumn("PackingSlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingSlipNote);
                this.columnReceiptCommentCode = new global::System.Data.DataColumn("ReceiptCommentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptCommentCode);
                this.columnInvoiceInputCode = new global::System.Data.DataColumn("InvoiceInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceInputCode);
                this.columnInvoiceInput = new global::System.Data.DataColumn("InvoiceInput", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceInput);
                this.columnInvoiceNote = new global::System.Data.DataColumn("InvoiceNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNote);
                this.columnInvoiceFaxCode = new global::System.Data.DataColumn("InvoiceFaxCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFaxCode);
                this.columnInvoiceFax = new global::System.Data.DataColumn("InvoiceFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFax);
                this.columnProductionNotice = new global::System.Data.DataColumn("ProductionNotice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionNotice);
                this.column備考 = new global::System.Data.DataColumn("備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column備考);
                this.columnInvoiceFaxToName = new global::System.Data.DataColumn("InvoiceFaxToName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFaxToName);
                this.columnInvoiceFaxToContact = new global::System.Data.DataColumn("InvoiceFaxToContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFaxToContact);
                this.columnInvoiceFaxToNumber = new global::System.Data.DataColumn("InvoiceFaxToNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFaxToNumber);
                this.column改版履歴 = new global::System.Data.DataColumn("改版履歴", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column改版履歴);
                this.column受注承認 = new global::System.Data.DataColumn("受注承認", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注承認);
                this.column製造開始日 = new global::System.Data.DataColumn("製造開始日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造開始日);
                this.column製造完了日 = new global::System.Data.DataColumn("製造完了日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column製造完了日);
                this.column出荷完了日 = new global::System.Data.DataColumn("出荷完了日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷完了日);
                this.column納品書発行日 = new global::System.Data.DataColumn("納品書発行日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書発行日);
                this.column送り状発行日 = new global::System.Data.DataColumn("送り状発行日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column送り状発行日);
                this.column確定日時 = new global::System.Data.DataColumn("確定日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column確定日時);
                this.column確定者コード = new global::System.Data.DataColumn("確定者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column確定者コード);
                this.column承認日時 = new global::System.Data.DataColumn("承認日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column承認日時);
                this.column承認者コード = new global::System.Data.DataColumn("承認者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column承認者コード);
                this.columnPaymentConfirmation = new global::System.Data.DataColumn("PaymentConfirmation", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentConfirmation);
                this.columnPaymentReceivedDate = new global::System.Data.DataColumn("PaymentReceivedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentReceivedDate);
                this.columnProductionApprovedDate = new global::System.Data.DataColumn("ProductionApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionApprovedDate);
                this.columnProductionApproverCode = new global::System.Data.DataColumn("ProductionApproverCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductionApproverCode);
                this.columnManufacturingCompletionApprovedDate = new global::System.Data.DataColumn("ManufacturingCompletionApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturingCompletionApprovedDate);
                this.columnManufacturingCompletionApproverCode = new global::System.Data.DataColumn("ManufacturingCompletionApproverCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturingCompletionApproverCode);
                this.column完了承認日 = new global::System.Data.DataColumn("完了承認日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了承認日);
                this.column完了承認者コード = new global::System.Data.DataColumn("完了承認者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了承認者コード);
                this.column受注完了承認 = new global::System.Data.DataColumn("受注完了承認", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注完了承認);
                this.column集計日付 = new global::System.Data.DataColumn("集計日付", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column集計日付);
                this.column請求コード = new global::System.Data.DataColumn("請求コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求コード);
                this.column無効日 = new global::System.Data.DataColumn("無効日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column無効日);
                this.column非表示 = new global::System.Data.DataColumn("非表示", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column非表示);
                this.column登録日 = new global::System.Data.DataColumn("登録日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録日);
                this.columnReceiptComment = new global::System.Data.DataColumn("ReceiptComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptComment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column受注コード,
                                this.column受注版数}, true));
                this.column受注コード.AllowDBNull = false;
                this.column受注コード.MaxLength = 9;
                this.column受注版数.AllowDBNull = false;
                this.column注文番号.MaxLength = 50;
                this.column顧客コード.MaxLength = 8;
                this.column顧客担当者名.MaxLength = 50;
                this.column自社担当者コード.MaxLength = 3;
                this.column自社担当者名.MaxLength = 50;
                this.columnClientCode.MaxLength = 8;
                this.column発送先名.MaxLength = 58;
                this.column発送先郵便番号.MaxLength = 11;
                this.column発送先住所1.MaxLength = 100;
                this.column発送先住所2.MaxLength = 100;
                this.column発送先TEL.MaxLength = 20;
                this.column発送先TEL1.MaxLength = 4;
                this.column発送先TEL2.MaxLength = 4;
                this.column発送先TEL3.MaxLength = 4;
                this.column発送先FAX.MaxLength = 20;
                this.column発送先FAX1.MaxLength = 4;
                this.column発送先FAX2.MaxLength = 4;
                this.column発送先FAX3.MaxLength = 4;
                this.column発送先メールアドレス.MaxLength = 50;
                this.column発送先担当者名.MaxLength = 30;
                this.columnPackingSlipInputCode.MaxLength = 2;
                this.columnPackingSlipInput.MaxLength = 20;
                this.columnPackingSlipNote.MaxLength = 80;
                this.columnReceiptCommentCode.MaxLength = 2;
                this.columnInvoiceInputCode.MaxLength = 2;
                this.columnInvoiceInput.MaxLength = 10;
                this.columnInvoiceNote.MaxLength = 96;
                this.columnInvoiceFaxCode.MaxLength = 2;
                this.columnInvoiceFax.MaxLength = 10;
                this.columnProductionNotice.MaxLength = 560;
                this.column備考.MaxLength = 1073741823;
                this.columnInvoiceFaxToName.MaxLength = 82;
                this.columnInvoiceFaxToContact.MaxLength = 44;
                this.columnInvoiceFaxToNumber.MaxLength = 20;
                this.column改版履歴.MaxLength = 1073741823;
                this.column確定者コード.MaxLength = 3;
                this.column承認者コード.MaxLength = 3;
                this.columnProductionApproverCode.MaxLength = 4;
                this.columnManufacturingCompletionApproverCode.MaxLength = 4;
                this.column完了承認者コード.MaxLength = 3;
                this.columnReceiptComment.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注Row New受注Row() {
                return ((受注Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 受注Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(受注Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.受注RowChanged != null)) {
                    this.受注RowChanged(this, new 受注RowChangeEvent(((受注Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.受注RowChanging != null)) {
                    this.受注RowChanging(this, new 受注RowChangeEvent(((受注Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.受注RowDeleted != null)) {
                    this.受注RowDeleted(this, new 受注RowChangeEvent(((受注Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.受注RowDeleting != null)) {
                    this.受注RowDeleting(this, new 受注RowChangeEvent(((受注Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Remove受注Row(受注Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "受注DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T見積明細DataTable : global::System.Data.TypedTableBase<T見積明細Row> {
            
            private global::System.Data.DataColumn column見積コード;
            
            private global::System.Data.DataColumn column見積版数;
            
            private global::System.Data.DataColumn column明細番号;
            
            private global::System.Data.DataColumn column行番号;
            
            private global::System.Data.DataColumn column品名;
            
            private global::System.Data.DataColumn column型番;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column単位;
            
            private global::System.Data.DataColumn column標準単価;
            
            private global::System.Data.DataColumn column単価;
            
            private global::System.Data.DataColumn column明細備考;
            
            private global::System.Data.DataColumn column単価old;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細DataTable() {
                this.TableName = "T見積明細";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal T見積明細DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected T見積明細DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 見積コードColumn {
                get {
                    return this.column見積コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 見積版数Column {
                get {
                    return this.column見積版数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 明細番号Column {
                get {
                    return this.column明細番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 行番号Column {
                get {
                    return this.column行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 品名Column {
                get {
                    return this.column品名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 型番Column {
                get {
                    return this.column型番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 単位Column {
                get {
                    return this.column単位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 標準単価Column {
                get {
                    return this.column標準単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 単価Column {
                get {
                    return this.column単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 明細備考Column {
                get {
                    return this.column明細備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn 単価oldColumn {
                get {
                    return this.column単価old;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細Row this[int index] {
                get {
                    return ((T見積明細Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event T見積明細RowChangeEventHandler T見積明細RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event T見積明細RowChangeEventHandler T見積明細RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event T見積明細RowChangeEventHandler T見積明細RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event T見積明細RowChangeEventHandler T見積明細RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddT見積明細Row(T見積明細Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細Row AddT見積明細Row(string 見積コード, short 見積版数, short 明細番号, short 行番号, string 品名, string 型番, decimal 数量, string 単位, int 標準単価, decimal 単価, string 明細備考, int 単価old) {
                T見積明細Row rowT見積明細Row = ((T見積明細Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        見積コード,
                        見積版数,
                        明細番号,
                        行番号,
                        品名,
                        型番,
                        数量,
                        単位,
                        標準単価,
                        単価,
                        明細備考,
                        単価old};
                rowT見積明細Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT見積明細Row);
                return rowT見積明細Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細Row FindBy見積コード見積版数明細番号(string 見積コード, short 見積版数, short 明細番号) {
                return ((T見積明細Row)(this.Rows.Find(new object[] {
                            見積コード,
                            見積版数,
                            明細番号})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T見積明細DataTable cln = ((T見積明細DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T見積明細DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.column見積コード = base.Columns["見積コード"];
                this.column見積版数 = base.Columns["見積版数"];
                this.column明細番号 = base.Columns["明細番号"];
                this.column行番号 = base.Columns["行番号"];
                this.column品名 = base.Columns["品名"];
                this.column型番 = base.Columns["型番"];
                this.column数量 = base.Columns["数量"];
                this.column単位 = base.Columns["単位"];
                this.column標準単価 = base.Columns["標準単価"];
                this.column単価 = base.Columns["単価"];
                this.column明細備考 = base.Columns["明細備考"];
                this.column単価old = base.Columns["単価old"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.column見積コード = new global::System.Data.DataColumn("見積コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column見積コード);
                this.column見積版数 = new global::System.Data.DataColumn("見積版数", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column見積版数);
                this.column明細番号 = new global::System.Data.DataColumn("明細番号", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細番号);
                this.column行番号 = new global::System.Data.DataColumn("行番号", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column行番号);
                this.column品名 = new global::System.Data.DataColumn("品名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品名);
                this.column型番 = new global::System.Data.DataColumn("型番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column型番);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column単位 = new global::System.Data.DataColumn("単位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位);
                this.column標準単価 = new global::System.Data.DataColumn("標準単価", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column標準単価);
                this.column単価 = new global::System.Data.DataColumn("単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単価);
                this.column明細備考 = new global::System.Data.DataColumn("明細備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細備考);
                this.column単価old = new global::System.Data.DataColumn("単価old", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単価old);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column見積コード,
                                this.column見積版数,
                                this.column明細番号}, true));
                this.column見積コード.AllowDBNull = false;
                this.column見積コード.MaxLength = 11;
                this.column見積版数.AllowDBNull = false;
                this.column明細番号.AllowDBNull = false;
                this.column品名.MaxLength = 50;
                this.column型番.MaxLength = 50;
                this.column単位.MaxLength = 8;
                this.column明細備考.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細Row NewT見積明細Row() {
                return ((T見積明細Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T見積明細Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T見積明細Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T見積明細RowChanged != null)) {
                    this.T見積明細RowChanged(this, new T見積明細RowChangeEvent(((T見積明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T見積明細RowChanging != null)) {
                    this.T見積明細RowChanging(this, new T見積明細RowChangeEvent(((T見積明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T見積明細RowDeleted != null)) {
                    this.T見積明細RowDeleted(this, new T見積明細RowChangeEvent(((T見積明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T見積明細RowDeleting != null)) {
                    this.T見積明細RowDeleting(this, new T見積明細RowChangeEvent(((T見積明細Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveT見積明細Row(T見積明細Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T見積明細DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 受注明細Row : global::System.Data.DataRow {
            
            private 受注明細DataTable table受注明細;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal 受注明細Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table受注明細 = ((受注明細DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 受注明細コード {
                get {
                    return ((int)(this[this.table受注明細.受注明細コードColumn]));
                }
                set {
                    this[this.table受注明細.受注明細コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 受注コード {
                get {
                    return ((string)(this[this.table受注明細.受注コードColumn]));
                }
                set {
                    this[this.table受注明細.受注コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 受注版数 {
                get {
                    return ((short)(this[this.table受注明細.受注版数Column]));
                }
                set {
                    this[this.table受注明細.受注版数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DetailNumber {
                get {
                    try {
                        return ((int)(this[this.table受注明細.DetailNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'DetailNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.DetailNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 明細番号 {
                get {
                    try {
                        return ((int)(this[this.table受注明細.明細番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'明細番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.明細番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 商品コード {
                get {
                    try {
                        return ((string)(this[this.table受注明細.商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 受注区分コード {
                get {
                    return ((byte)(this[this.table受注明細.受注区分コードColumn]));
                }
                set {
                    this[this.table受注明細.受注区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ラインコード {
                get {
                    try {
                        return ((string)(this[this.table受注明細.ラインコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ラインコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ラインコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 製造先コード {
                get {
                    try {
                        return ((byte)(this[this.table受注明細.製造先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'製造先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.製造先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 売上区分コード {
                get {
                    return ((byte)(this[this.table受注明細.売上区分コードColumn]));
                }
                set {
                    this[this.table受注明細.売上区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte シリアル番号付加 {
                get {
                    try {
                        return ((byte)(this[this.table受注明細.シリアル番号付加Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'シリアル番号付加\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.シリアル番号付加Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 品名 {
                get {
                    try {
                        return ((string)(this[this.table受注明細.品名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'品名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.品名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string シリーズ名 {
                get {
                    try {
                        return ((string)(this[this.table受注明細.シリーズ名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'シリーズ名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.シリーズ名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 型番 {
                get {
                    return ((string)(this[this.table受注明細.型番Column]));
                }
                set {
                    this[this.table受注明細.型番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.table受注明細.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ClientName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 入力仕様 {
                get {
                    try {
                        return ((string)(this[this.table受注明細.入力仕様Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'入力仕様\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.入力仕様Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal 単価 {
                get {
                    return ((decimal)(this[this.table受注明細.単価Column]));
                }
                set {
                    this[this.table受注明細.単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal 原価 {
                get {
                    try {
                        return ((decimal)(this[this.table受注明細.原価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'原価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.原価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int シリアル番号1 {
                get {
                    try {
                        return ((int)(this[this.table受注明細.シリアル番号1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'シリアル番号1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.シリアル番号1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int シリアル番号2 {
                get {
                    try {
                        return ((int)(this[this.table受注明細.シリアル番号2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'シリアル番号2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.シリアル番号2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 数量 {
                get {
                    return ((int)(this[this.table受注明細.数量Column]));
                }
                set {
                    this[this.table受注明細.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 単位コード {
                get {
                    try {
                        return ((byte)(this[this.table受注明細.単位コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'単位コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.単位コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MeasureName {
                get {
                    try {
                        return ((string)(this[this.table受注明細.MeasureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'MeasureName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.MeasureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerSerialNumberFrom {
                get {
                    try {
                        return ((string)(this[this.table受注明細.CustomerSerialNumberFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'CustomerSerialNumberFrom\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.CustomerSerialNumberFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerSerialNumberTo {
                get {
                    try {
                        return ((string)(this[this.table受注明細.CustomerSerialNumberToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'CustomerSerialNumberTo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.CustomerSerialNumberToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CustomerSerialNumberRequired {
                get {
                    try {
                        return ((int)(this[this.table受注明細.CustomerSerialNumberRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'CustomerSerialNumberRequired\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.CustomerSerialNumberRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettingSheet {
                get {
                    try {
                        return ((string)(this[this.table受注明細.SettingSheetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'SettingSheet\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.SettingSheetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InspectionReport {
                get {
                    try {
                        return ((string)(this[this.table受注明細.InspectionReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'InspectionReport\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.InspectionReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Specification {
                get {
                    try {
                        return ((string)(this[this.table受注明細.SpecificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'Specification\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.SpecificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ParameterSheet {
                get {
                    try {
                        return ((string)(this[this.table受注明細.ParameterSheetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ParameterSheet\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ParameterSheetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short YnEnterInvoice {
                get {
                    try {
                        return ((short)(this[this.table受注明細.YnEnterInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'YnEnterInvoice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.YnEnterInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short YnEnterStateOfDelivery {
                get {
                    try {
                        return ((short)(this[this.table受注明細.YnEnterStateOfDeliveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'YnEnterStateOfDelivery\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.YnEnterStateOfDeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short YnSendInvoiceFax {
                get {
                    try {
                        return ((short)(this[this.table受注明細.YnSendInvoiceFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'YnSendInvoiceFax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.YnSendInvoiceFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 備考 {
                get {
                    try {
                        return ((string)(this[this.table受注明細.備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float 順序 {
                get {
                    try {
                        return ((float)(this[this.table受注明細.順序Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'順序\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.順序Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 在庫締めコード {
                get {
                    try {
                        return ((int)(this[this.table受注明細.在庫締めコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'在庫締めコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.在庫締めコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'OrderDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StoreDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.StoreDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'StoreDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.StoreDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造予定日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.製造予定日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'製造予定日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.製造予定日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造予定更新日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.製造予定更新日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'製造予定更新日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.製造予定更新日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造開始日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.製造開始日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'製造開始日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.製造開始日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造終了日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.製造終了日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'製造終了日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.製造終了日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 出荷予定日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.出荷予定日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'出荷予定日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.出荷予定日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 出荷開始日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.出荷開始日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'出荷開始日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.出荷開始日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 出荷終了日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.出荷終了日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'出荷終了日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.出荷終了日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ProductionPlanningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.ProductionPlanningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ProductionPlanningDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ProductionPlanningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ProductionBeginDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.ProductionBeginDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ProductionBeginDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ProductionBeginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ProductionEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.ProductionEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ProductionEndDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ProductionEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ProductionApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注明細.ProductionApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ProductionApprovedDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ProductionApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductionApproverCode {
                get {
                    try {
                        return ((string)(this[this.table受注明細.ProductionApproverCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注明細\' にある列 \'ProductionApproverCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注明細.ProductionApproverCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDetailNumberNull() {
                return this.IsNull(this.table受注明細.DetailNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDetailNumberNull() {
                this[this.table受注明細.DetailNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is明細番号Null() {
                return this.IsNull(this.table受注明細.明細番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set明細番号Null() {
                this[this.table受注明細.明細番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is商品コードNull() {
                return this.IsNull(this.table受注明細.商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set商品コードNull() {
                this[this.table受注明細.商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsラインコードNull() {
                return this.IsNull(this.table受注明細.ラインコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetラインコードNull() {
                this[this.table受注明細.ラインコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造先コードNull() {
                return this.IsNull(this.table受注明細.製造先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造先コードNull() {
                this[this.table受注明細.製造先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isシリアル番号付加Null() {
                return this.IsNull(this.table受注明細.シリアル番号付加Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setシリアル番号付加Null() {
                this[this.table受注明細.シリアル番号付加Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is品名Null() {
                return this.IsNull(this.table受注明細.品名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set品名Null() {
                this[this.table受注明細.品名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isシリーズ名Null() {
                return this.IsNull(this.table受注明細.シリーズ名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setシリーズ名Null() {
                this[this.table受注明細.シリーズ名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.table受注明細.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClientNameNull() {
                this[this.table受注明細.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is入力仕様Null() {
                return this.IsNull(this.table受注明細.入力仕様Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set入力仕様Null() {
                this[this.table受注明細.入力仕様Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is原価Null() {
                return this.IsNull(this.table受注明細.原価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set原価Null() {
                this[this.table受注明細.原価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isシリアル番号1Null() {
                return this.IsNull(this.table受注明細.シリアル番号1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setシリアル番号1Null() {
                this[this.table受注明細.シリアル番号1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isシリアル番号2Null() {
                return this.IsNull(this.table受注明細.シリアル番号2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setシリアル番号2Null() {
                this[this.table受注明細.シリアル番号2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is単位コードNull() {
                return this.IsNull(this.table受注明細.単位コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set単位コードNull() {
                this[this.table受注明細.単位コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasureNameNull() {
                return this.IsNull(this.table受注明細.MeasureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasureNameNull() {
                this[this.table受注明細.MeasureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerSerialNumberFromNull() {
                return this.IsNull(this.table受注明細.CustomerSerialNumberFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerSerialNumberFromNull() {
                this[this.table受注明細.CustomerSerialNumberFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerSerialNumberToNull() {
                return this.IsNull(this.table受注明細.CustomerSerialNumberToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerSerialNumberToNull() {
                this[this.table受注明細.CustomerSerialNumberToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerSerialNumberRequiredNull() {
                return this.IsNull(this.table受注明細.CustomerSerialNumberRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerSerialNumberRequiredNull() {
                this[this.table受注明細.CustomerSerialNumberRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettingSheetNull() {
                return this.IsNull(this.table受注明細.SettingSheetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettingSheetNull() {
                this[this.table受注明細.SettingSheetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInspectionReportNull() {
                return this.IsNull(this.table受注明細.InspectionReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInspectionReportNull() {
                this[this.table受注明細.InspectionReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSpecificationNull() {
                return this.IsNull(this.table受注明細.SpecificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSpecificationNull() {
                this[this.table受注明細.SpecificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsParameterSheetNull() {
                return this.IsNull(this.table受注明細.ParameterSheetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetParameterSheetNull() {
                this[this.table受注明細.ParameterSheetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYnEnterInvoiceNull() {
                return this.IsNull(this.table受注明細.YnEnterInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYnEnterInvoiceNull() {
                this[this.table受注明細.YnEnterInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYnEnterStateOfDeliveryNull() {
                return this.IsNull(this.table受注明細.YnEnterStateOfDeliveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYnEnterStateOfDeliveryNull() {
                this[this.table受注明細.YnEnterStateOfDeliveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYnSendInvoiceFaxNull() {
                return this.IsNull(this.table受注明細.YnSendInvoiceFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYnSendInvoiceFaxNull() {
                this[this.table受注明細.YnSendInvoiceFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is備考Null() {
                return this.IsNull(this.table受注明細.備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set備考Null() {
                this[this.table受注明細.備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is順序Null() {
                return this.IsNull(this.table受注明細.順序Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set順序Null() {
                this[this.table受注明細.順序Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is在庫締めコードNull() {
                return this.IsNull(this.table受注明細.在庫締めコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set在庫締めコードNull() {
                this[this.table受注明細.在庫締めコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOrderDateNull() {
                return this.IsNull(this.table受注明細.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOrderDateNull() {
                this[this.table受注明細.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStoreDateNull() {
                return this.IsNull(this.table受注明細.StoreDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStoreDateNull() {
                this[this.table受注明細.StoreDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造予定日Null() {
                return this.IsNull(this.table受注明細.製造予定日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造予定日Null() {
                this[this.table受注明細.製造予定日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造予定更新日Null() {
                return this.IsNull(this.table受注明細.製造予定更新日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造予定更新日Null() {
                this[this.table受注明細.製造予定更新日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造開始日Null() {
                return this.IsNull(this.table受注明細.製造開始日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造開始日Null() {
                this[this.table受注明細.製造開始日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造終了日Null() {
                return this.IsNull(this.table受注明細.製造終了日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造終了日Null() {
                this[this.table受注明細.製造終了日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is出荷予定日Null() {
                return this.IsNull(this.table受注明細.出荷予定日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set出荷予定日Null() {
                this[this.table受注明細.出荷予定日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is出荷開始日Null() {
                return this.IsNull(this.table受注明細.出荷開始日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set出荷開始日Null() {
                this[this.table受注明細.出荷開始日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is出荷終了日Null() {
                return this.IsNull(this.table受注明細.出荷終了日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set出荷終了日Null() {
                this[this.table受注明細.出荷終了日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionPlanningDateNull() {
                return this.IsNull(this.table受注明細.ProductionPlanningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionPlanningDateNull() {
                this[this.table受注明細.ProductionPlanningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionBeginDateNull() {
                return this.IsNull(this.table受注明細.ProductionBeginDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionBeginDateNull() {
                this[this.table受注明細.ProductionBeginDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionEndDateNull() {
                return this.IsNull(this.table受注明細.ProductionEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionEndDateNull() {
                this[this.table受注明細.ProductionEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionApprovedDateNull() {
                return this.IsNull(this.table受注明細.ProductionApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionApprovedDateNull() {
                this[this.table受注明細.ProductionApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionApproverCodeNull() {
                return this.IsNull(this.table受注明細.ProductionApproverCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionApproverCodeNull() {
                this[this.table受注明細.ProductionApproverCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 受注Row : global::System.Data.DataRow {
            
            private 受注DataTable table受注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal 受注Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table受注 = ((受注DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 受注コード {
                get {
                    return ((string)(this[this.table受注.受注コードColumn]));
                }
                set {
                    this[this.table受注.受注コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 受注版数 {
                get {
                    return ((short)(this[this.table受注.受注版数Column]));
                }
                set {
                    this[this.table受注.受注版数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 承認日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.承認日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'承認日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.承認日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 受注日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.受注日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'受注日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.受注日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 受注納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.受注納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'受注納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.受注納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 出荷予定日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.出荷予定日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'出荷予定日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.出荷予定日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 注文番号 {
                get {
                    try {
                        return ((string)(this[this.table受注.注文番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'注文番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.注文番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 顧客コード {
                get {
                    try {
                        return ((string)(this[this.table受注.顧客コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'顧客コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.顧客コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 顧客担当者名 {
                get {
                    try {
                        return ((string)(this[this.table受注.顧客担当者名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'顧客担当者名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.顧客担当者名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ClosingDay {
                get {
                    try {
                        return ((int)(this[this.table受注.ClosingDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ClosingDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ClosingDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 自社担当者コード {
                get {
                    try {
                        return ((string)(this[this.table受注.自社担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'自社担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.自社担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 自社担当者名 {
                get {
                    try {
                        return ((string)(this[this.table受注.自社担当者名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'自社担当者名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.自社担当者名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ClientCode {
                get {
                    try {
                        return ((string)(this[this.table受注.ClientCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ClientCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ClientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 発送方法コード {
                get {
                    try {
                        return ((byte)(this[this.table受注.発送方法コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送方法コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送方法コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short ShippingGroupCode {
                get {
                    try {
                        return ((short)(this[this.table受注.ShippingGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ShippingGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ShippingGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先名 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先郵便番号 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先郵便番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先郵便番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先郵便番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先住所1 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先住所1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先住所1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先住所1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先住所2 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先住所2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先住所2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先住所2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先TEL {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先TELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先TEL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先TEL1 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先TEL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先TEL1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先TEL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先TEL2 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先TEL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先TEL2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先TEL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先TEL3 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先TEL3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先TEL3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先TEL3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先FAX {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先FAX\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先FAX1 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先FAX1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先FAX1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先FAX1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先FAX2 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先FAX2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先FAX2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先FAX2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先FAX3 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先FAX3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先FAX3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先FAX3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先メールアドレス {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先メールアドレスColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先メールアドレス\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先メールアドレスColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 発送先担当者名 {
                get {
                    try {
                        return ((string)(this[this.table受注.発送先担当者名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'発送先担当者名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.発送先担当者名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 納品書送付コード {
                get {
                    try {
                        return ((byte)(this[this.table受注.納品書送付コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'納品書送付コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.納品書送付コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 請求書送付コード {
                get {
                    try {
                        return ((byte)(this[this.table受注.請求書送付コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'請求書送付コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.請求書送付コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 請求予定日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.請求予定日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'請求予定日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.請求予定日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TaxRate {
                get {
                    try {
                        return ((decimal)(this[this.table受注.TaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'TaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.TaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte TaxCalcCode {
                get {
                    try {
                        return ((byte)(this[this.table受注.TaxCalcCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'TaxCalcCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.TaxCalcCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 税端数処理 {
                get {
                    try {
                        return ((byte)(this[this.table受注.税端数処理Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'税端数処理\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.税端数処理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PackingSlipInputCode {
                get {
                    try {
                        return ((string)(this[this.table受注.PackingSlipInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'PackingSlipInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.PackingSlipInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PackingSlipInput {
                get {
                    try {
                        return ((string)(this[this.table受注.PackingSlipInputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'PackingSlipInput\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.PackingSlipInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PackingSlipNote {
                get {
                    try {
                        return ((string)(this[this.table受注.PackingSlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'PackingSlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.PackingSlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ReceiptCommentCode {
                get {
                    try {
                        return ((string)(this[this.table受注.ReceiptCommentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ReceiptCommentCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ReceiptCommentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceInputCode {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceInput {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceInputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceInput\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceNote {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceFaxCode {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceFaxCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceFaxCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceFaxCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceFax {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceFax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductionNotice {
                get {
                    try {
                        return ((string)(this[this.table受注.ProductionNoticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ProductionNotice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ProductionNoticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 備考 {
                get {
                    try {
                        return ((string)(this[this.table受注.備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceFaxToName {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceFaxToNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceFaxToName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceFaxToNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceFaxToContact {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceFaxToContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceFaxToContact\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceFaxToContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceFaxToNumber {
                get {
                    try {
                        return ((string)(this[this.table受注.InvoiceFaxToNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'InvoiceFaxToNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.InvoiceFaxToNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 改版履歴 {
                get {
                    try {
                        return ((string)(this[this.table受注.改版履歴Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'改版履歴\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.改版履歴Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 受注承認 {
                get {
                    try {
                        return ((byte)(this[this.table受注.受注承認Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'受注承認\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.受注承認Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造開始日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.製造開始日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'製造開始日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.製造開始日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 製造完了日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.製造完了日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'製造完了日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.製造完了日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 出荷完了日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.出荷完了日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'出荷完了日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.出荷完了日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 納品書発行日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.納品書発行日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'納品書発行日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.納品書発行日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 送り状発行日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.送り状発行日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'送り状発行日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.送り状発行日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 確定日時 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.確定日時Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'確定日時\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.確定日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 確定者コード {
                get {
                    try {
                        return ((string)(this[this.table受注.確定者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'確定者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.確定者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 承認日時 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.承認日時Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'承認日時\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.承認日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 承認者コード {
                get {
                    try {
                        return ((string)(this[this.table受注.承認者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'承認者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.承認者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short PaymentConfirmation {
                get {
                    try {
                        return ((short)(this[this.table受注.PaymentConfirmationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'PaymentConfirmation\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.PaymentConfirmationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime PaymentReceivedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.PaymentReceivedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'PaymentReceivedDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.PaymentReceivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ProductionApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.ProductionApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ProductionApprovedDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ProductionApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductionApproverCode {
                get {
                    try {
                        return ((string)(this[this.table受注.ProductionApproverCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ProductionApproverCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ProductionApproverCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ManufacturingCompletionApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.ManufacturingCompletionApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ManufacturingCompletionApprovedDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ManufacturingCompletionApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ManufacturingCompletionApproverCode {
                get {
                    try {
                        return ((string)(this[this.table受注.ManufacturingCompletionApproverCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ManufacturingCompletionApproverCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ManufacturingCompletionApproverCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 完了承認日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.完了承認日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'完了承認日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.完了承認日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 完了承認者コード {
                get {
                    try {
                        return ((string)(this[this.table受注.完了承認者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'完了承認者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.完了承認者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte 受注完了承認 {
                get {
                    try {
                        return ((byte)(this[this.table受注.受注完了承認Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'受注完了承認\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.受注完了承認Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 集計日付 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.集計日付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'集計日付\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.集計日付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 請求コード {
                get {
                    try {
                        return ((int)(this[this.table受注.請求コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'請求コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.請求コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 無効日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.無効日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'無効日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.無効日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 非表示 {
                get {
                    try {
                        return ((short)(this[this.table受注.非表示Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'非表示\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.非表示Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime 登録日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table受注.登録日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'登録日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.登録日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ReceiptComment {
                get {
                    try {
                        return ((string)(this[this.table受注.ReceiptCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'受注\' にある列 \'ReceiptComment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.table受注.ReceiptCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is承認日Null() {
                return this.IsNull(this.table受注.承認日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set承認日Null() {
                this[this.table受注.承認日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is受注日Null() {
                return this.IsNull(this.table受注.受注日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set受注日Null() {
                this[this.table受注.受注日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is受注納期Null() {
                return this.IsNull(this.table受注.受注納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set受注納期Null() {
                this[this.table受注.受注納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is出荷予定日Null() {
                return this.IsNull(this.table受注.出荷予定日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set出荷予定日Null() {
                this[this.table受注.出荷予定日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is注文番号Null() {
                return this.IsNull(this.table受注.注文番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set注文番号Null() {
                this[this.table受注.注文番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is顧客コードNull() {
                return this.IsNull(this.table受注.顧客コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set顧客コードNull() {
                this[this.table受注.顧客コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is顧客担当者名Null() {
                return this.IsNull(this.table受注.顧客担当者名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set顧客担当者名Null() {
                this[this.table受注.顧客担当者名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClosingDayNull() {
                return this.IsNull(this.table受注.ClosingDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClosingDayNull() {
                this[this.table受注.ClosingDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is自社担当者コードNull() {
                return this.IsNull(this.table受注.自社担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set自社担当者コードNull() {
                this[this.table受注.自社担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is自社担当者名Null() {
                return this.IsNull(this.table受注.自社担当者名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set自社担当者名Null() {
                this[this.table受注.自社担当者名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClientCodeNull() {
                return this.IsNull(this.table受注.ClientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClientCodeNull() {
                this[this.table受注.ClientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送方法コードNull() {
                return this.IsNull(this.table受注.発送方法コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送方法コードNull() {
                this[this.table受注.発送方法コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsShippingGroupCodeNull() {
                return this.IsNull(this.table受注.ShippingGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetShippingGroupCodeNull() {
                this[this.table受注.ShippingGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先名Null() {
                return this.IsNull(this.table受注.発送先名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先名Null() {
                this[this.table受注.発送先名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先郵便番号Null() {
                return this.IsNull(this.table受注.発送先郵便番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先郵便番号Null() {
                this[this.table受注.発送先郵便番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先住所1Null() {
                return this.IsNull(this.table受注.発送先住所1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先住所1Null() {
                this[this.table受注.発送先住所1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先住所2Null() {
                return this.IsNull(this.table受注.発送先住所2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先住所2Null() {
                this[this.table受注.発送先住所2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先TELNull() {
                return this.IsNull(this.table受注.発送先TELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先TELNull() {
                this[this.table受注.発送先TELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先TEL1Null() {
                return this.IsNull(this.table受注.発送先TEL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先TEL1Null() {
                this[this.table受注.発送先TEL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先TEL2Null() {
                return this.IsNull(this.table受注.発送先TEL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先TEL2Null() {
                this[this.table受注.発送先TEL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先TEL3Null() {
                return this.IsNull(this.table受注.発送先TEL3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先TEL3Null() {
                this[this.table受注.発送先TEL3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先FAXNull() {
                return this.IsNull(this.table受注.発送先FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先FAXNull() {
                this[this.table受注.発送先FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先FAX1Null() {
                return this.IsNull(this.table受注.発送先FAX1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先FAX1Null() {
                this[this.table受注.発送先FAX1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先FAX2Null() {
                return this.IsNull(this.table受注.発送先FAX2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先FAX2Null() {
                this[this.table受注.発送先FAX2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先FAX3Null() {
                return this.IsNull(this.table受注.発送先FAX3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先FAX3Null() {
                this[this.table受注.発送先FAX3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先メールアドレスNull() {
                return this.IsNull(this.table受注.発送先メールアドレスColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先メールアドレスNull() {
                this[this.table受注.発送先メールアドレスColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is発送先担当者名Null() {
                return this.IsNull(this.table受注.発送先担当者名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set発送先担当者名Null() {
                this[this.table受注.発送先担当者名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is納品書送付コードNull() {
                return this.IsNull(this.table受注.納品書送付コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set納品書送付コードNull() {
                this[this.table受注.納品書送付コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is請求書送付コードNull() {
                return this.IsNull(this.table受注.請求書送付コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set請求書送付コードNull() {
                this[this.table受注.請求書送付コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is請求予定日Null() {
                return this.IsNull(this.table受注.請求予定日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set請求予定日Null() {
                this[this.table受注.請求予定日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTaxRateNull() {
                return this.IsNull(this.table受注.TaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTaxRateNull() {
                this[this.table受注.TaxRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTaxCalcCodeNull() {
                return this.IsNull(this.table受注.TaxCalcCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTaxCalcCodeNull() {
                this[this.table受注.TaxCalcCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is税端数処理Null() {
                return this.IsNull(this.table受注.税端数処理Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set税端数処理Null() {
                this[this.table受注.税端数処理Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPackingSlipInputCodeNull() {
                return this.IsNull(this.table受注.PackingSlipInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPackingSlipInputCodeNull() {
                this[this.table受注.PackingSlipInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPackingSlipInputNull() {
                return this.IsNull(this.table受注.PackingSlipInputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPackingSlipInputNull() {
                this[this.table受注.PackingSlipInputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPackingSlipNoteNull() {
                return this.IsNull(this.table受注.PackingSlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPackingSlipNoteNull() {
                this[this.table受注.PackingSlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReceiptCommentCodeNull() {
                return this.IsNull(this.table受注.ReceiptCommentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReceiptCommentCodeNull() {
                this[this.table受注.ReceiptCommentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceInputCodeNull() {
                return this.IsNull(this.table受注.InvoiceInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceInputCodeNull() {
                this[this.table受注.InvoiceInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceInputNull() {
                return this.IsNull(this.table受注.InvoiceInputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceInputNull() {
                this[this.table受注.InvoiceInputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceNoteNull() {
                return this.IsNull(this.table受注.InvoiceNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceNoteNull() {
                this[this.table受注.InvoiceNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceFaxCodeNull() {
                return this.IsNull(this.table受注.InvoiceFaxCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceFaxCodeNull() {
                this[this.table受注.InvoiceFaxCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceFaxNull() {
                return this.IsNull(this.table受注.InvoiceFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceFaxNull() {
                this[this.table受注.InvoiceFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionNoticeNull() {
                return this.IsNull(this.table受注.ProductionNoticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionNoticeNull() {
                this[this.table受注.ProductionNoticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is備考Null() {
                return this.IsNull(this.table受注.備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set備考Null() {
                this[this.table受注.備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceFaxToNameNull() {
                return this.IsNull(this.table受注.InvoiceFaxToNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceFaxToNameNull() {
                this[this.table受注.InvoiceFaxToNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceFaxToContactNull() {
                return this.IsNull(this.table受注.InvoiceFaxToContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceFaxToContactNull() {
                this[this.table受注.InvoiceFaxToContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceFaxToNumberNull() {
                return this.IsNull(this.table受注.InvoiceFaxToNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceFaxToNumberNull() {
                this[this.table受注.InvoiceFaxToNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is改版履歴Null() {
                return this.IsNull(this.table受注.改版履歴Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set改版履歴Null() {
                this[this.table受注.改版履歴Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is受注承認Null() {
                return this.IsNull(this.table受注.受注承認Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set受注承認Null() {
                this[this.table受注.受注承認Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造開始日Null() {
                return this.IsNull(this.table受注.製造開始日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造開始日Null() {
                this[this.table受注.製造開始日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is製造完了日Null() {
                return this.IsNull(this.table受注.製造完了日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set製造完了日Null() {
                this[this.table受注.製造完了日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is出荷完了日Null() {
                return this.IsNull(this.table受注.出荷完了日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set出荷完了日Null() {
                this[this.table受注.出荷完了日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is納品書発行日Null() {
                return this.IsNull(this.table受注.納品書発行日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set納品書発行日Null() {
                this[this.table受注.納品書発行日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is送り状発行日Null() {
                return this.IsNull(this.table受注.送り状発行日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set送り状発行日Null() {
                this[this.table受注.送り状発行日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is確定日時Null() {
                return this.IsNull(this.table受注.確定日時Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set確定日時Null() {
                this[this.table受注.確定日時Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is確定者コードNull() {
                return this.IsNull(this.table受注.確定者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set確定者コードNull() {
                this[this.table受注.確定者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is承認日時Null() {
                return this.IsNull(this.table受注.承認日時Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set承認日時Null() {
                this[this.table受注.承認日時Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is承認者コードNull() {
                return this.IsNull(this.table受注.承認者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set承認者コードNull() {
                this[this.table受注.承認者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPaymentConfirmationNull() {
                return this.IsNull(this.table受注.PaymentConfirmationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPaymentConfirmationNull() {
                this[this.table受注.PaymentConfirmationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPaymentReceivedDateNull() {
                return this.IsNull(this.table受注.PaymentReceivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPaymentReceivedDateNull() {
                this[this.table受注.PaymentReceivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionApprovedDateNull() {
                return this.IsNull(this.table受注.ProductionApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionApprovedDateNull() {
                this[this.table受注.ProductionApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductionApproverCodeNull() {
                return this.IsNull(this.table受注.ProductionApproverCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductionApproverCodeNull() {
                this[this.table受注.ProductionApproverCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsManufacturingCompletionApprovedDateNull() {
                return this.IsNull(this.table受注.ManufacturingCompletionApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetManufacturingCompletionApprovedDateNull() {
                this[this.table受注.ManufacturingCompletionApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsManufacturingCompletionApproverCodeNull() {
                return this.IsNull(this.table受注.ManufacturingCompletionApproverCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetManufacturingCompletionApproverCodeNull() {
                this[this.table受注.ManufacturingCompletionApproverCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is完了承認日Null() {
                return this.IsNull(this.table受注.完了承認日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set完了承認日Null() {
                this[this.table受注.完了承認日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is完了承認者コードNull() {
                return this.IsNull(this.table受注.完了承認者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set完了承認者コードNull() {
                this[this.table受注.完了承認者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is受注完了承認Null() {
                return this.IsNull(this.table受注.受注完了承認Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set受注完了承認Null() {
                this[this.table受注.受注完了承認Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is集計日付Null() {
                return this.IsNull(this.table受注.集計日付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set集計日付Null() {
                this[this.table受注.集計日付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is請求コードNull() {
                return this.IsNull(this.table受注.請求コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set請求コードNull() {
                this[this.table受注.請求コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is無効日Null() {
                return this.IsNull(this.table受注.無効日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set無効日Null() {
                this[this.table受注.無効日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is非表示Null() {
                return this.IsNull(this.table受注.非表示Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set非表示Null() {
                this[this.table受注.非表示Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is登録日Null() {
                return this.IsNull(this.table受注.登録日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set登録日Null() {
                this[this.table受注.登録日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReceiptCommentNull() {
                return this.IsNull(this.table受注.ReceiptCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReceiptCommentNull() {
                this[this.table受注.ReceiptCommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T見積明細Row : global::System.Data.DataRow {
            
            private T見積明細DataTable tableT見積明細;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal T見積明細Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT見積明細 = ((T見積明細DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 見積コード {
                get {
                    return ((string)(this[this.tableT見積明細.見積コードColumn]));
                }
                set {
                    this[this.tableT見積明細.見積コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 見積版数 {
                get {
                    return ((short)(this[this.tableT見積明細.見積版数Column]));
                }
                set {
                    this[this.tableT見積明細.見積版数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 明細番号 {
                get {
                    return ((short)(this[this.tableT見積明細.明細番号Column]));
                }
                set {
                    this[this.tableT見積明細.明細番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short 行番号 {
                get {
                    try {
                        return ((short)(this[this.tableT見積明細.行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 品名 {
                get {
                    try {
                        return ((string)(this[this.tableT見積明細.品名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'品名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.品名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 型番 {
                get {
                    try {
                        return ((string)(this[this.tableT見積明細.型番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'型番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.型番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableT見積明細.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'数量\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 単位 {
                get {
                    try {
                        return ((string)(this[this.tableT見積明細.単位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'単位\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.単位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 標準単価 {
                get {
                    try {
                        return ((int)(this[this.tableT見積明細.標準単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'標準単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.標準単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal 単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT見積明細.単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string 明細備考 {
                get {
                    try {
                        return ((string)(this[this.tableT見積明細.明細備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'明細備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.明細備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int 単価old {
                get {
                    try {
                        return ((int)(this[this.tableT見積明細.単価oldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T見積明細\' にある列 \'単価old\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT見積明細.単価oldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is行番号Null() {
                return this.IsNull(this.tableT見積明細.行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set行番号Null() {
                this[this.tableT見積明細.行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is品名Null() {
                return this.IsNull(this.tableT見積明細.品名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set品名Null() {
                this[this.tableT見積明細.品名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is型番Null() {
                return this.IsNull(this.tableT見積明細.型番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set型番Null() {
                this[this.tableT見積明細.型番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is数量Null() {
                return this.IsNull(this.tableT見積明細.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set数量Null() {
                this[this.tableT見積明細.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is単位Null() {
                return this.IsNull(this.tableT見積明細.単位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set単位Null() {
                this[this.tableT見積明細.単位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is標準単価Null() {
                return this.IsNull(this.tableT見積明細.標準単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set標準単価Null() {
                this[this.tableT見積明細.標準単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is単価Null() {
                return this.IsNull(this.tableT見積明細.単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set単価Null() {
                this[this.tableT見積明細.単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is明細備考Null() {
                return this.IsNull(this.tableT見積明細.明細備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set明細備考Null() {
                this[this.tableT見積明細.明細備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is単価oldNull() {
                return this.IsNull(this.tableT見積明細.単価oldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set単価oldNull() {
                this[this.tableT見積明細.単価oldColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class 受注明細RowChangeEvent : global::System.EventArgs {
            
            private 受注明細Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細RowChangeEvent(受注明細Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注明細Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class 受注RowChangeEvent : global::System.EventArgs {
            
            private 受注Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注RowChangeEvent(受注Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public 受注Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class T見積明細RowChangeEvent : global::System.EventArgs {
            
            private T見積明細Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細RowChangeEvent(T見積明細Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public T見積明細Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace u_net.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 受注明細TableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlTransaction _transaction;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public 受注明細TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "受注明細";
            tableMapping.ColumnMappings.Add("受注明細コード", "受注明細コード");
            tableMapping.ColumnMappings.Add("受注コード", "受注コード");
            tableMapping.ColumnMappings.Add("受注版数", "受注版数");
            tableMapping.ColumnMappings.Add("DetailNumber", "DetailNumber");
            tableMapping.ColumnMappings.Add("明細番号", "明細番号");
            tableMapping.ColumnMappings.Add("商品コード", "商品コード");
            tableMapping.ColumnMappings.Add("受注区分コード", "受注区分コード");
            tableMapping.ColumnMappings.Add("ラインコード", "ラインコード");
            tableMapping.ColumnMappings.Add("製造先コード", "製造先コード");
            tableMapping.ColumnMappings.Add("売上区分コード", "売上区分コード");
            tableMapping.ColumnMappings.Add("シリアル番号付加", "シリアル番号付加");
            tableMapping.ColumnMappings.Add("品名", "品名");
            tableMapping.ColumnMappings.Add("シリーズ名", "シリーズ名");
            tableMapping.ColumnMappings.Add("型番", "型番");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("入力仕様", "入力仕様");
            tableMapping.ColumnMappings.Add("単価", "単価");
            tableMapping.ColumnMappings.Add("原価", "原価");
            tableMapping.ColumnMappings.Add("シリアル番号1", "シリアル番号1");
            tableMapping.ColumnMappings.Add("シリアル番号2", "シリアル番号2");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("単位コード", "単位コード");
            tableMapping.ColumnMappings.Add("MeasureName", "MeasureName");
            tableMapping.ColumnMappings.Add("CustomerSerialNumberFrom", "CustomerSerialNumberFrom");
            tableMapping.ColumnMappings.Add("CustomerSerialNumberTo", "CustomerSerialNumberTo");
            tableMapping.ColumnMappings.Add("CustomerSerialNumberRequired", "CustomerSerialNumberRequired");
            tableMapping.ColumnMappings.Add("SettingSheet", "SettingSheet");
            tableMapping.ColumnMappings.Add("InspectionReport", "InspectionReport");
            tableMapping.ColumnMappings.Add("Specification", "Specification");
            tableMapping.ColumnMappings.Add("ParameterSheet", "ParameterSheet");
            tableMapping.ColumnMappings.Add("YnEnterInvoice", "YnEnterInvoice");
            tableMapping.ColumnMappings.Add("YnEnterStateOfDelivery", "YnEnterStateOfDelivery");
            tableMapping.ColumnMappings.Add("YnSendInvoiceFax", "YnSendInvoiceFax");
            tableMapping.ColumnMappings.Add("備考", "備考");
            tableMapping.ColumnMappings.Add("順序", "順序");
            tableMapping.ColumnMappings.Add("在庫締めコード", "在庫締めコード");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("StoreDate", "StoreDate");
            tableMapping.ColumnMappings.Add("製造予定日", "製造予定日");
            tableMapping.ColumnMappings.Add("製造予定更新日", "製造予定更新日");
            tableMapping.ColumnMappings.Add("製造開始日", "製造開始日");
            tableMapping.ColumnMappings.Add("製造終了日", "製造終了日");
            tableMapping.ColumnMappings.Add("出荷予定日", "出荷予定日");
            tableMapping.ColumnMappings.Add("出荷開始日", "出荷開始日");
            tableMapping.ColumnMappings.Add("出荷終了日", "出荷終了日");
            tableMapping.ColumnMappings.Add("ProductionPlanningDate", "ProductionPlanningDate");
            tableMapping.ColumnMappings.Add("ProductionBeginDate", "ProductionBeginDate");
            tableMapping.ColumnMappings.Add("ProductionEndDate", "ProductionEndDate");
            tableMapping.ColumnMappings.Add("ProductionApprovedDate", "ProductionApprovedDate");
            tableMapping.ColumnMappings.Add("ProductionApproverCode", "ProductionApproverCode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[受注明細] WHERE (([受注明細コード] = @Original_受注明細コード) AND ([受注コード] = @O" +
                "riginal_受注コード) AND ([受注版数] = @Original_受注版数) AND ((@IsNull_DetailNumber = 1 AND " +
                "[DetailNumber] IS NULL) OR ([DetailNumber] = @Original_DetailNumber)) AND ((@IsN" +
                "ull_明細番号 = 1 AND [明細番号] IS NULL) OR ([明細番号] = @Original_明細番号)) AND ((@IsNull_商品コ" +
                "ード = 1 AND [商品コード] IS NULL) OR ([商品コード] = @Original_商品コード)) AND ([受注区分コード] = @Or" +
                "iginal_受注区分コード) AND ((@IsNull_ラインコード = 1 AND [ラインコード] IS NULL) OR ([ラインコード] = @O" +
                "riginal_ラインコード)) AND ((@IsNull_製造先コード = 1 AND [製造先コード] IS NULL) OR ([製造先コード] = @" +
                "Original_製造先コード)) AND ([売上区分コード] = @Original_売上区分コード) AND ((@IsNull_シリアル番号付加 = 1" +
                " AND [シリアル番号付加] IS NULL) OR ([シリアル番号付加] = @Original_シリアル番号付加)) AND ((@IsNull_品名 " +
                "= 1 AND [品名] IS NULL) OR ([品名] = @Original_品名)) AND ((@IsNull_シリーズ名 = 1 AND [シリー" +
                "ズ名] IS NULL) OR ([シリーズ名] = @Original_シリーズ名)) AND ([型番] = @Original_型番) AND ((@Is" +
                "Null_ClientName = 1 AND [ClientName] IS NULL) OR ([ClientName] = @Original_Clien" +
                "tName)) AND ((@IsNull_入力仕様 = 1 AND [入力仕様] IS NULL) OR ([入力仕様] = @Original_入力仕様))" +
                " AND ([単価] = @Original_単価) AND ((@IsNull_原価 = 1 AND [原価] IS NULL) OR ([原価] = @Or" +
                "iginal_原価)) AND ((@IsNull_シリアル番号1 = 1 AND [シリアル番号1] IS NULL) OR ([シリアル番号1] = @Or" +
                "iginal_シリアル番号1)) AND ((@IsNull_シリアル番号2 = 1 AND [シリアル番号2] IS NULL) OR ([シリアル番号2] " +
                "= @Original_シリアル番号2)) AND ([数量] = @Original_数量) AND ((@IsNull_単位コード = 1 AND [単位コ" +
                "ード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_MeasureName = 1 AND [" +
                "MeasureName] IS NULL) OR ([MeasureName] = @Original_MeasureName)) AND ((@IsNull_" +
                "CustomerSerialNumberFrom = 1 AND [CustomerSerialNumberFrom] IS NULL) OR ([Custom" +
                "erSerialNumberFrom] = @Original_CustomerSerialNumberFrom)) AND ((@IsNull_Custome" +
                "rSerialNumberTo = 1 AND [CustomerSerialNumberTo] IS NULL) OR ([CustomerSerialNum" +
                "berTo] = @Original_CustomerSerialNumberTo)) AND ((@IsNull_CustomerSerialNumberRe" +
                "quired = 1 AND [CustomerSerialNumberRequired] IS NULL) OR ([CustomerSerialNumber" +
                "Required] = @Original_CustomerSerialNumberRequired)) AND ((@IsNull_SettingSheet " +
                "= 1 AND [SettingSheet] IS NULL) OR ([SettingSheet] = @Original_SettingSheet)) AN" +
                "D ((@IsNull_InspectionReport = 1 AND [InspectionReport] IS NULL) OR ([Inspection" +
                "Report] = @Original_InspectionReport)) AND ((@IsNull_Specification = 1 AND [Spec" +
                "ification] IS NULL) OR ([Specification] = @Original_Specification)) AND ((@IsNul" +
                "l_ParameterSheet = 1 AND [ParameterSheet] IS NULL) OR ([ParameterSheet] = @Origi" +
                "nal_ParameterSheet)) AND ((@IsNull_YnEnterInvoice = 1 AND [YnEnterInvoice] IS NU" +
                "LL) OR ([YnEnterInvoice] = @Original_YnEnterInvoice)) AND ((@IsNull_YnEnterState" +
                "OfDelivery = 1 AND [YnEnterStateOfDelivery] IS NULL) OR ([YnEnterStateOfDelivery" +
                "] = @Original_YnEnterStateOfDelivery)) AND ((@IsNull_YnSendInvoiceFax = 1 AND [Y" +
                "nSendInvoiceFax] IS NULL) OR ([YnSendInvoiceFax] = @Original_YnSendInvoiceFax)) " +
                "AND ((@IsNull_備考 = 1 AND [備考] IS NULL) OR ([備考] = @Original_備考)) AND ((@IsNull_順" +
                "序 = 1 AND [順序] IS NULL) OR ([順序] = @Original_順序)) AND ((@IsNull_在庫締めコード = 1 AND " +
                "[在庫締めコード] IS NULL) OR ([在庫締めコード] = @Original_在庫締めコード)) AND ((@IsNull_OrderDate =" +
                " 1 AND [OrderDate] IS NULL) OR ([OrderDate] = @Original_OrderDate)) AND ((@IsNul" +
                "l_StoreDate = 1 AND [StoreDate] IS NULL) OR ([StoreDate] = @Original_StoreDate))" +
                " AND ((@IsNull_製造予定日 = 1 AND [製造予定日] IS NULL) OR ([製造予定日] = @Original_製造予定日)) AN" +
                "D ((@IsNull_製造予定更新日 = 1 AND [製造予定更新日] IS NULL) OR ([製造予定更新日] = @Original_製造予定更新日" +
                ")) AND ((@IsNull_製造開始日 = 1 AND [製造開始日] IS NULL) OR ([製造開始日] = @Original_製造開始日)) " +
                "AND ((@IsNull_製造終了日 = 1 AND [製造終了日] IS NULL) OR ([製造終了日] = @Original_製造終了日)) AND" +
                " ((@IsNull_出荷予定日 = 1 AND [出荷予定日] IS NULL) OR ([出荷予定日] = @Original_出荷予定日)) AND ((" +
                "@IsNull_出荷開始日 = 1 AND [出荷開始日] IS NULL) OR ([出荷開始日] = @Original_出荷開始日)) AND ((@Is" +
                "Null_出荷終了日 = 1 AND [出荷終了日] IS NULL) OR ([出荷終了日] = @Original_出荷終了日)) AND ((@IsNul" +
                "l_ProductionPlanningDate = 1 AND [ProductionPlanningDate] IS NULL) OR ([Producti" +
                "onPlanningDate] = @Original_ProductionPlanningDate)) AND ((@IsNull_ProductionBeg" +
                "inDate = 1 AND [ProductionBeginDate] IS NULL) OR ([ProductionBeginDate] = @Origi" +
                "nal_ProductionBeginDate)) AND ((@IsNull_ProductionEndDate = 1 AND [ProductionEnd" +
                "Date] IS NULL) OR ([ProductionEndDate] = @Original_ProductionEndDate)) AND ((@Is" +
                "Null_ProductionApprovedDate = 1 AND [ProductionApprovedDate] IS NULL) OR ([Produ" +
                "ctionApprovedDate] = @Original_ProductionApprovedDate)) AND ((@IsNull_Production" +
                "ApproverCode = 1 AND [ProductionApproverCode] IS NULL) OR ([ProductionApproverCo" +
                "de] = @Original_ProductionApproverCode)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注明細コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注明細コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_商品コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_商品コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注区分コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ラインコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ラインコード";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造先コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造先コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_売上区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "売上区分コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号付加";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号付加";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_品名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_品名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリーズ名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリーズ名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_型番";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "型番";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClientName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClientName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_入力仕様";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_入力仕様";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_単価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "単価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_原価";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_原価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_数量";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "数量";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_単位コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_単位コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_MeasureName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_MeasureName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberFrom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberFrom";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberTo";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberTo";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SettingSheet";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SettingSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InspectionReport";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InspectionReport";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_Specification";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Specification";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ParameterSheet";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ParameterSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_備考";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_備考";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_順序";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_順序";
            param.DbType = global::System.Data.DbType.Single;
            param.SqlDbType = global::System.Data.SqlDbType.Real;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_OrderDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_OrderDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_StoreDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_StoreDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造予定更新日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造予定更新日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造終了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷終了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionBeginDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionBeginDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionEndDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionEndDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[受注明細] ([受注コード], [受注版数], [DetailNumber], [明細番号], [商品コード], [受注区分" +
                "コード], [ラインコード], [製造先コード], [売上区分コード], [シリアル番号付加], [品名], [シリーズ名], [型番], [ClientNam" +
                "e], [入力仕様], [単価], [原価], [シリアル番号1], [シリアル番号2], [数量], [単位コード], [MeasureName], [Cus" +
                "tomerSerialNumberFrom], [CustomerSerialNumberTo], [CustomerSerialNumberRequired]" +
                ", [SettingSheet], [InspectionReport], [Specification], [ParameterSheet], [YnEnte" +
                "rInvoice], [YnEnterStateOfDelivery], [YnSendInvoiceFax], [備考], [順序], [在庫締めコード], " +
                "[OrderDate], [StoreDate], [製造予定日], [製造予定更新日], [製造開始日], [製造終了日], [出荷予定日], [出荷開始日]" +
                ", [出荷終了日], [ProductionPlanningDate], [ProductionBeginDate], [ProductionEndDate]," +
                " [ProductionApprovedDate], [ProductionApproverCode]) VALUES (@受注コード, @受注版数, @Det" +
                "ailNumber, @明細番号, @商品コード, @受注区分コード, @ラインコード, @製造先コード, @売上区分コード, @シリアル番号付加, @品名, " +
                "@シリーズ名, @型番, @ClientName, @入力仕様, @単価, @原価, @シリアル番号1, @シリアル番号2, @数量, @単位コード, @Mea" +
                "sureName, @CustomerSerialNumberFrom, @CustomerSerialNumberTo, @CustomerSerialNum" +
                "berRequired, @SettingSheet, @InspectionReport, @Specification, @ParameterSheet, " +
                "@YnEnterInvoice, @YnEnterStateOfDelivery, @YnSendInvoiceFax, @備考, @順序, @在庫締めコード," +
                " @OrderDate, @StoreDate, @製造予定日, @製造予定更新日, @製造開始日, @製造終了日, @出荷予定日, @出荷開始日, @出荷終了" +
                "日, @ProductionPlanningDate, @ProductionBeginDate, @ProductionEndDate, @Productio" +
                "nApprovedDate, @ProductionApproverCode);\r\nSELECT 受注明細コード, 受注コード, 受注版数, DetailNum" +
                "ber, 明細番号, 商品コード, 受注区分コード, ラインコード, 製造先コード, 売上区分コード, シリアル番号付加, 品名, シリーズ名, 型番, Cli" +
                "entName, 入力仕様, 単価, 原価, シリアル番号1, シリアル番号2, 数量, 単位コード, MeasureName, CustomerSerialN" +
                "umberFrom, CustomerSerialNumberTo, CustomerSerialNumberRequired, SettingSheet, I" +
                "nspectionReport, Specification, ParameterSheet, YnEnterInvoice, YnEnterStateOfDe" +
                "livery, YnSendInvoiceFax, 備考, 順序, 在庫締めコード, OrderDate, StoreDate, 製造予定日, 製造予定更新日," +
                " 製造開始日, 製造終了日, 出荷予定日, 出荷開始日, 出荷終了日, ProductionPlanningDate, ProductionBeginDate," +
                " ProductionEndDate, ProductionApprovedDate, ProductionApproverCode FROM 受注明細 WHE" +
                "RE (受注明細コード = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@商品コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注区分コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ラインコード";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造先コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@売上区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "売上区分コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号付加";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@品名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリーズ名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@型番";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "型番";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClientName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@入力仕様";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@単価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "単価";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@原価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@数量";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "数量";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@単位コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@MeasureName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberFrom";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberTo";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SettingSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InspectionReport";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Specification";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ParameterSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@備考";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@順序";
            param.DbType = global::System.Data.DbType.Single;
            param.SqlDbType = global::System.Data.SqlDbType.Real;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@OrderDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@StoreDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造予定更新日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionBeginDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionEndDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[受注明細] SET [受注コード] = @受注コード, [受注版数] = @受注版数, [DetailNumber] = @Detai" +
                "lNumber, [明細番号] = @明細番号, [商品コード] = @商品コード, [受注区分コード] = @受注区分コード, [ラインコード] = @ライン" +
                "コード, [製造先コード] = @製造先コード, [売上区分コード] = @売上区分コード, [シリアル番号付加] = @シリアル番号付加, [品名] = @品" +
                "名, [シリーズ名] = @シリーズ名, [型番] = @型番, [ClientName] = @ClientName, [入力仕様] = @入力仕様, [単価" +
                "] = @単価, [原価] = @原価, [シリアル番号1] = @シリアル番号1, [シリアル番号2] = @シリアル番号2, [数量] = @数量, [単位" +
                "コード] = @単位コード, [MeasureName] = @MeasureName, [CustomerSerialNumberFrom] = @Custo" +
                "merSerialNumberFrom, [CustomerSerialNumberTo] = @CustomerSerialNumberTo, [Custom" +
                "erSerialNumberRequired] = @CustomerSerialNumberRequired, [SettingSheet] = @Setti" +
                "ngSheet, [InspectionReport] = @InspectionReport, [Specification] = @Specificatio" +
                "n, [ParameterSheet] = @ParameterSheet, [YnEnterInvoice] = @YnEnterInvoice, [YnEn" +
                "terStateOfDelivery] = @YnEnterStateOfDelivery, [YnSendInvoiceFax] = @YnSendInvoi" +
                "ceFax, [備考] = @備考, [順序] = @順序, [在庫締めコード] = @在庫締めコード, [OrderDate] = @OrderDate, [" +
                "StoreDate] = @StoreDate, [製造予定日] = @製造予定日, [製造予定更新日] = @製造予定更新日, [製造開始日] = @製造開始" +
                "日, [製造終了日] = @製造終了日, [出荷予定日] = @出荷予定日, [出荷開始日] = @出荷開始日, [出荷終了日] = @出荷終了日, [Prod" +
                "uctionPlanningDate] = @ProductionPlanningDate, [ProductionBeginDate] = @Producti" +
                "onBeginDate, [ProductionEndDate] = @ProductionEndDate, [ProductionApprovedDate] " +
                "= @ProductionApprovedDate, [ProductionApproverCode] = @ProductionApproverCode WH" +
                "ERE (([受注明細コード] = @Original_受注明細コード) AND ([受注コード] = @Original_受注コード) AND ([受注版数]" +
                " = @Original_受注版数) AND ((@IsNull_DetailNumber = 1 AND [DetailNumber] IS NULL) OR" +
                " ([DetailNumber] = @Original_DetailNumber)) AND ((@IsNull_明細番号 = 1 AND [明細番号] IS" +
                " NULL) OR ([明細番号] = @Original_明細番号)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL" +
                ") OR ([商品コード] = @Original_商品コード)) AND ([受注区分コード] = @Original_受注区分コード) AND ((@IsN" +
                "ull_ラインコード = 1 AND [ラインコード] IS NULL) OR ([ラインコード] = @Original_ラインコード)) AND ((@Is" +
                "Null_製造先コード = 1 AND [製造先コード] IS NULL) OR ([製造先コード] = @Original_製造先コード)) AND ([売上" +
                "区分コード] = @Original_売上区分コード) AND ((@IsNull_シリアル番号付加 = 1 AND [シリアル番号付加] IS NULL) O" +
                "R ([シリアル番号付加] = @Original_シリアル番号付加)) AND ((@IsNull_品名 = 1 AND [品名] IS NULL) OR (" +
                "[品名] = @Original_品名)) AND ((@IsNull_シリーズ名 = 1 AND [シリーズ名] IS NULL) OR ([シリーズ名] =" +
                " @Original_シリーズ名)) AND ([型番] = @Original_型番) AND ((@IsNull_ClientName = 1 AND [C" +
                "lientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_入力仕様" +
                " = 1 AND [入力仕様] IS NULL) OR ([入力仕様] = @Original_入力仕様)) AND ([単価] = @Original_単価)" +
                " AND ((@IsNull_原価 = 1 AND [原価] IS NULL) OR ([原価] = @Original_原価)) AND ((@IsNull_" +
                "シリアル番号1 = 1 AND [シリアル番号1] IS NULL) OR ([シリアル番号1] = @Original_シリアル番号1)) AND ((@Is" +
                "Null_シリアル番号2 = 1 AND [シリアル番号2] IS NULL) OR ([シリアル番号2] = @Original_シリアル番号2)) AND " +
                "([数量] = @Original_数量) AND ((@IsNull_単位コード = 1 AND [単位コード] IS NULL) OR ([単位コード] =" +
                " @Original_単位コード)) AND ((@IsNull_MeasureName = 1 AND [MeasureName] IS NULL) OR (" +
                "[MeasureName] = @Original_MeasureName)) AND ((@IsNull_CustomerSerialNumberFrom =" +
                " 1 AND [CustomerSerialNumberFrom] IS NULL) OR ([CustomerSerialNumberFrom] = @Ori" +
                "ginal_CustomerSerialNumberFrom)) AND ((@IsNull_CustomerSerialNumberTo = 1 AND [C" +
                "ustomerSerialNumberTo] IS NULL) OR ([CustomerSerialNumberTo] = @Original_Custome" +
                "rSerialNumberTo)) AND ((@IsNull_CustomerSerialNumberRequired = 1 AND [CustomerSe" +
                "rialNumberRequired] IS NULL) OR ([CustomerSerialNumberRequired] = @Original_Cust" +
                "omerSerialNumberRequired)) AND ((@IsNull_SettingSheet = 1 AND [SettingSheet] IS " +
                "NULL) OR ([SettingSheet] = @Original_SettingSheet)) AND ((@IsNull_InspectionRepo" +
                "rt = 1 AND [InspectionReport] IS NULL) OR ([InspectionReport] = @Original_Inspec" +
                "tionReport)) AND ((@IsNull_Specification = 1 AND [Specification] IS NULL) OR ([S" +
                "pecification] = @Original_Specification)) AND ((@IsNull_ParameterSheet = 1 AND [" +
                "ParameterSheet] IS NULL) OR ([ParameterSheet] = @Original_ParameterSheet)) AND (" +
                "(@IsNull_YnEnterInvoice = 1 AND [YnEnterInvoice] IS NULL) OR ([YnEnterInvoice] =" +
                " @Original_YnEnterInvoice)) AND ((@IsNull_YnEnterStateOfDelivery = 1 AND [YnEnte" +
                "rStateOfDelivery] IS NULL) OR ([YnEnterStateOfDelivery] = @Original_YnEnterState" +
                "OfDelivery)) AND ((@IsNull_YnSendInvoiceFax = 1 AND [YnSendInvoiceFax] IS NULL) " +
                "OR ([YnSendInvoiceFax] = @Original_YnSendInvoiceFax)) AND ((@IsNull_備考 = 1 AND [" +
                "備考] IS NULL) OR ([備考] = @Original_備考)) AND ((@IsNull_順序 = 1 AND [順序] IS NULL) OR" +
                " ([順序] = @Original_順序)) AND ((@IsNull_在庫締めコード = 1 AND [在庫締めコード] IS NULL) OR ([在庫" +
                "締めコード] = @Original_在庫締めコード)) AND ((@IsNull_OrderDate = 1 AND [OrderDate] IS NULL" +
                ") OR ([OrderDate] = @Original_OrderDate)) AND ((@IsNull_StoreDate = 1 AND [Store" +
                "Date] IS NULL) OR ([StoreDate] = @Original_StoreDate)) AND ((@IsNull_製造予定日 = 1 A" +
                "ND [製造予定日] IS NULL) OR ([製造予定日] = @Original_製造予定日)) AND ((@IsNull_製造予定更新日 = 1 AN" +
                "D [製造予定更新日] IS NULL) OR ([製造予定更新日] = @Original_製造予定更新日)) AND ((@IsNull_製造開始日 = 1" +
                " AND [製造開始日] IS NULL) OR ([製造開始日] = @Original_製造開始日)) AND ((@IsNull_製造終了日 = 1 AN" +
                "D [製造終了日] IS NULL) OR ([製造終了日] = @Original_製造終了日)) AND ((@IsNull_出荷予定日 = 1 AND [" +
                "出荷予定日] IS NULL) OR ([出荷予定日] = @Original_出荷予定日)) AND ((@IsNull_出荷開始日 = 1 AND [出荷開" +
                "始日] IS NULL) OR ([出荷開始日] = @Original_出荷開始日)) AND ((@IsNull_出荷終了日 = 1 AND [出荷終了日]" +
                " IS NULL) OR ([出荷終了日] = @Original_出荷終了日)) AND ((@IsNull_ProductionPlanningDate =" +
                " 1 AND [ProductionPlanningDate] IS NULL) OR ([ProductionPlanningDate] = @Origina" +
                "l_ProductionPlanningDate)) AND ((@IsNull_ProductionBeginDate = 1 AND [Production" +
                "BeginDate] IS NULL) OR ([ProductionBeginDate] = @Original_ProductionBeginDate)) " +
                "AND ((@IsNull_ProductionEndDate = 1 AND [ProductionEndDate] IS NULL) OR ([Produc" +
                "tionEndDate] = @Original_ProductionEndDate)) AND ((@IsNull_ProductionApprovedDat" +
                "e = 1 AND [ProductionApprovedDate] IS NULL) OR ([ProductionApprovedDate] = @Orig" +
                "inal_ProductionApprovedDate)) AND ((@IsNull_ProductionApproverCode = 1 AND [Prod" +
                "uctionApproverCode] IS NULL) OR ([ProductionApproverCode] = @Original_Production" +
                "ApproverCode)));\r\nSELECT 受注明細コード, 受注コード, 受注版数, DetailNumber, 明細番号, 商品コード, 受注区分コー" +
                "ド, ラインコード, 製造先コード, 売上区分コード, シリアル番号付加, 品名, シリーズ名, 型番, ClientName, 入力仕様, 単価, 原価, シ" +
                "リアル番号1, シリアル番号2, 数量, 単位コード, MeasureName, CustomerSerialNumberFrom, CustomerSeria" +
                "lNumberTo, CustomerSerialNumberRequired, SettingSheet, InspectionReport, Specifi" +
                "cation, ParameterSheet, YnEnterInvoice, YnEnterStateOfDelivery, YnSendInvoiceFax" +
                ", 備考, 順序, 在庫締めコード, OrderDate, StoreDate, 製造予定日, 製造予定更新日, 製造開始日, 製造終了日, 出荷予定日, 出荷" +
                "開始日, 出荷終了日, ProductionPlanningDate, ProductionBeginDate, ProductionEndDate, Prod" +
                "uctionApprovedDate, ProductionApproverCode FROM 受注明細 WHERE (受注明細コード = @受注明細コード)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@商品コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注区分コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ラインコード";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造先コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@売上区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "売上区分コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号付加";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@品名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリーズ名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@型番";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "型番";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClientName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@入力仕様";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@単価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "単価";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@原価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@数量";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "数量";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@単位コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@MeasureName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberFrom";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberTo";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SettingSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InspectionReport";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Specification";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ParameterSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@備考";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@順序";
            param.DbType = global::System.Data.DbType.Single;
            param.SqlDbType = global::System.Data.SqlDbType.Real;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@OrderDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@StoreDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造予定更新日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionBeginDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionEndDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注明細コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注明細コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DetailNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DetailNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_明細番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "明細番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_商品コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_商品コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "商品コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注区分コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ラインコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ラインコード";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ラインコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造先コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造先コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "製造先コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_売上区分コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "売上区分コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号付加";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号付加";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号付加";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_品名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_品名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "品名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリーズ名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリーズ名";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "シリーズ名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_型番";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "型番";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClientName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClientName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_入力仕様";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_入力仕様";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "入力仕様";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_単価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "単価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_原価";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_原価";
            param.DbType = global::System.Data.DbType.Currency;
            param.SqlDbType = global::System.Data.SqlDbType.Money;
            param.IsNullable = true;
            param.SourceColumn = "原価";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_シリアル番号2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "シリアル番号2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_数量";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "数量";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_単位コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_単位コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "単位コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_MeasureName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_MeasureName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeasureName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberFrom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberFrom";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberTo";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberTo";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CustomerSerialNumberRequired";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CustomerSerialNumberRequired";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SettingSheet";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SettingSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "SettingSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InspectionReport";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InspectionReport";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InspectionReport";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_Specification";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Specification";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Specification";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ParameterSheet";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ParameterSheet";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ParameterSheet";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnEnterInvoice";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterInvoice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnEnterStateOfDelivery";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnEnterStateOfDelivery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_YnSendInvoiceFax";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "YnSendInvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_備考";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_備考";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_順序";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_順序";
            param.DbType = global::System.Data.DbType.Single;
            param.SqlDbType = global::System.Data.SqlDbType.Real;
            param.IsNullable = true;
            param.SourceColumn = "順序";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_在庫締めコード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "在庫締めコード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_OrderDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_OrderDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "OrderDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_StoreDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_StoreDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "StoreDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造予定更新日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造予定更新日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造予定更新日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造終了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷終了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷終了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷終了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionPlanningDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionPlanningDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionBeginDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionBeginDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionBeginDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionEndDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionEndDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionEndDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注明細コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "受注明細コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::u_net.Properties.Settings.Default.uidbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 受注明細コード, 受注コード, 受注版数, DetailNumber, 明細番号, 商品コード, 受注区分コード, ラインコード, 製造先コード, 売上区分コード, シリアル番号付加, 品名, シリーズ名, 型番, ClientName, 入力仕様, 単価, 原価, シリアル番号1, シリアル番号2, 数量, 単位コード, MeasureName, CustomerSerialNumberFrom, CustomerSerialNumberTo, CustomerSerialNumberRequired, SettingSheet, InspectionReport, Specification, ParameterSheet, YnEnterInvoice, YnEnterStateOfDelivery, YnSendInvoiceFax, 備考, 順序, 在庫締めコード, OrderDate, StoreDate, 製造予定日, 製造予定更新日, 製造開始日, 製造終了日, 出荷予定日, 出荷開始日, 出荷終了日, ProductionPlanningDate, ProductionBeginDate, ProductionEndDate, ProductionApprovedDate, ProductionApproverCode FROM dbo.受注明細";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.受注明細DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.受注明細DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.受注明細DataTable dataTable = new DataSet1.受注明細DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.受注明細DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "受注明細");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_受注明細コード, 
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<int> Original_DetailNumber, 
                    global::System.Nullable<int> Original_明細番号, 
                    string Original_商品コード, 
                    byte Original_受注区分コード, 
                    string Original_ラインコード, 
                    global::System.Nullable<byte> Original_製造先コード, 
                    byte Original_売上区分コード, 
                    global::System.Nullable<byte> Original_シリアル番号付加, 
                    string Original_品名, 
                    string Original_シリーズ名, 
                    string Original_型番, 
                    string Original_ClientName, 
                    string Original_入力仕様, 
                    decimal Original_単価, 
                    global::System.Nullable<decimal> Original_原価, 
                    global::System.Nullable<int> Original_シリアル番号1, 
                    global::System.Nullable<int> Original_シリアル番号2, 
                    int Original_数量, 
                    global::System.Nullable<byte> Original_単位コード, 
                    string Original_MeasureName, 
                    string Original_CustomerSerialNumberFrom, 
                    string Original_CustomerSerialNumberTo, 
                    global::System.Nullable<int> Original_CustomerSerialNumberRequired, 
                    string Original_SettingSheet, 
                    string Original_InspectionReport, 
                    string Original_Specification, 
                    string Original_ParameterSheet, 
                    global::System.Nullable<short> Original_YnEnterInvoice, 
                    global::System.Nullable<short> Original_YnEnterStateOfDelivery, 
                    global::System.Nullable<short> Original_YnSendInvoiceFax, 
                    string Original_備考, 
                    global::System.Nullable<float> Original_順序, 
                    global::System.Nullable<int> Original_在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> Original_OrderDate, 
                    global::System.Nullable<global::System.DateTime> Original_StoreDate, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定日, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造終了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷開始日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷終了日, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_受注明細コード));
            if ((Original_受注コード == null)) {
                throw new global::System.ArgumentNullException("Original_受注コード");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_受注コード));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_受注版数));
            if ((Original_DetailNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DetailNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_明細番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_明細番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_商品コード));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_受注区分コード));
            if ((Original_ラインコード == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ラインコード));
            }
            if ((Original_製造先コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((byte)(Original_製造先コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((byte)(Original_売上区分コード));
            if ((Original_シリアル番号付加.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((byte)(Original_シリアル番号付加.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_品名 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_品名));
            }
            if ((Original_シリーズ名 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_シリーズ名));
            }
            if ((Original_型番 == null)) {
                throw new global::System.ArgumentNullException("Original_型番");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_型番));
            }
            if ((Original_ClientName == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ClientName));
            }
            if ((Original_入力仕様 == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_入力仕様));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_単価));
            if ((Original_原価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_原価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_シリアル番号1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_シリアル番号1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_シリアル番号2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_シリアル番号2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_数量));
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((byte)(Original_単位コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasureName == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_MeasureName));
            }
            if ((Original_CustomerSerialNumberFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_CustomerSerialNumberFrom));
            }
            if ((Original_CustomerSerialNumberTo == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_CustomerSerialNumberTo));
            }
            if ((Original_CustomerSerialNumberRequired.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_CustomerSerialNumberRequired.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_SettingSheet == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_SettingSheet));
            }
            if ((Original_InspectionReport == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_InspectionReport));
            }
            if ((Original_Specification == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_Specification));
            }
            if ((Original_ParameterSheet == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_ParameterSheet));
            }
            if ((Original_YnEnterInvoice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((short)(Original_YnEnterInvoice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_YnEnterStateOfDelivery.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((short)(Original_YnEnterStateOfDelivery.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_YnSendInvoiceFax.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((short)(Original_YnSendInvoiceFax.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_備考));
            }
            if ((Original_順序.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((float)(Original_順序.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫締めコード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((int)(Original_在庫締めコード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((System.DateTime)(Original_OrderDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_StoreDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((System.DateTime)(Original_StoreDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_製造予定日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((System.DateTime)(Original_製造予定日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_製造予定更新日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_製造予定更新日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_製造開始日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((System.DateTime)(Original_製造開始日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_製造終了日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((System.DateTime)(Original_製造終了日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷予定日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((System.DateTime)(Original_出荷予定日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷開始日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((System.DateTime)(Original_出荷開始日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷終了日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((System.DateTime)(Original_出荷終了日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionPlanningDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((System.DateTime)(Original_ProductionPlanningDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionBeginDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((System.DateTime)(Original_ProductionBeginDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((System.DateTime)(Original_ProductionEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApprovedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((System.DateTime)(Original_ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApproverCode == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_ProductionApproverCode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string 受注コード, 
                    short 受注版数, 
                    global::System.Nullable<int> DetailNumber, 
                    global::System.Nullable<int> 明細番号, 
                    string 商品コード, 
                    byte 受注区分コード, 
                    string ラインコード, 
                    global::System.Nullable<byte> 製造先コード, 
                    byte 売上区分コード, 
                    global::System.Nullable<byte> シリアル番号付加, 
                    string 品名, 
                    string シリーズ名, 
                    string 型番, 
                    string ClientName, 
                    string 入力仕様, 
                    decimal 単価, 
                    global::System.Nullable<decimal> 原価, 
                    global::System.Nullable<int> シリアル番号1, 
                    global::System.Nullable<int> シリアル番号2, 
                    int 数量, 
                    global::System.Nullable<byte> 単位コード, 
                    string MeasureName, 
                    string CustomerSerialNumberFrom, 
                    string CustomerSerialNumberTo, 
                    global::System.Nullable<int> CustomerSerialNumberRequired, 
                    string SettingSheet, 
                    string InspectionReport, 
                    string Specification, 
                    string ParameterSheet, 
                    global::System.Nullable<short> YnEnterInvoice, 
                    global::System.Nullable<short> YnEnterStateOfDelivery, 
                    global::System.Nullable<short> YnSendInvoiceFax, 
                    string 備考, 
                    global::System.Nullable<float> 順序, 
                    global::System.Nullable<int> 在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> OrderDate, 
                    global::System.Nullable<global::System.DateTime> StoreDate, 
                    global::System.Nullable<global::System.DateTime> 製造予定日, 
                    global::System.Nullable<global::System.DateTime> 製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造終了日, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    global::System.Nullable<global::System.DateTime> 出荷開始日, 
                    global::System.Nullable<global::System.DateTime> 出荷終了日, 
                    global::System.Nullable<global::System.DateTime> ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode) {
            if ((受注コード == null)) {
                throw new global::System.ArgumentNullException("受注コード");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(受注コード));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(受注版数));
            if ((DetailNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(DetailNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((明細番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(明細番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(商品コード));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(受注区分コード));
            if ((ラインコード == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ラインコード));
            }
            if ((製造先コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte)(製造先コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(売上区分コード));
            if ((シリアル番号付加.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte)(シリアル番号付加.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((品名 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(品名));
            }
            if ((シリーズ名 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(シリーズ名));
            }
            if ((型番 == null)) {
                throw new global::System.ArgumentNullException("型番");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(型番));
            }
            if ((ClientName == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ClientName));
            }
            if ((入力仕様 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(入力仕様));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(単価));
            if ((原価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(原価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((シリアル番号1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(シリアル番号1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((シリアル番号2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(シリアル番号2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(数量));
            if ((単位コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((byte)(単位コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((MeasureName == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(MeasureName));
            }
            if ((CustomerSerialNumberFrom == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CustomerSerialNumberFrom));
            }
            if ((CustomerSerialNumberTo == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(CustomerSerialNumberTo));
            }
            if ((CustomerSerialNumberRequired.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(CustomerSerialNumberRequired.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SettingSheet == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SettingSheet));
            }
            if ((InspectionReport == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(InspectionReport));
            }
            if ((Specification == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Specification));
            }
            if ((ParameterSheet == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(ParameterSheet));
            }
            if ((YnEnterInvoice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((short)(YnEnterInvoice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((YnEnterStateOfDelivery.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((short)(YnEnterStateOfDelivery.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((YnSendInvoiceFax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((short)(YnSendInvoiceFax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((備考 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(備考));
            }
            if ((順序.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((float)(順序.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((在庫締めコード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(在庫締めコード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((OrderDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(OrderDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((StoreDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(StoreDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((製造予定日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(製造予定日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((製造予定更新日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(製造予定更新日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((製造開始日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(製造開始日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((製造終了日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(製造終了日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((出荷予定日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(出荷予定日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((出荷開始日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(出荷開始日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((出荷終了日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(出荷終了日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ProductionPlanningDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(ProductionPlanningDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ProductionBeginDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(ProductionBeginDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ProductionEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((System.DateTime)(ProductionEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ProductionApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ProductionApproverCode == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(ProductionApproverCode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string 受注コード, 
                    short 受注版数, 
                    global::System.Nullable<int> DetailNumber, 
                    global::System.Nullable<int> 明細番号, 
                    string 商品コード, 
                    byte 受注区分コード, 
                    string ラインコード, 
                    global::System.Nullable<byte> 製造先コード, 
                    byte 売上区分コード, 
                    global::System.Nullable<byte> シリアル番号付加, 
                    string 品名, 
                    string シリーズ名, 
                    string 型番, 
                    string ClientName, 
                    string 入力仕様, 
                    decimal 単価, 
                    global::System.Nullable<decimal> 原価, 
                    global::System.Nullable<int> シリアル番号1, 
                    global::System.Nullable<int> シリアル番号2, 
                    int 数量, 
                    global::System.Nullable<byte> 単位コード, 
                    string MeasureName, 
                    string CustomerSerialNumberFrom, 
                    string CustomerSerialNumberTo, 
                    global::System.Nullable<int> CustomerSerialNumberRequired, 
                    string SettingSheet, 
                    string InspectionReport, 
                    string Specification, 
                    string ParameterSheet, 
                    global::System.Nullable<short> YnEnterInvoice, 
                    global::System.Nullable<short> YnEnterStateOfDelivery, 
                    global::System.Nullable<short> YnSendInvoiceFax, 
                    string 備考, 
                    global::System.Nullable<float> 順序, 
                    global::System.Nullable<int> 在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> OrderDate, 
                    global::System.Nullable<global::System.DateTime> StoreDate, 
                    global::System.Nullable<global::System.DateTime> 製造予定日, 
                    global::System.Nullable<global::System.DateTime> 製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造終了日, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    global::System.Nullable<global::System.DateTime> 出荷開始日, 
                    global::System.Nullable<global::System.DateTime> 出荷終了日, 
                    global::System.Nullable<global::System.DateTime> ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode, 
                    int Original_受注明細コード, 
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<int> Original_DetailNumber, 
                    global::System.Nullable<int> Original_明細番号, 
                    string Original_商品コード, 
                    byte Original_受注区分コード, 
                    string Original_ラインコード, 
                    global::System.Nullable<byte> Original_製造先コード, 
                    byte Original_売上区分コード, 
                    global::System.Nullable<byte> Original_シリアル番号付加, 
                    string Original_品名, 
                    string Original_シリーズ名, 
                    string Original_型番, 
                    string Original_ClientName, 
                    string Original_入力仕様, 
                    decimal Original_単価, 
                    global::System.Nullable<decimal> Original_原価, 
                    global::System.Nullable<int> Original_シリアル番号1, 
                    global::System.Nullable<int> Original_シリアル番号2, 
                    int Original_数量, 
                    global::System.Nullable<byte> Original_単位コード, 
                    string Original_MeasureName, 
                    string Original_CustomerSerialNumberFrom, 
                    string Original_CustomerSerialNumberTo, 
                    global::System.Nullable<int> Original_CustomerSerialNumberRequired, 
                    string Original_SettingSheet, 
                    string Original_InspectionReport, 
                    string Original_Specification, 
                    string Original_ParameterSheet, 
                    global::System.Nullable<short> Original_YnEnterInvoice, 
                    global::System.Nullable<short> Original_YnEnterStateOfDelivery, 
                    global::System.Nullable<short> Original_YnSendInvoiceFax, 
                    string Original_備考, 
                    global::System.Nullable<float> Original_順序, 
                    global::System.Nullable<int> Original_在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> Original_OrderDate, 
                    global::System.Nullable<global::System.DateTime> Original_StoreDate, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定日, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造終了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷開始日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷終了日, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode, 
                    int 受注明細コード) {
            if ((受注コード == null)) {
                throw new global::System.ArgumentNullException("受注コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(受注コード));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(受注版数));
            if ((DetailNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(DetailNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((明細番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(明細番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(商品コード));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(受注区分コード));
            if ((ラインコード == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ラインコード));
            }
            if ((製造先コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(製造先コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(売上区分コード));
            if ((シリアル番号付加.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(シリアル番号付加.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(品名));
            }
            if ((シリーズ名 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(シリーズ名));
            }
            if ((型番 == null)) {
                throw new global::System.ArgumentNullException("型番");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(型番));
            }
            if ((ClientName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ClientName));
            }
            if ((入力仕様 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(入力仕様));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(単価));
            if ((原価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(原価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((シリアル番号1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(シリアル番号1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((シリアル番号2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(シリアル番号2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(数量));
            if ((単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((byte)(単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((MeasureName == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(MeasureName));
            }
            if ((CustomerSerialNumberFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CustomerSerialNumberFrom));
            }
            if ((CustomerSerialNumberTo == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(CustomerSerialNumberTo));
            }
            if ((CustomerSerialNumberRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(CustomerSerialNumberRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SettingSheet == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SettingSheet));
            }
            if ((InspectionReport == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(InspectionReport));
            }
            if ((Specification == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Specification));
            }
            if ((ParameterSheet == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(ParameterSheet));
            }
            if ((YnEnterInvoice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((short)(YnEnterInvoice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((YnEnterStateOfDelivery.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(YnEnterStateOfDelivery.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((YnSendInvoiceFax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(YnSendInvoiceFax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(備考));
            }
            if ((順序.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((float)(順序.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((在庫締めコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(在庫締めコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((OrderDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(OrderDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((StoreDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(StoreDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((製造予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(製造予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((製造予定更新日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(製造予定更新日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((製造開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(製造開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((製造終了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(製造終了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((出荷予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(出荷予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((出荷開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(出荷開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((出荷終了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(出荷終了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ProductionPlanningDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(ProductionPlanningDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ProductionBeginDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(ProductionBeginDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ProductionEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(ProductionEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ProductionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ProductionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(ProductionApproverCode));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_受注明細コード));
            if ((Original_受注コード == null)) {
                throw new global::System.ArgumentNullException("Original_受注コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_受注コード));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((short)(Original_受注版数));
            if ((Original_DetailNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_DetailNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_明細番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_明細番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_商品コード));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((byte)(Original_受注区分コード));
            if ((Original_ラインコード == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_ラインコード));
            }
            if ((Original_製造先コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((byte)(Original_製造先コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((byte)(Original_売上区分コード));
            if ((Original_シリアル番号付加.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((byte)(Original_シリアル番号付加.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_品名));
            }
            if ((Original_シリーズ名 == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_シリーズ名));
            }
            if ((Original_型番 == null)) {
                throw new global::System.ArgumentNullException("Original_型番");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_型番));
            }
            if ((Original_ClientName == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_ClientName));
            }
            if ((Original_入力仕様 == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_入力仕様));
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_単価));
            if ((Original_原価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_原価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_シリアル番号1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_シリアル番号1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_シリアル番号2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_シリアル番号2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_数量));
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((byte)(Original_単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasureName == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_MeasureName));
            }
            if ((Original_CustomerSerialNumberFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_CustomerSerialNumberFrom));
            }
            if ((Original_CustomerSerialNumberTo == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_CustomerSerialNumberTo));
            }
            if ((Original_CustomerSerialNumberRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_CustomerSerialNumberRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_SettingSheet == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_SettingSheet));
            }
            if ((Original_InspectionReport == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_InspectionReport));
            }
            if ((Original_Specification == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_Specification));
            }
            if ((Original_ParameterSheet == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_ParameterSheet));
            }
            if ((Original_YnEnterInvoice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((short)(Original_YnEnterInvoice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_YnEnterStateOfDelivery.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((short)(Original_YnEnterStateOfDelivery.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_YnSendInvoiceFax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((short)(Original_YnSendInvoiceFax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_備考));
            }
            if ((Original_順序.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((float)(Original_順序.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫締めコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_在庫締めコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((System.DateTime)(Original_OrderDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_StoreDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((System.DateTime)(Original_StoreDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_製造予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((System.DateTime)(Original_製造予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_製造予定更新日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((System.DateTime)(Original_製造予定更新日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_製造開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_製造開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_製造終了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((System.DateTime)(Original_製造終了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((System.DateTime)(Original_出荷予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((System.DateTime)(Original_出荷開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷終了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_出荷終了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionPlanningDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((System.DateTime)(Original_ProductionPlanningDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionBeginDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((System.DateTime)(Original_ProductionBeginDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((System.DateTime)(Original_ProductionEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((System.DateTime)(Original_ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_ProductionApproverCode));
            }
            this.Adapter.UpdateCommand.Parameters[141].Value = ((int)(受注明細コード));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string 受注コード, 
                    short 受注版数, 
                    global::System.Nullable<int> DetailNumber, 
                    global::System.Nullable<int> 明細番号, 
                    string 商品コード, 
                    byte 受注区分コード, 
                    string ラインコード, 
                    global::System.Nullable<byte> 製造先コード, 
                    byte 売上区分コード, 
                    global::System.Nullable<byte> シリアル番号付加, 
                    string 品名, 
                    string シリーズ名, 
                    string 型番, 
                    string ClientName, 
                    string 入力仕様, 
                    decimal 単価, 
                    global::System.Nullable<decimal> 原価, 
                    global::System.Nullable<int> シリアル番号1, 
                    global::System.Nullable<int> シリアル番号2, 
                    int 数量, 
                    global::System.Nullable<byte> 単位コード, 
                    string MeasureName, 
                    string CustomerSerialNumberFrom, 
                    string CustomerSerialNumberTo, 
                    global::System.Nullable<int> CustomerSerialNumberRequired, 
                    string SettingSheet, 
                    string InspectionReport, 
                    string Specification, 
                    string ParameterSheet, 
                    global::System.Nullable<short> YnEnterInvoice, 
                    global::System.Nullable<short> YnEnterStateOfDelivery, 
                    global::System.Nullable<short> YnSendInvoiceFax, 
                    string 備考, 
                    global::System.Nullable<float> 順序, 
                    global::System.Nullable<int> 在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> OrderDate, 
                    global::System.Nullable<global::System.DateTime> StoreDate, 
                    global::System.Nullable<global::System.DateTime> 製造予定日, 
                    global::System.Nullable<global::System.DateTime> 製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造終了日, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    global::System.Nullable<global::System.DateTime> 出荷開始日, 
                    global::System.Nullable<global::System.DateTime> 出荷終了日, 
                    global::System.Nullable<global::System.DateTime> ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode, 
                    int Original_受注明細コード, 
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<int> Original_DetailNumber, 
                    global::System.Nullable<int> Original_明細番号, 
                    string Original_商品コード, 
                    byte Original_受注区分コード, 
                    string Original_ラインコード, 
                    global::System.Nullable<byte> Original_製造先コード, 
                    byte Original_売上区分コード, 
                    global::System.Nullable<byte> Original_シリアル番号付加, 
                    string Original_品名, 
                    string Original_シリーズ名, 
                    string Original_型番, 
                    string Original_ClientName, 
                    string Original_入力仕様, 
                    decimal Original_単価, 
                    global::System.Nullable<decimal> Original_原価, 
                    global::System.Nullable<int> Original_シリアル番号1, 
                    global::System.Nullable<int> Original_シリアル番号2, 
                    int Original_数量, 
                    global::System.Nullable<byte> Original_単位コード, 
                    string Original_MeasureName, 
                    string Original_CustomerSerialNumberFrom, 
                    string Original_CustomerSerialNumberTo, 
                    global::System.Nullable<int> Original_CustomerSerialNumberRequired, 
                    string Original_SettingSheet, 
                    string Original_InspectionReport, 
                    string Original_Specification, 
                    string Original_ParameterSheet, 
                    global::System.Nullable<short> Original_YnEnterInvoice, 
                    global::System.Nullable<short> Original_YnEnterStateOfDelivery, 
                    global::System.Nullable<short> Original_YnSendInvoiceFax, 
                    string Original_備考, 
                    global::System.Nullable<float> Original_順序, 
                    global::System.Nullable<int> Original_在庫締めコード, 
                    global::System.Nullable<global::System.DateTime> Original_OrderDate, 
                    global::System.Nullable<global::System.DateTime> Original_StoreDate, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定日, 
                    global::System.Nullable<global::System.DateTime> Original_製造予定更新日, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造終了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷開始日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷終了日, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionPlanningDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionBeginDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionEndDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode) {
            return this.Update(受注コード, 受注版数, DetailNumber, 明細番号, 商品コード, 受注区分コード, ラインコード, 製造先コード, 売上区分コード, シリアル番号付加, 品名, シリーズ名, 型番, ClientName, 入力仕様, 単価, 原価, シリアル番号1, シリアル番号2, 数量, 単位コード, MeasureName, CustomerSerialNumberFrom, CustomerSerialNumberTo, CustomerSerialNumberRequired, SettingSheet, InspectionReport, Specification, ParameterSheet, YnEnterInvoice, YnEnterStateOfDelivery, YnSendInvoiceFax, 備考, 順序, 在庫締めコード, OrderDate, StoreDate, 製造予定日, 製造予定更新日, 製造開始日, 製造終了日, 出荷予定日, 出荷開始日, 出荷終了日, ProductionPlanningDate, ProductionBeginDate, ProductionEndDate, ProductionApprovedDate, ProductionApproverCode, Original_受注明細コード, Original_受注コード, Original_受注版数, Original_DetailNumber, Original_明細番号, Original_商品コード, Original_受注区分コード, Original_ラインコード, Original_製造先コード, Original_売上区分コード, Original_シリアル番号付加, Original_品名, Original_シリーズ名, Original_型番, Original_ClientName, Original_入力仕様, Original_単価, Original_原価, Original_シリアル番号1, Original_シリアル番号2, Original_数量, Original_単位コード, Original_MeasureName, Original_CustomerSerialNumberFrom, Original_CustomerSerialNumberTo, Original_CustomerSerialNumberRequired, Original_SettingSheet, Original_InspectionReport, Original_Specification, Original_ParameterSheet, Original_YnEnterInvoice, Original_YnEnterStateOfDelivery, Original_YnSendInvoiceFax, Original_備考, Original_順序, Original_在庫締めコード, Original_OrderDate, Original_StoreDate, Original_製造予定日, Original_製造予定更新日, Original_製造開始日, Original_製造終了日, Original_出荷予定日, Original_出荷開始日, Original_出荷終了日, Original_ProductionPlanningDate, Original_ProductionBeginDate, Original_ProductionEndDate, Original_ProductionApprovedDate, Original_ProductionApproverCode, Original_受注明細コード);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 受注TableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlTransaction _transaction;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public 受注TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "受注";
            tableMapping.ColumnMappings.Add("受注コード", "受注コード");
            tableMapping.ColumnMappings.Add("受注版数", "受注版数");
            tableMapping.ColumnMappings.Add("承認日", "承認日");
            tableMapping.ColumnMappings.Add("受注日", "受注日");
            tableMapping.ColumnMappings.Add("受注納期", "受注納期");
            tableMapping.ColumnMappings.Add("出荷予定日", "出荷予定日");
            tableMapping.ColumnMappings.Add("注文番号", "注文番号");
            tableMapping.ColumnMappings.Add("顧客コード", "顧客コード");
            tableMapping.ColumnMappings.Add("顧客担当者名", "顧客担当者名");
            tableMapping.ColumnMappings.Add("ClosingDay", "ClosingDay");
            tableMapping.ColumnMappings.Add("自社担当者コード", "自社担当者コード");
            tableMapping.ColumnMappings.Add("自社担当者名", "自社担当者名");
            tableMapping.ColumnMappings.Add("ClientCode", "ClientCode");
            tableMapping.ColumnMappings.Add("発送方法コード", "発送方法コード");
            tableMapping.ColumnMappings.Add("ShippingGroupCode", "ShippingGroupCode");
            tableMapping.ColumnMappings.Add("発送先名", "発送先名");
            tableMapping.ColumnMappings.Add("発送先郵便番号", "発送先郵便番号");
            tableMapping.ColumnMappings.Add("発送先住所1", "発送先住所1");
            tableMapping.ColumnMappings.Add("発送先住所2", "発送先住所2");
            tableMapping.ColumnMappings.Add("発送先TEL", "発送先TEL");
            tableMapping.ColumnMappings.Add("発送先TEL1", "発送先TEL1");
            tableMapping.ColumnMappings.Add("発送先TEL2", "発送先TEL2");
            tableMapping.ColumnMappings.Add("発送先TEL3", "発送先TEL3");
            tableMapping.ColumnMappings.Add("発送先FAX", "発送先FAX");
            tableMapping.ColumnMappings.Add("発送先FAX1", "発送先FAX1");
            tableMapping.ColumnMappings.Add("発送先FAX2", "発送先FAX2");
            tableMapping.ColumnMappings.Add("発送先FAX3", "発送先FAX3");
            tableMapping.ColumnMappings.Add("発送先メールアドレス", "発送先メールアドレス");
            tableMapping.ColumnMappings.Add("発送先担当者名", "発送先担当者名");
            tableMapping.ColumnMappings.Add("納品書送付コード", "納品書送付コード");
            tableMapping.ColumnMappings.Add("請求書送付コード", "請求書送付コード");
            tableMapping.ColumnMappings.Add("請求予定日", "請求予定日");
            tableMapping.ColumnMappings.Add("TaxRate", "TaxRate");
            tableMapping.ColumnMappings.Add("TaxCalcCode", "TaxCalcCode");
            tableMapping.ColumnMappings.Add("税端数処理", "税端数処理");
            tableMapping.ColumnMappings.Add("PackingSlipInputCode", "PackingSlipInputCode");
            tableMapping.ColumnMappings.Add("PackingSlipInput", "PackingSlipInput");
            tableMapping.ColumnMappings.Add("PackingSlipNote", "PackingSlipNote");
            tableMapping.ColumnMappings.Add("ReceiptCommentCode", "ReceiptCommentCode");
            tableMapping.ColumnMappings.Add("InvoiceInputCode", "InvoiceInputCode");
            tableMapping.ColumnMappings.Add("InvoiceInput", "InvoiceInput");
            tableMapping.ColumnMappings.Add("InvoiceNote", "InvoiceNote");
            tableMapping.ColumnMappings.Add("InvoiceFaxCode", "InvoiceFaxCode");
            tableMapping.ColumnMappings.Add("InvoiceFax", "InvoiceFax");
            tableMapping.ColumnMappings.Add("ProductionNotice", "ProductionNotice");
            tableMapping.ColumnMappings.Add("備考", "備考");
            tableMapping.ColumnMappings.Add("InvoiceFaxToName", "InvoiceFaxToName");
            tableMapping.ColumnMappings.Add("InvoiceFaxToContact", "InvoiceFaxToContact");
            tableMapping.ColumnMappings.Add("InvoiceFaxToNumber", "InvoiceFaxToNumber");
            tableMapping.ColumnMappings.Add("改版履歴", "改版履歴");
            tableMapping.ColumnMappings.Add("受注承認", "受注承認");
            tableMapping.ColumnMappings.Add("製造開始日", "製造開始日");
            tableMapping.ColumnMappings.Add("製造完了日", "製造完了日");
            tableMapping.ColumnMappings.Add("出荷完了日", "出荷完了日");
            tableMapping.ColumnMappings.Add("納品書発行日", "納品書発行日");
            tableMapping.ColumnMappings.Add("送り状発行日", "送り状発行日");
            tableMapping.ColumnMappings.Add("確定日時", "確定日時");
            tableMapping.ColumnMappings.Add("確定者コード", "確定者コード");
            tableMapping.ColumnMappings.Add("承認日時", "承認日時");
            tableMapping.ColumnMappings.Add("承認者コード", "承認者コード");
            tableMapping.ColumnMappings.Add("PaymentConfirmation", "PaymentConfirmation");
            tableMapping.ColumnMappings.Add("PaymentReceivedDate", "PaymentReceivedDate");
            tableMapping.ColumnMappings.Add("ProductionApprovedDate", "ProductionApprovedDate");
            tableMapping.ColumnMappings.Add("ProductionApproverCode", "ProductionApproverCode");
            tableMapping.ColumnMappings.Add("ManufacturingCompletionApprovedDate", "ManufacturingCompletionApprovedDate");
            tableMapping.ColumnMappings.Add("ManufacturingCompletionApproverCode", "ManufacturingCompletionApproverCode");
            tableMapping.ColumnMappings.Add("完了承認日", "完了承認日");
            tableMapping.ColumnMappings.Add("完了承認者コード", "完了承認者コード");
            tableMapping.ColumnMappings.Add("受注完了承認", "受注完了承認");
            tableMapping.ColumnMappings.Add("集計日付", "集計日付");
            tableMapping.ColumnMappings.Add("請求コード", "請求コード");
            tableMapping.ColumnMappings.Add("無効日", "無効日");
            tableMapping.ColumnMappings.Add("非表示", "非表示");
            tableMapping.ColumnMappings.Add("登録日", "登録日");
            tableMapping.ColumnMappings.Add("ReceiptComment", "ReceiptComment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[受注] WHERE (([受注コード] = @Original_受注コード) AND ([受注版数] = @Original" +
                "_受注版数) AND ((@IsNull_承認日 = 1 AND [承認日] IS NULL) OR ([承認日] = @Original_承認日)) AND " +
                "((@IsNull_受注日 = 1 AND [受注日] IS NULL) OR ([受注日] = @Original_受注日)) AND ((@IsNull_受" +
                "注納期 = 1 AND [受注納期] IS NULL) OR ([受注納期] = @Original_受注納期)) AND ((@IsNull_出荷予定日 = " +
                "1 AND [出荷予定日] IS NULL) OR ([出荷予定日] = @Original_出荷予定日)) AND ((@IsNull_注文番号 = 1 AN" +
                "D [注文番号] IS NULL) OR ([注文番号] = @Original_注文番号)) AND ((@IsNull_顧客コード = 1 AND [顧客コ" +
                "ード] IS NULL) OR ([顧客コード] = @Original_顧客コード)) AND ((@IsNull_顧客担当者名 = 1 AND [顧客担当者" +
                "名] IS NULL) OR ([顧客担当者名] = @Original_顧客担当者名)) AND ((@IsNull_ClosingDay = 1 AND [" +
                "ClosingDay] IS NULL) OR ([ClosingDay] = @Original_ClosingDay)) AND ((@IsNull_自社担" +
                "当者コード = 1 AND [自社担当者コード] IS NULL) OR ([自社担当者コード] = @Original_自社担当者コード)) AND ((@I" +
                "sNull_自社担当者名 = 1 AND [自社担当者名] IS NULL) OR ([自社担当者名] = @Original_自社担当者名)) AND ((@" +
                "IsNull_ClientCode = 1 AND [ClientCode] IS NULL) OR ([ClientCode] = @Original_Cli" +
                "entCode)) AND ((@IsNull_発送方法コード = 1 AND [発送方法コード] IS NULL) OR ([発送方法コード] = @Orig" +
                "inal_発送方法コード)) AND ((@IsNull_ShippingGroupCode = 1 AND [ShippingGroupCode] IS NU" +
                "LL) OR ([ShippingGroupCode] = @Original_ShippingGroupCode)) AND ((@IsNull_発送先名 =" +
                " 1 AND [発送先名] IS NULL) OR ([発送先名] = @Original_発送先名)) AND ((@IsNull_発送先郵便番号 = 1 A" +
                "ND [発送先郵便番号] IS NULL) OR ([発送先郵便番号] = @Original_発送先郵便番号)) AND ((@IsNull_発送先住所1 =" +
                " 1 AND [発送先住所1] IS NULL) OR ([発送先住所1] = @Original_発送先住所1)) AND ((@IsNull_発送先住所2 " +
                "= 1 AND [発送先住所2] IS NULL) OR ([発送先住所2] = @Original_発送先住所2)) AND ((@IsNull_発送先TEL" +
                " = 1 AND [発送先TEL] IS NULL) OR ([発送先TEL] = @Original_発送先TEL)) AND ((@IsNull_発送先TE" +
                "L1 = 1 AND [発送先TEL1] IS NULL) OR ([発送先TEL1] = @Original_発送先TEL1)) AND ((@IsNull_" +
                "発送先TEL2 = 1 AND [発送先TEL2] IS NULL) OR ([発送先TEL2] = @Original_発送先TEL2)) AND ((@Is" +
                "Null_発送先TEL3 = 1 AND [発送先TEL3] IS NULL) OR ([発送先TEL3] = @Original_発送先TEL3)) AND " +
                "((@IsNull_発送先FAX = 1 AND [発送先FAX] IS NULL) OR ([発送先FAX] = @Original_発送先FAX)) AND" +
                " ((@IsNull_発送先FAX1 = 1 AND [発送先FAX1] IS NULL) OR ([発送先FAX1] = @Original_発送先FAX1)" +
                ") AND ((@IsNull_発送先FAX2 = 1 AND [発送先FAX2] IS NULL) OR ([発送先FAX2] = @Original_発送先" +
                "FAX2)) AND ((@IsNull_発送先FAX3 = 1 AND [発送先FAX3] IS NULL) OR ([発送先FAX3] = @Origina" +
                "l_発送先FAX3)) AND ((@IsNull_発送先メールアドレス = 1 AND [発送先メールアドレス] IS NULL) OR ([発送先メールアド" +
                "レス] = @Original_発送先メールアドレス)) AND ((@IsNull_発送先担当者名 = 1 AND [発送先担当者名] IS NULL) OR" +
                " ([発送先担当者名] = @Original_発送先担当者名)) AND ((@IsNull_納品書送付コード = 1 AND [納品書送付コード] IS N" +
                "ULL) OR ([納品書送付コード] = @Original_納品書送付コード)) AND ((@IsNull_請求書送付コード = 1 AND [請求書送付" +
                "コード] IS NULL) OR ([請求書送付コード] = @Original_請求書送付コード)) AND ((@IsNull_請求予定日 = 1 AND " +
                "[請求予定日] IS NULL) OR ([請求予定日] = @Original_請求予定日)) AND ((@IsNull_TaxRate = 1 AND [" +
                "TaxRate] IS NULL) OR ([TaxRate] = @Original_TaxRate)) AND ((@IsNull_TaxCalcCode " +
                "= 1 AND [TaxCalcCode] IS NULL) OR ([TaxCalcCode] = @Original_TaxCalcCode)) AND (" +
                "(@IsNull_税端数処理 = 1 AND [税端数処理] IS NULL) OR ([税端数処理] = @Original_税端数処理)) AND ((@I" +
                "sNull_PackingSlipInputCode = 1 AND [PackingSlipInputCode] IS NULL) OR ([PackingS" +
                "lipInputCode] = @Original_PackingSlipInputCode)) AND ((@IsNull_PackingSlipInput " +
                "= 1 AND [PackingSlipInput] IS NULL) OR ([PackingSlipInput] = @Original_PackingSl" +
                "ipInput)) AND ((@IsNull_PackingSlipNote = 1 AND [PackingSlipNote] IS NULL) OR ([" +
                "PackingSlipNote] = @Original_PackingSlipNote)) AND ((@IsNull_ReceiptCommentCode " +
                "= 1 AND [ReceiptCommentCode] IS NULL) OR ([ReceiptCommentCode] = @Original_Recei" +
                "ptCommentCode)) AND ((@IsNull_InvoiceInputCode = 1 AND [InvoiceInputCode] IS NUL" +
                "L) OR ([InvoiceInputCode] = @Original_InvoiceInputCode)) AND ((@IsNull_InvoiceIn" +
                "put = 1 AND [InvoiceInput] IS NULL) OR ([InvoiceInput] = @Original_InvoiceInput)" +
                ") AND ((@IsNull_InvoiceNote = 1 AND [InvoiceNote] IS NULL) OR ([InvoiceNote] = @" +
                "Original_InvoiceNote)) AND ((@IsNull_InvoiceFaxCode = 1 AND [InvoiceFaxCode] IS " +
                "NULL) OR ([InvoiceFaxCode] = @Original_InvoiceFaxCode)) AND ((@IsNull_InvoiceFax" +
                " = 1 AND [InvoiceFax] IS NULL) OR ([InvoiceFax] = @Original_InvoiceFax)) AND ((@" +
                "IsNull_ProductionNotice = 1 AND [ProductionNotice] IS NULL) OR ([ProductionNotic" +
                "e] = @Original_ProductionNotice)) AND ((@IsNull_InvoiceFaxToName = 1 AND [Invoic" +
                "eFaxToName] IS NULL) OR ([InvoiceFaxToName] = @Original_InvoiceFaxToName)) AND (" +
                "(@IsNull_InvoiceFaxToContact = 1 AND [InvoiceFaxToContact] IS NULL) OR ([Invoice" +
                "FaxToContact] = @Original_InvoiceFaxToContact)) AND ((@IsNull_InvoiceFaxToNumber" +
                " = 1 AND [InvoiceFaxToNumber] IS NULL) OR ([InvoiceFaxToNumber] = @Original_Invo" +
                "iceFaxToNumber)) AND ((@IsNull_受注承認 = 1 AND [受注承認] IS NULL) OR ([受注承認] = @Origin" +
                "al_受注承認)) AND ((@IsNull_製造開始日 = 1 AND [製造開始日] IS NULL) OR ([製造開始日] = @Original_製" +
                "造開始日)) AND ((@IsNull_製造完了日 = 1 AND [製造完了日] IS NULL) OR ([製造完了日] = @Original_製造完了" +
                "日)) AND ((@IsNull_出荷完了日 = 1 AND [出荷完了日] IS NULL) OR ([出荷完了日] = @Original_出荷完了日))" +
                " AND ((@IsNull_納品書発行日 = 1 AND [納品書発行日] IS NULL) OR ([納品書発行日] = @Original_納品書発行日)" +
                ") AND ((@IsNull_送り状発行日 = 1 AND [送り状発行日] IS NULL) OR ([送り状発行日] = @Original_送り状発行日" +
                ")) AND ((@IsNull_確定日時 = 1 AND [確定日時] IS NULL) OR ([確定日時] = @Original_確定日時)) AND " +
                "((@IsNull_確定者コード = 1 AND [確定者コード] IS NULL) OR ([確定者コード] = @Original_確定者コード)) AND" +
                " ((@IsNull_承認日時 = 1 AND [承認日時] IS NULL) OR ([承認日時] = @Original_承認日時)) AND ((@IsN" +
                "ull_承認者コード = 1 AND [承認者コード] IS NULL) OR ([承認者コード] = @Original_承認者コード)) AND ((@Is" +
                "Null_PaymentConfirmation = 1 AND [PaymentConfirmation] IS NULL) OR ([PaymentConf" +
                "irmation] = @Original_PaymentConfirmation)) AND ((@IsNull_PaymentReceivedDate = " +
                "1 AND [PaymentReceivedDate] IS NULL) OR ([PaymentReceivedDate] = @Original_Payme" +
                "ntReceivedDate)) AND ((@IsNull_ProductionApprovedDate = 1 AND [ProductionApprove" +
                "dDate] IS NULL) OR ([ProductionApprovedDate] = @Original_ProductionApprovedDate)" +
                ") AND ((@IsNull_ProductionApproverCode = 1 AND [ProductionApproverCode] IS NULL)" +
                " OR ([ProductionApproverCode] = @Original_ProductionApproverCode)) AND ((@IsNull" +
                "_ManufacturingCompletionApprovedDate = 1 AND [ManufacturingCompletionApprovedDat" +
                "e] IS NULL) OR ([ManufacturingCompletionApprovedDate] = @Original_ManufacturingC" +
                "ompletionApprovedDate)) AND ((@IsNull_ManufacturingCompletionApproverCode = 1 AN" +
                "D [ManufacturingCompletionApproverCode] IS NULL) OR ([ManufacturingCompletionApp" +
                "roverCode] = @Original_ManufacturingCompletionApproverCode)) AND ((@IsNull_完了承認日" +
                " = 1 AND [完了承認日] IS NULL) OR ([完了承認日] = @Original_完了承認日)) AND ((@IsNull_完了承認者コード" +
                " = 1 AND [完了承認者コード] IS NULL) OR ([完了承認者コード] = @Original_完了承認者コード)) AND ((@IsNull" +
                "_受注完了承認 = 1 AND [受注完了承認] IS NULL) OR ([受注完了承認] = @Original_受注完了承認)) AND ((@IsNul" +
                "l_集計日付 = 1 AND [集計日付] IS NULL) OR ([集計日付] = @Original_集計日付)) AND ((@IsNull_請求コード" +
                " = 1 AND [請求コード] IS NULL) OR ([請求コード] = @Original_請求コード)) AND ((@IsNull_無効日 = 1 " +
                "AND [無効日] IS NULL) OR ([無効日] = @Original_無効日)) AND ((@IsNull_非表示 = 1 AND [非表示] I" +
                "S NULL) OR ([非表示] = @Original_非表示)) AND ((@IsNull_登録日 = 1 AND [登録日] IS NULL) OR " +
                "([登録日] = @Original_登録日)) AND ((@IsNull_ReceiptComment = 1 AND [ReceiptComment] I" +
                "S NULL) OR ([ReceiptComment] = @Original_ReceiptComment)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注納期";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注納期";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_注文番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_注文番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_顧客コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_顧客コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_顧客担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_顧客担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_自社担当者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_自社担当者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_自社担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_自社担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClientCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClientCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送方法コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送方法コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先郵便番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先郵便番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先住所1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先住所1";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先住所2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先住所2";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先メールアドレス";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先メールアドレス";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_納品書送付コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_納品書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求書送付コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_TaxRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_TaxRate";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SqlDbType = global::System.Data.SqlDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_TaxCalcCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_TaxCalcCode";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_税端数処理";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_税端数処理";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipInput";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipNote";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceInputCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceInput";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceNote";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFax";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFax";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionNotice";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionNotice";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToContact";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToContact";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注承認";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造完了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷完了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_納品書発行日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_納品書発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_送り状発行日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_送り状発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_確定日時";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_確定日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_確定者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_確定者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認日時";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_完了承認日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_完了承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_完了承認者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_完了承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注完了承認";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注完了承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_集計日付";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_集計日付";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_無効日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_無効日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_非表示";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_非表示";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_登録日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_登録日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ReceiptComment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ReceiptComment";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[受注] ([受注コード], [受注版数], [承認日], [受注日], [受注納期], [出荷予定日], [注文番号], [" +
                "顧客コード], [顧客担当者名], [ClosingDay], [自社担当者コード], [自社担当者名], [ClientCode], [発送方法コード], [" +
                "ShippingGroupCode], [発送先名], [発送先郵便番号], [発送先住所1], [発送先住所2], [発送先TEL], [発送先TEL1], " +
                "[発送先TEL2], [発送先TEL3], [発送先FAX], [発送先FAX1], [発送先FAX2], [発送先FAX3], [発送先メールアドレス], [" +
                "発送先担当者名], [納品書送付コード], [請求書送付コード], [請求予定日], [TaxRate], [TaxCalcCode], [税端数処理], [P" +
                "ackingSlipInputCode], [PackingSlipInput], [PackingSlipNote], [ReceiptCommentCode" +
                "], [InvoiceInputCode], [InvoiceInput], [InvoiceNote], [InvoiceFaxCode], [Invoice" +
                "Fax], [ProductionNotice], [備考], [InvoiceFaxToName], [InvoiceFaxToContact], [Invo" +
                "iceFaxToNumber], [改版履歴], [受注承認], [製造開始日], [製造完了日], [出荷完了日], [納品書発行日], [送り状発行日], " +
                "[確定日時], [確定者コード], [承認日時], [承認者コード], [PaymentConfirmation], [PaymentReceivedDate]" +
                ", [ProductionApprovedDate], [ProductionApproverCode], [ManufacturingCompletionAp" +
                "provedDate], [ManufacturingCompletionApproverCode], [完了承認日], [完了承認者コード], [受注完了承認" +
                "], [集計日付], [請求コード], [無効日], [非表示], [登録日], [ReceiptComment]) VALUES (@受注コード, @受注版数" +
                ", @承認日, @受注日, @受注納期, @出荷予定日, @注文番号, @顧客コード, @顧客担当者名, @ClosingDay, @自社担当者コード, @自社" +
                "担当者名, @ClientCode, @発送方法コード, @ShippingGroupCode, @発送先名, @発送先郵便番号, @発送先住所1, @発送先住" +
                "所2, @発送先TEL, @発送先TEL1, @発送先TEL2, @発送先TEL3, @発送先FAX, @発送先FAX1, @発送先FAX2, @発送先FAX3" +
                ", @発送先メールアドレス, @発送先担当者名, @納品書送付コード, @請求書送付コード, @請求予定日, @TaxRate, @TaxCalcCode, @" +
                "税端数処理, @PackingSlipInputCode, @PackingSlipInput, @PackingSlipNote, @ReceiptComme" +
                "ntCode, @InvoiceInputCode, @InvoiceInput, @InvoiceNote, @InvoiceFaxCode, @Invoic" +
                "eFax, @ProductionNotice, @備考, @InvoiceFaxToName, @InvoiceFaxToContact, @InvoiceF" +
                "axToNumber, @改版履歴, @受注承認, @製造開始日, @製造完了日, @出荷完了日, @納品書発行日, @送り状発行日, @確定日時, @確定者コ" +
                "ード, @承認日時, @承認者コード, @PaymentConfirmation, @PaymentReceivedDate, @ProductionAppro" +
                "vedDate, @ProductionApproverCode, @ManufacturingCompletionApprovedDate, @Manufac" +
                "turingCompletionApproverCode, @完了承認日, @完了承認者コード, @受注完了承認, @集計日付, @請求コード, @無効日, @" +
                "非表示, @登録日, @ReceiptComment);\r\nSELECT 受注コード, 受注版数, 承認日, 受注日, 受注納期, 出荷予定日, 注文番号, 顧" +
                "客コード, 顧客担当者名, ClosingDay, 自社担当者コード, 自社担当者名, ClientCode, 発送方法コード, ShippingGroupCo" +
                "de, 発送先名, 発送先郵便番号, 発送先住所1, 発送先住所2, 発送先TEL, 発送先TEL1, 発送先TEL2, 発送先TEL3, 発送先FAX, 発送" +
                "先FAX1, 発送先FAX2, 発送先FAX3, 発送先メールアドレス, 発送先担当者名, 納品書送付コード, 請求書送付コード, 請求予定日, TaxRate" +
                ", TaxCalcCode, 税端数処理, PackingSlipInputCode, PackingSlipInput, PackingSlipNote, R" +
                "eceiptCommentCode, InvoiceInputCode, InvoiceInput, InvoiceNote, InvoiceFaxCode, " +
                "InvoiceFax, ProductionNotice, 備考, InvoiceFaxToName, InvoiceFaxToContact, Invoice" +
                "FaxToNumber, 改版履歴, 受注承認, 製造開始日, 製造完了日, 出荷完了日, 納品書発行日, 送り状発行日, 確定日時, 確定者コード, 承認日時" +
                ", 承認者コード, PaymentConfirmation, PaymentReceivedDate, ProductionApprovedDate, Prod" +
                "uctionApproverCode, ManufacturingCompletionApprovedDate, ManufacturingCompletion" +
                "ApproverCode, 完了承認日, 完了承認者コード, 受注完了承認, 集計日付, 請求コード, 無効日, 非表示, 登録日, ReceiptCommen" +
                "t FROM 受注 WHERE (受注コード = @受注コード) AND (受注版数 = @受注版数)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注納期";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@注文番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@顧客コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@顧客担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@自社担当者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@自社担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClientCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送方法コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先郵便番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先住所1";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先住所2";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先メールアドレス";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@納品書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@TaxRate";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SqlDbType = global::System.Data.SqlDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@TaxCalcCode";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@税端数処理";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFax";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionNotice";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@備考";
            param.SqlDbType = global::System.Data.SqlDbType.NText;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToContact";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@改版履歴";
            param.SqlDbType = global::System.Data.SqlDbType.NText;
            param.IsNullable = true;
            param.SourceColumn = "改版履歴";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@納品書発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@送り状発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@確定日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@確定者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@完了承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@完了承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注完了承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@集計日付";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@無効日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@非表示";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@登録日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ReceiptComment";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[受注] SET [受注コード] = @受注コード, [受注版数] = @受注版数, [承認日] = @承認日, [受注日] = @受注" +
                "日, [受注納期] = @受注納期, [出荷予定日] = @出荷予定日, [注文番号] = @注文番号, [顧客コード] = @顧客コード, [顧客担当者名] " +
                "= @顧客担当者名, [ClosingDay] = @ClosingDay, [自社担当者コード] = @自社担当者コード, [自社担当者名] = @自社担当者" +
                "名, [ClientCode] = @ClientCode, [発送方法コード] = @発送方法コード, [ShippingGroupCode] = @Ship" +
                "pingGroupCode, [発送先名] = @発送先名, [発送先郵便番号] = @発送先郵便番号, [発送先住所1] = @発送先住所1, [発送先住所2" +
                "] = @発送先住所2, [発送先TEL] = @発送先TEL, [発送先TEL1] = @発送先TEL1, [発送先TEL2] = @発送先TEL2, [発送" +
                "先TEL3] = @発送先TEL3, [発送先FAX] = @発送先FAX, [発送先FAX1] = @発送先FAX1, [発送先FAX2] = @発送先FAX" +
                "2, [発送先FAX3] = @発送先FAX3, [発送先メールアドレス] = @発送先メールアドレス, [発送先担当者名] = @発送先担当者名, [納品書送" +
                "付コード] = @納品書送付コード, [請求書送付コード] = @請求書送付コード, [請求予定日] = @請求予定日, [TaxRate] = @TaxRat" +
                "e, [TaxCalcCode] = @TaxCalcCode, [税端数処理] = @税端数処理, [PackingSlipInputCode] = @Pac" +
                "kingSlipInputCode, [PackingSlipInput] = @PackingSlipInput, [PackingSlipNote] = @" +
                "PackingSlipNote, [ReceiptCommentCode] = @ReceiptCommentCode, [InvoiceInputCode] " +
                "= @InvoiceInputCode, [InvoiceInput] = @InvoiceInput, [InvoiceNote] = @InvoiceNot" +
                "e, [InvoiceFaxCode] = @InvoiceFaxCode, [InvoiceFax] = @InvoiceFax, [ProductionNo" +
                "tice] = @ProductionNotice, [備考] = @備考, [InvoiceFaxToName] = @InvoiceFaxToName, [" +
                "InvoiceFaxToContact] = @InvoiceFaxToContact, [InvoiceFaxToNumber] = @InvoiceFaxT" +
                "oNumber, [改版履歴] = @改版履歴, [受注承認] = @受注承認, [製造開始日] = @製造開始日, [製造完了日] = @製造完了日, [出荷" +
                "完了日] = @出荷完了日, [納品書発行日] = @納品書発行日, [送り状発行日] = @送り状発行日, [確定日時] = @確定日時, [確定者コード] " +
                "= @確定者コード, [承認日時] = @承認日時, [承認者コード] = @承認者コード, [PaymentConfirmation] = @PaymentC" +
                "onfirmation, [PaymentReceivedDate] = @PaymentReceivedDate, [ProductionApprovedDa" +
                "te] = @ProductionApprovedDate, [ProductionApproverCode] = @ProductionApproverCod" +
                "e, [ManufacturingCompletionApprovedDate] = @ManufacturingCompletionApprovedDate," +
                " [ManufacturingCompletionApproverCode] = @ManufacturingCompletionApproverCode, [" +
                "完了承認日] = @完了承認日, [完了承認者コード] = @完了承認者コード, [受注完了承認] = @受注完了承認, [集計日付] = @集計日付, [請求" +
                "コード] = @請求コード, [無効日] = @無効日, [非表示] = @非表示, [登録日] = @登録日, [ReceiptComment] = @Rec" +
                "eiptComment WHERE (([受注コード] = @Original_受注コード) AND ([受注版数] = @Original_受注版数) AND" +
                " ((@IsNull_承認日 = 1 AND [承認日] IS NULL) OR ([承認日] = @Original_承認日)) AND ((@IsNull_" +
                "受注日 = 1 AND [受注日] IS NULL) OR ([受注日] = @Original_受注日)) AND ((@IsNull_受注納期 = 1 AN" +
                "D [受注納期] IS NULL) OR ([受注納期] = @Original_受注納期)) AND ((@IsNull_出荷予定日 = 1 AND [出荷予" +
                "定日] IS NULL) OR ([出荷予定日] = @Original_出荷予定日)) AND ((@IsNull_注文番号 = 1 AND [注文番号] I" +
                "S NULL) OR ([注文番号] = @Original_注文番号)) AND ((@IsNull_顧客コード = 1 AND [顧客コード] IS NUL" +
                "L) OR ([顧客コード] = @Original_顧客コード)) AND ((@IsNull_顧客担当者名 = 1 AND [顧客担当者名] IS NULL" +
                ") OR ([顧客担当者名] = @Original_顧客担当者名)) AND ((@IsNull_ClosingDay = 1 AND [ClosingDay" +
                "] IS NULL) OR ([ClosingDay] = @Original_ClosingDay)) AND ((@IsNull_自社担当者コード = 1 " +
                "AND [自社担当者コード] IS NULL) OR ([自社担当者コード] = @Original_自社担当者コード)) AND ((@IsNull_自社担当" +
                "者名 = 1 AND [自社担当者名] IS NULL) OR ([自社担当者名] = @Original_自社担当者名)) AND ((@IsNull_Cli" +
                "entCode = 1 AND [ClientCode] IS NULL) OR ([ClientCode] = @Original_ClientCode)) " +
                "AND ((@IsNull_発送方法コード = 1 AND [発送方法コード] IS NULL) OR ([発送方法コード] = @Original_発送方法コ" +
                "ード)) AND ((@IsNull_ShippingGroupCode = 1 AND [ShippingGroupCode] IS NULL) OR ([S" +
                "hippingGroupCode] = @Original_ShippingGroupCode)) AND ((@IsNull_発送先名 = 1 AND [発送" +
                "先名] IS NULL) OR ([発送先名] = @Original_発送先名)) AND ((@IsNull_発送先郵便番号 = 1 AND [発送先郵便番" +
                "号] IS NULL) OR ([発送先郵便番号] = @Original_発送先郵便番号)) AND ((@IsNull_発送先住所1 = 1 AND [発送" +
                "先住所1] IS NULL) OR ([発送先住所1] = @Original_発送先住所1)) AND ((@IsNull_発送先住所2 = 1 AND [発" +
                "送先住所2] IS NULL) OR ([発送先住所2] = @Original_発送先住所2)) AND ((@IsNull_発送先TEL = 1 AND [" +
                "発送先TEL] IS NULL) OR ([発送先TEL] = @Original_発送先TEL)) AND ((@IsNull_発送先TEL1 = 1 AND" +
                " [発送先TEL1] IS NULL) OR ([発送先TEL1] = @Original_発送先TEL1)) AND ((@IsNull_発送先TEL2 = " +
                "1 AND [発送先TEL2] IS NULL) OR ([発送先TEL2] = @Original_発送先TEL2)) AND ((@IsNull_発送先TE" +
                "L3 = 1 AND [発送先TEL3] IS NULL) OR ([発送先TEL3] = @Original_発送先TEL3)) AND ((@IsNull_" +
                "発送先FAX = 1 AND [発送先FAX] IS NULL) OR ([発送先FAX] = @Original_発送先FAX)) AND ((@IsNull" +
                "_発送先FAX1 = 1 AND [発送先FAX1] IS NULL) OR ([発送先FAX1] = @Original_発送先FAX1)) AND ((@I" +
                "sNull_発送先FAX2 = 1 AND [発送先FAX2] IS NULL) OR ([発送先FAX2] = @Original_発送先FAX2)) AND" +
                " ((@IsNull_発送先FAX3 = 1 AND [発送先FAX3] IS NULL) OR ([発送先FAX3] = @Original_発送先FAX3)" +
                ") AND ((@IsNull_発送先メールアドレス = 1 AND [発送先メールアドレス] IS NULL) OR ([発送先メールアドレス] = @Ori" +
                "ginal_発送先メールアドレス)) AND ((@IsNull_発送先担当者名 = 1 AND [発送先担当者名] IS NULL) OR ([発送先担当者名" +
                "] = @Original_発送先担当者名)) AND ((@IsNull_納品書送付コード = 1 AND [納品書送付コード] IS NULL) OR ([" +
                "納品書送付コード] = @Original_納品書送付コード)) AND ((@IsNull_請求書送付コード = 1 AND [請求書送付コード] IS NU" +
                "LL) OR ([請求書送付コード] = @Original_請求書送付コード)) AND ((@IsNull_請求予定日 = 1 AND [請求予定日] IS" +
                " NULL) OR ([請求予定日] = @Original_請求予定日)) AND ((@IsNull_TaxRate = 1 AND [TaxRate] I" +
                "S NULL) OR ([TaxRate] = @Original_TaxRate)) AND ((@IsNull_TaxCalcCode = 1 AND [T" +
                "axCalcCode] IS NULL) OR ([TaxCalcCode] = @Original_TaxCalcCode)) AND ((@IsNull_税" +
                "端数処理 = 1 AND [税端数処理] IS NULL) OR ([税端数処理] = @Original_税端数処理)) AND ((@IsNull_Pack" +
                "ingSlipInputCode = 1 AND [PackingSlipInputCode] IS NULL) OR ([PackingSlipInputCo" +
                "de] = @Original_PackingSlipInputCode)) AND ((@IsNull_PackingSlipInput = 1 AND [P" +
                "ackingSlipInput] IS NULL) OR ([PackingSlipInput] = @Original_PackingSlipInput)) " +
                "AND ((@IsNull_PackingSlipNote = 1 AND [PackingSlipNote] IS NULL) OR ([PackingSli" +
                "pNote] = @Original_PackingSlipNote)) AND ((@IsNull_ReceiptCommentCode = 1 AND [R" +
                "eceiptCommentCode] IS NULL) OR ([ReceiptCommentCode] = @Original_ReceiptCommentC" +
                "ode)) AND ((@IsNull_InvoiceInputCode = 1 AND [InvoiceInputCode] IS NULL) OR ([In" +
                "voiceInputCode] = @Original_InvoiceInputCode)) AND ((@IsNull_InvoiceInput = 1 AN" +
                "D [InvoiceInput] IS NULL) OR ([InvoiceInput] = @Original_InvoiceInput)) AND ((@I" +
                "sNull_InvoiceNote = 1 AND [InvoiceNote] IS NULL) OR ([InvoiceNote] = @Original_I" +
                "nvoiceNote)) AND ((@IsNull_InvoiceFaxCode = 1 AND [InvoiceFaxCode] IS NULL) OR (" +
                "[InvoiceFaxCode] = @Original_InvoiceFaxCode)) AND ((@IsNull_InvoiceFax = 1 AND [" +
                "InvoiceFax] IS NULL) OR ([InvoiceFax] = @Original_InvoiceFax)) AND ((@IsNull_Pro" +
                "ductionNotice = 1 AND [ProductionNotice] IS NULL) OR ([ProductionNotice] = @Orig" +
                "inal_ProductionNotice)) AND ((@IsNull_InvoiceFaxToName = 1 AND [InvoiceFaxToName" +
                "] IS NULL) OR ([InvoiceFaxToName] = @Original_InvoiceFaxToName)) AND ((@IsNull_I" +
                "nvoiceFaxToContact = 1 AND [InvoiceFaxToContact] IS NULL) OR ([InvoiceFaxToConta" +
                "ct] = @Original_InvoiceFaxToContact)) AND ((@IsNull_InvoiceFaxToNumber = 1 AND [" +
                "InvoiceFaxToNumber] IS NULL) OR ([InvoiceFaxToNumber] = @Original_InvoiceFaxToNu" +
                "mber)) AND ((@IsNull_受注承認 = 1 AND [受注承認] IS NULL) OR ([受注承認] = @Original_受注承認)) " +
                "AND ((@IsNull_製造開始日 = 1 AND [製造開始日] IS NULL) OR ([製造開始日] = @Original_製造開始日)) AND" +
                " ((@IsNull_製造完了日 = 1 AND [製造完了日] IS NULL) OR ([製造完了日] = @Original_製造完了日)) AND ((" +
                "@IsNull_出荷完了日 = 1 AND [出荷完了日] IS NULL) OR ([出荷完了日] = @Original_出荷完了日)) AND ((@Is" +
                "Null_納品書発行日 = 1 AND [納品書発行日] IS NULL) OR ([納品書発行日] = @Original_納品書発行日)) AND ((@I" +
                "sNull_送り状発行日 = 1 AND [送り状発行日] IS NULL) OR ([送り状発行日] = @Original_送り状発行日)) AND ((@" +
                "IsNull_確定日時 = 1 AND [確定日時] IS NULL) OR ([確定日時] = @Original_確定日時)) AND ((@IsNull_" +
                "確定者コード = 1 AND [確定者コード] IS NULL) OR ([確定者コード] = @Original_確定者コード)) AND ((@IsNull" +
                "_承認日時 = 1 AND [承認日時] IS NULL) OR ([承認日時] = @Original_承認日時)) AND ((@IsNull_承認者コード" +
                " = 1 AND [承認者コード] IS NULL) OR ([承認者コード] = @Original_承認者コード)) AND ((@IsNull_Payme" +
                "ntConfirmation = 1 AND [PaymentConfirmation] IS NULL) OR ([PaymentConfirmation] " +
                "= @Original_PaymentConfirmation)) AND ((@IsNull_PaymentReceivedDate = 1 AND [Pay" +
                "mentReceivedDate] IS NULL) OR ([PaymentReceivedDate] = @Original_PaymentReceived" +
                "Date)) AND ((@IsNull_ProductionApprovedDate = 1 AND [ProductionApprovedDate] IS " +
                "NULL) OR ([ProductionApprovedDate] = @Original_ProductionApprovedDate)) AND ((@I" +
                "sNull_ProductionApproverCode = 1 AND [ProductionApproverCode] IS NULL) OR ([Prod" +
                "uctionApproverCode] = @Original_ProductionApproverCode)) AND ((@IsNull_Manufactu" +
                "ringCompletionApprovedDate = 1 AND [ManufacturingCompletionApprovedDate] IS NULL" +
                ") OR ([ManufacturingCompletionApprovedDate] = @Original_ManufacturingCompletionA" +
                "pprovedDate)) AND ((@IsNull_ManufacturingCompletionApproverCode = 1 AND [Manufac" +
                "turingCompletionApproverCode] IS NULL) OR ([ManufacturingCompletionApproverCode]" +
                " = @Original_ManufacturingCompletionApproverCode)) AND ((@IsNull_完了承認日 = 1 AND [" +
                "完了承認日] IS NULL) OR ([完了承認日] = @Original_完了承認日)) AND ((@IsNull_完了承認者コード = 1 AND [" +
                "完了承認者コード] IS NULL) OR ([完了承認者コード] = @Original_完了承認者コード)) AND ((@IsNull_受注完了承認 = " +
                "1 AND [受注完了承認] IS NULL) OR ([受注完了承認] = @Original_受注完了承認)) AND ((@IsNull_集計日付 = 1" +
                " AND [集計日付] IS NULL) OR ([集計日付] = @Original_集計日付)) AND ((@IsNull_請求コード = 1 AND [" +
                "請求コード] IS NULL) OR ([請求コード] = @Original_請求コード)) AND ((@IsNull_無効日 = 1 AND [無効日] " +
                "IS NULL) OR ([無効日] = @Original_無効日)) AND ((@IsNull_非表示 = 1 AND [非表示] IS NULL) OR" +
                " ([非表示] = @Original_非表示)) AND ((@IsNull_登録日 = 1 AND [登録日] IS NULL) OR ([登録日] = @" +
                "Original_登録日)) AND ((@IsNull_ReceiptComment = 1 AND [ReceiptComment] IS NULL) OR" +
                " ([ReceiptComment] = @Original_ReceiptComment)));\r\nSELECT 受注コード, 受注版数, 承認日, 受注日," +
                " 受注納期, 出荷予定日, 注文番号, 顧客コード, 顧客担当者名, ClosingDay, 自社担当者コード, 自社担当者名, ClientCode, 発送方" +
                "法コード, ShippingGroupCode, 発送先名, 発送先郵便番号, 発送先住所1, 発送先住所2, 発送先TEL, 発送先TEL1, 発送先TEL2" +
                ", 発送先TEL3, 発送先FAX, 発送先FAX1, 発送先FAX2, 発送先FAX3, 発送先メールアドレス, 発送先担当者名, 納品書送付コード, 請求書" +
                "送付コード, 請求予定日, TaxRate, TaxCalcCode, 税端数処理, PackingSlipInputCode, PackingSlipInpu" +
                "t, PackingSlipNote, ReceiptCommentCode, InvoiceInputCode, InvoiceInput, InvoiceN" +
                "ote, InvoiceFaxCode, InvoiceFax, ProductionNotice, 備考, InvoiceFaxToName, Invoice" +
                "FaxToContact, InvoiceFaxToNumber, 改版履歴, 受注承認, 製造開始日, 製造完了日, 出荷完了日, 納品書発行日, 送り状発行" +
                "日, 確定日時, 確定者コード, 承認日時, 承認者コード, PaymentConfirmation, PaymentReceivedDate, Product" +
                "ionApprovedDate, ProductionApproverCode, ManufacturingCompletionApprovedDate, Ma" +
                "nufacturingCompletionApproverCode, 完了承認日, 完了承認者コード, 受注完了承認, 集計日付, 請求コード, 無効日, 非表" +
                "示, 登録日, ReceiptComment FROM 受注 WHERE (受注コード = @受注コード) AND (受注版数 = @受注版数)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注納期";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@注文番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@顧客コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@顧客担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@自社担当者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@自社担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ClientCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送方法コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先郵便番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先住所1";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先住所2";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先TEL3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先FAX3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先メールアドレス";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@発送先担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@納品書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@TaxRate";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SqlDbType = global::System.Data.SqlDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@TaxCalcCode";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@税端数処理";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PackingSlipNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFax";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionNotice";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@備考";
            param.SqlDbType = global::System.Data.SqlDbType.NText;
            param.IsNullable = true;
            param.SourceColumn = "備考";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToContact";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@改版履歴";
            param.SqlDbType = global::System.Data.SqlDbType.NText;
            param.IsNullable = true;
            param.SourceColumn = "改版履歴";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@製造完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@出荷完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@納品書発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@送り状発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@確定日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@確定者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@完了承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@完了承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@受注完了承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@集計日付";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@無効日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@非表示";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@登録日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ReceiptComment";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "受注コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注版数";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "受注版数";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注納期";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注納期";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "受注納期";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_注文番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_注文番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "注文番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_顧客コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_顧客コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_顧客担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_顧客担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "顧客担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClosingDay";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClosingDay";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_自社担当者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_自社担当者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_自社担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_自社担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "自社担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ClientCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ClientCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ClientCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送方法コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送方法コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "発送方法コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ShippingGroupCode";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "ShippingGroupCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先郵便番号";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先郵便番号";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先郵便番号";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先住所1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先住所1";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先住所2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先住所2";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先住所2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先TEL3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先TEL3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先TEL3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX1";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX2";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先FAX3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先FAX3";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "発送先FAX3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先メールアドレス";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先メールアドレス";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先メールアドレス";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_発送先担当者名";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_発送先担当者名";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "発送先担当者名";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_納品書送付コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_納品書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "納品書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求書送付コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求書送付コード";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "請求書送付コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求予定日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求予定日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "請求予定日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_TaxRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_TaxRate";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SqlDbType = global::System.Data.SqlDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "TaxRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_TaxCalcCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_TaxCalcCode";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "TaxCalcCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_税端数処理";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_税端数処理";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "税端数処理";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipInput";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PackingSlipNote";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PackingSlipNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "PackingSlipNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ReceiptCommentCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptCommentCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceInputCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceInputCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInputCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceInput";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceInput";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceInput";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceNote";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceNote";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceNote";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFax";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFax";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionNotice";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionNotice";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ProductionNotice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToName";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToContact";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToContact";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToContact";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InvoiceFaxToNumber";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "InvoiceFaxToNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注承認";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造開始日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造開始日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造開始日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_製造完了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_製造完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "製造完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_出荷完了日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_出荷完了日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "出荷完了日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_納品書発行日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_納品書発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "納品書発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_送り状発行日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_送り状発行日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "送り状発行日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_確定日時";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_確定日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "確定日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_確定者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_確定者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "確定者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認日時";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認日時";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "承認日時";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_承認者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PaymentConfirmation";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "PaymentConfirmation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PaymentReceivedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "PaymentReceivedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ProductionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ProductionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ManufacturingCompletionApprovedDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApprovedDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ManufacturingCompletionApproverCode";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "ManufacturingCompletionApproverCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_完了承認日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_完了承認日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "完了承認日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_完了承認者コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_完了承認者コード";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.SqlDbType = global::System.Data.SqlDbType.NChar;
            param.IsNullable = true;
            param.SourceColumn = "完了承認者コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_受注完了承認";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_受注完了承認";
            param.DbType = global::System.Data.DbType.Byte;
            param.SqlDbType = global::System.Data.SqlDbType.TinyInt;
            param.IsNullable = true;
            param.SourceColumn = "受注完了承認";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_集計日付";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_集計日付";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "集計日付";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_請求コード";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "請求コード";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_無効日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_無効日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "無効日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_非表示";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_非表示";
            param.DbType = global::System.Data.DbType.Int16;
            param.SqlDbType = global::System.Data.SqlDbType.SmallInt;
            param.IsNullable = true;
            param.SourceColumn = "非表示";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_登録日";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_登録日";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "登録日";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ReceiptComment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ReceiptComment";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ReceiptComment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=128.20.70.215\\MSSQLSERVER,1435;Initial Catalog=uidb;Persist Security " +
                "Info=True;User ID=sa;Password=Hbm-0855";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 受注コード, 受注版数, 承認日, 受注日, 受注納期, 出荷予定日, 注文番号, 顧客コード, 顧客担当者名, ClosingDay, 自社担当者コード, 自社担当者名, ClientCode, 発送方法コード, ShippingGroupCode, 発送先名, 発送先郵便番号, 発送先住所1, 発送先住所2, 発送先TEL, 発送先TEL1, 発送先TEL2, 発送先TEL3, 発送先FAX, 発送先FAX1, 発送先FAX2, 発送先FAX3, 発送先メールアドレス, 発送先担当者名, 納品書送付コード, 請求書送付コード, 請求予定日, TaxRate, TaxCalcCode, 税端数処理, PackingSlipInputCode, PackingSlipInput, PackingSlipNote, ReceiptCommentCode, InvoiceInputCode, InvoiceInput, InvoiceNote, InvoiceFaxCode, InvoiceFax, ProductionNotice, 備考, InvoiceFaxToName, InvoiceFaxToContact, InvoiceFaxToNumber, 改版履歴, 受注承認, 製造開始日, 製造完了日, 出荷完了日, 納品書発行日, 送り状発行日, 確定日時, 確定者コード, 承認日時, 承認者コード, PaymentConfirmation, PaymentReceivedDate, ProductionApprovedDate, ProductionApproverCode, ManufacturingCompletionApprovedDate, ManufacturingCompletionApproverCode, 完了承認日, 完了承認者コード, 受注完了承認, 集計日付, 請求コード, 無効日, 非表示, 登録日, ReceiptComment FROM dbo.受注";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.受注DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.受注DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.受注DataTable dataTable = new DataSet1.受注DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.受注DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "受注");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<global::System.DateTime> Original_承認日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_受注納期, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    string Original_注文番号, 
                    string Original_顧客コード, 
                    string Original_顧客担当者名, 
                    global::System.Nullable<int> Original_ClosingDay, 
                    string Original_自社担当者コード, 
                    string Original_自社担当者名, 
                    string Original_ClientCode, 
                    global::System.Nullable<byte> Original_発送方法コード, 
                    global::System.Nullable<short> Original_ShippingGroupCode, 
                    string Original_発送先名, 
                    string Original_発送先郵便番号, 
                    string Original_発送先住所1, 
                    string Original_発送先住所2, 
                    string Original_発送先TEL, 
                    string Original_発送先TEL1, 
                    string Original_発送先TEL2, 
                    string Original_発送先TEL3, 
                    string Original_発送先FAX, 
                    string Original_発送先FAX1, 
                    string Original_発送先FAX2, 
                    string Original_発送先FAX3, 
                    string Original_発送先メールアドレス, 
                    string Original_発送先担当者名, 
                    global::System.Nullable<byte> Original_納品書送付コード, 
                    global::System.Nullable<byte> Original_請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> Original_請求予定日, 
                    global::System.Nullable<decimal> Original_TaxRate, 
                    global::System.Nullable<byte> Original_TaxCalcCode, 
                    global::System.Nullable<byte> Original_税端数処理, 
                    string Original_PackingSlipInputCode, 
                    string Original_PackingSlipInput, 
                    string Original_PackingSlipNote, 
                    string Original_ReceiptCommentCode, 
                    string Original_InvoiceInputCode, 
                    string Original_InvoiceInput, 
                    string Original_InvoiceNote, 
                    string Original_InvoiceFaxCode, 
                    string Original_InvoiceFax, 
                    string Original_ProductionNotice, 
                    string Original_InvoiceFaxToName, 
                    string Original_InvoiceFaxToContact, 
                    string Original_InvoiceFaxToNumber, 
                    global::System.Nullable<byte> Original_受注承認, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造完了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷完了日, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日, 
                    global::System.Nullable<global::System.DateTime> Original_送り状発行日, 
                    global::System.Nullable<global::System.DateTime> Original_確定日時, 
                    string Original_確定者コード, 
                    global::System.Nullable<global::System.DateTime> Original_承認日時, 
                    string Original_承認者コード, 
                    global::System.Nullable<short> Original_PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> Original_PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_ManufacturingCompletionApprovedDate, 
                    string Original_ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_完了承認日, 
                    string Original_完了承認者コード, 
                    global::System.Nullable<byte> Original_受注完了承認, 
                    global::System.Nullable<global::System.DateTime> Original_集計日付, 
                    global::System.Nullable<int> Original_請求コード, 
                    global::System.Nullable<global::System.DateTime> Original_無効日, 
                    global::System.Nullable<short> Original_非表示, 
                    global::System.Nullable<global::System.DateTime> Original_登録日, 
                    string Original_ReceiptComment) {
            if ((Original_受注コード == null)) {
                throw new global::System.ArgumentNullException("Original_受注コード");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_受注コード));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_受注版数));
            if ((Original_承認日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_承認日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_受注納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_受注納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷予定日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_出荷予定日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_注文番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_注文番号));
            }
            if ((Original_顧客コード == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_顧客コード));
            }
            if ((Original_顧客担当者名 == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_顧客担当者名));
            }
            if ((Original_ClosingDay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_ClosingDay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_自社担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_自社担当者コード));
            }
            if ((Original_自社担当者名 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_自社担当者名));
            }
            if ((Original_ClientCode == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ClientCode));
            }
            if ((Original_発送方法コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((byte)(Original_発送方法コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingGroupCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((short)(Original_ShippingGroupCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_発送先名 == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_発送先名));
            }
            if ((Original_発送先郵便番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_発送先郵便番号));
            }
            if ((Original_発送先住所1 == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_発送先住所1));
            }
            if ((Original_発送先住所2 == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_発送先住所2));
            }
            if ((Original_発送先TEL == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_発送先TEL));
            }
            if ((Original_発送先TEL1 == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_発送先TEL1));
            }
            if ((Original_発送先TEL2 == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_発送先TEL2));
            }
            if ((Original_発送先TEL3 == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_発送先TEL3));
            }
            if ((Original_発送先FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_発送先FAX));
            }
            if ((Original_発送先FAX1 == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_発送先FAX1));
            }
            if ((Original_発送先FAX2 == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_発送先FAX2));
            }
            if ((Original_発送先FAX3 == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_発送先FAX3));
            }
            if ((Original_発送先メールアドレス == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_発送先メールアドレス));
            }
            if ((Original_発送先担当者名 == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_発送先担当者名));
            }
            if ((Original_納品書送付コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((byte)(Original_納品書送付コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_請求書送付コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((byte)(Original_請求書送付コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_請求予定日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((System.DateTime)(Original_請求予定日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_TaxRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_TaxRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_TaxCalcCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((byte)(Original_TaxCalcCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_税端数処理.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((byte)(Original_税端数処理.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_PackingSlipInputCode == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_PackingSlipInputCode));
            }
            if ((Original_PackingSlipInput == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_PackingSlipInput));
            }
            if ((Original_PackingSlipNote == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_PackingSlipNote));
            }
            if ((Original_ReceiptCommentCode == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_ReceiptCommentCode));
            }
            if ((Original_InvoiceInputCode == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_InvoiceInputCode));
            }
            if ((Original_InvoiceInput == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_InvoiceInput));
            }
            if ((Original_InvoiceNote == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_InvoiceNote));
            }
            if ((Original_InvoiceFaxCode == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_InvoiceFaxCode));
            }
            if ((Original_InvoiceFax == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_InvoiceFax));
            }
            if ((Original_ProductionNotice == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_ProductionNotice));
            }
            if ((Original_InvoiceFaxToName == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_InvoiceFaxToName));
            }
            if ((Original_InvoiceFaxToContact == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_InvoiceFaxToContact));
            }
            if ((Original_InvoiceFaxToNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_InvoiceFaxToNumber));
            }
            if ((Original_受注承認.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((byte)(Original_受注承認.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_製造開始日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((System.DateTime)(Original_製造開始日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_製造完了日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((System.DateTime)(Original_製造完了日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷完了日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((System.DateTime)(Original_出荷完了日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((System.DateTime)(Original_納品書発行日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_送り状発行日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((System.DateTime)(Original_送り状発行日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_確定日時.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((System.DateTime)(Original_確定日時.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_確定者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((string)(Original_確定者コード));
            }
            if ((Original_承認日時.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((System.DateTime)(Original_承認日時.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_承認者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((string)(Original_承認者コード));
            }
            if ((Original_PaymentConfirmation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((short)(Original_PaymentConfirmation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_PaymentReceivedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((System.DateTime)(Original_PaymentReceivedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApprovedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((System.DateTime)(Original_ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApproverCode == null)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((string)(Original_ProductionApproverCode));
            }
            if ((Original_ManufacturingCompletionApprovedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((System.DateTime)(Original_ManufacturingCompletionApprovedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_ManufacturingCompletionApproverCode == null)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((string)(Original_ManufacturingCompletionApproverCode));
            }
            if ((Original_完了承認日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((System.DateTime)(Original_完了承認日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_完了承認者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((string)(Original_完了承認者コード));
            }
            if ((Original_受注完了承認.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((byte)(Original_受注完了承認.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_集計日付.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((System.DateTime)(Original_集計日付.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_請求コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((int)(Original_請求コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_無効日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((System.DateTime)(Original_無効日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_非表示.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((short)(Original_非表示.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_登録日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((System.DateTime)(Original_登録日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiptComment == null)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((string)(Original_ReceiptComment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string 受注コード, 
                    short 受注版数, 
                    global::System.Nullable<global::System.DateTime> 承認日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 受注納期, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    string 注文番号, 
                    string 顧客コード, 
                    string 顧客担当者名, 
                    global::System.Nullable<int> ClosingDay, 
                    string 自社担当者コード, 
                    string 自社担当者名, 
                    string ClientCode, 
                    global::System.Nullable<byte> 発送方法コード, 
                    global::System.Nullable<short> ShippingGroupCode, 
                    string 発送先名, 
                    string 発送先郵便番号, 
                    string 発送先住所1, 
                    string 発送先住所2, 
                    string 発送先TEL, 
                    string 発送先TEL1, 
                    string 発送先TEL2, 
                    string 発送先TEL3, 
                    string 発送先FAX, 
                    string 発送先FAX1, 
                    string 発送先FAX2, 
                    string 発送先FAX3, 
                    string 発送先メールアドレス, 
                    string 発送先担当者名, 
                    global::System.Nullable<byte> 納品書送付コード, 
                    global::System.Nullable<byte> 請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> 請求予定日, 
                    global::System.Nullable<decimal> TaxRate, 
                    global::System.Nullable<byte> TaxCalcCode, 
                    global::System.Nullable<byte> 税端数処理, 
                    string PackingSlipInputCode, 
                    string PackingSlipInput, 
                    string PackingSlipNote, 
                    string ReceiptCommentCode, 
                    string InvoiceInputCode, 
                    string InvoiceInput, 
                    string InvoiceNote, 
                    string InvoiceFaxCode, 
                    string InvoiceFax, 
                    string ProductionNotice, 
                    string 備考, 
                    string InvoiceFaxToName, 
                    string InvoiceFaxToContact, 
                    string InvoiceFaxToNumber, 
                    string 改版履歴, 
                    global::System.Nullable<byte> 受注承認, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造完了日, 
                    global::System.Nullable<global::System.DateTime> 出荷完了日, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日, 
                    global::System.Nullable<global::System.DateTime> 送り状発行日, 
                    global::System.Nullable<global::System.DateTime> 確定日時, 
                    string 確定者コード, 
                    global::System.Nullable<global::System.DateTime> 承認日時, 
                    string 承認者コード, 
                    global::System.Nullable<short> PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> ManufacturingCompletionApprovedDate, 
                    string ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> 完了承認日, 
                    string 完了承認者コード, 
                    global::System.Nullable<byte> 受注完了承認, 
                    global::System.Nullable<global::System.DateTime> 集計日付, 
                    global::System.Nullable<int> 請求コード, 
                    global::System.Nullable<global::System.DateTime> 無効日, 
                    global::System.Nullable<short> 非表示, 
                    global::System.Nullable<global::System.DateTime> 登録日, 
                    string ReceiptComment) {
            if ((受注コード == null)) {
                throw new global::System.ArgumentNullException("受注コード");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(受注コード));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(受注版数));
            if ((承認日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(承認日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((受注納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(受注納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((出荷予定日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(出荷予定日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((注文番号 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(注文番号));
            }
            if ((顧客コード == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(顧客コード));
            }
            if ((顧客担当者名 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(顧客担当者名));
            }
            if ((ClosingDay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ClosingDay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((自社担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(自社担当者コード));
            }
            if ((自社担当者名 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(自社担当者名));
            }
            if ((ClientCode == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ClientCode));
            }
            if ((発送方法コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((byte)(発送方法コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ShippingGroupCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((short)(ShippingGroupCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((発送先名 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(発送先名));
            }
            if ((発送先郵便番号 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(発送先郵便番号));
            }
            if ((発送先住所1 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(発送先住所1));
            }
            if ((発送先住所2 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(発送先住所2));
            }
            if ((発送先TEL == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(発送先TEL));
            }
            if ((発送先TEL1 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(発送先TEL1));
            }
            if ((発送先TEL2 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(発送先TEL2));
            }
            if ((発送先TEL3 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(発送先TEL3));
            }
            if ((発送先FAX == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(発送先FAX));
            }
            if ((発送先FAX1 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(発送先FAX1));
            }
            if ((発送先FAX2 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(発送先FAX2));
            }
            if ((発送先FAX3 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(発送先FAX3));
            }
            if ((発送先メールアドレス == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(発送先メールアドレス));
            }
            if ((発送先担当者名 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(発送先担当者名));
            }
            if ((納品書送付コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(納品書送付コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((請求書送付コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(請求書送付コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((請求予定日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(請求予定日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((TaxRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(TaxRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TaxCalcCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((byte)(TaxCalcCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((税端数処理.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((byte)(税端数処理.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PackingSlipInputCode == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(PackingSlipInputCode));
            }
            if ((PackingSlipInput == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(PackingSlipInput));
            }
            if ((PackingSlipNote == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(PackingSlipNote));
            }
            if ((ReceiptCommentCode == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ReceiptCommentCode));
            }
            if ((InvoiceInputCode == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(InvoiceInputCode));
            }
            if ((InvoiceInput == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(InvoiceInput));
            }
            if ((InvoiceNote == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(InvoiceNote));
            }
            if ((InvoiceFaxCode == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(InvoiceFaxCode));
            }
            if ((InvoiceFax == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(InvoiceFax));
            }
            if ((ProductionNotice == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(ProductionNotice));
            }
            if ((備考 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(備考));
            }
            if ((InvoiceFaxToName == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(InvoiceFaxToName));
            }
            if ((InvoiceFaxToContact == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(InvoiceFaxToContact));
            }
            if ((InvoiceFaxToNumber == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(InvoiceFaxToNumber));
            }
            if ((改版履歴 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(改版履歴));
            }
            if ((受注承認.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((byte)(受注承認.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((製造開始日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(製造開始日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((製造完了日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(製造完了日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((出荷完了日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(出荷完了日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((納品書発行日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(納品書発行日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((送り状発行日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(送り状発行日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((確定日時.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(確定日時.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((確定者コード == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(確定者コード));
            }
            if ((承認日時.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(承認日時.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((承認者コード == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(承認者コード));
            }
            if ((PaymentConfirmation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((short)(PaymentConfirmation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((PaymentReceivedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((System.DateTime)(PaymentReceivedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((ProductionApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((ProductionApproverCode == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(ProductionApproverCode));
            }
            if ((ManufacturingCompletionApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((System.DateTime)(ManufacturingCompletionApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((ManufacturingCompletionApproverCode == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(ManufacturingCompletionApproverCode));
            }
            if ((完了承認日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((System.DateTime)(完了承認日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((完了承認者コード == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(完了承認者コード));
            }
            if ((受注完了承認.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((byte)(受注完了承認.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((集計日付.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((System.DateTime)(集計日付.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((請求コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((int)(請求コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((無効日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((System.DateTime)(無効日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((非表示.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((short)(非表示.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((登録日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((System.DateTime)(登録日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ReceiptComment == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(ReceiptComment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string 受注コード, 
                    short 受注版数, 
                    global::System.Nullable<global::System.DateTime> 承認日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 受注納期, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    string 注文番号, 
                    string 顧客コード, 
                    string 顧客担当者名, 
                    global::System.Nullable<int> ClosingDay, 
                    string 自社担当者コード, 
                    string 自社担当者名, 
                    string ClientCode, 
                    global::System.Nullable<byte> 発送方法コード, 
                    global::System.Nullable<short> ShippingGroupCode, 
                    string 発送先名, 
                    string 発送先郵便番号, 
                    string 発送先住所1, 
                    string 発送先住所2, 
                    string 発送先TEL, 
                    string 発送先TEL1, 
                    string 発送先TEL2, 
                    string 発送先TEL3, 
                    string 発送先FAX, 
                    string 発送先FAX1, 
                    string 発送先FAX2, 
                    string 発送先FAX3, 
                    string 発送先メールアドレス, 
                    string 発送先担当者名, 
                    global::System.Nullable<byte> 納品書送付コード, 
                    global::System.Nullable<byte> 請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> 請求予定日, 
                    global::System.Nullable<decimal> TaxRate, 
                    global::System.Nullable<byte> TaxCalcCode, 
                    global::System.Nullable<byte> 税端数処理, 
                    string PackingSlipInputCode, 
                    string PackingSlipInput, 
                    string PackingSlipNote, 
                    string ReceiptCommentCode, 
                    string InvoiceInputCode, 
                    string InvoiceInput, 
                    string InvoiceNote, 
                    string InvoiceFaxCode, 
                    string InvoiceFax, 
                    string ProductionNotice, 
                    string 備考, 
                    string InvoiceFaxToName, 
                    string InvoiceFaxToContact, 
                    string InvoiceFaxToNumber, 
                    string 改版履歴, 
                    global::System.Nullable<byte> 受注承認, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造完了日, 
                    global::System.Nullable<global::System.DateTime> 出荷完了日, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日, 
                    global::System.Nullable<global::System.DateTime> 送り状発行日, 
                    global::System.Nullable<global::System.DateTime> 確定日時, 
                    string 確定者コード, 
                    global::System.Nullable<global::System.DateTime> 承認日時, 
                    string 承認者コード, 
                    global::System.Nullable<short> PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> ManufacturingCompletionApprovedDate, 
                    string ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> 完了承認日, 
                    string 完了承認者コード, 
                    global::System.Nullable<byte> 受注完了承認, 
                    global::System.Nullable<global::System.DateTime> 集計日付, 
                    global::System.Nullable<int> 請求コード, 
                    global::System.Nullable<global::System.DateTime> 無効日, 
                    global::System.Nullable<short> 非表示, 
                    global::System.Nullable<global::System.DateTime> 登録日, 
                    string ReceiptComment, 
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<global::System.DateTime> Original_承認日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_受注納期, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    string Original_注文番号, 
                    string Original_顧客コード, 
                    string Original_顧客担当者名, 
                    global::System.Nullable<int> Original_ClosingDay, 
                    string Original_自社担当者コード, 
                    string Original_自社担当者名, 
                    string Original_ClientCode, 
                    global::System.Nullable<byte> Original_発送方法コード, 
                    global::System.Nullable<short> Original_ShippingGroupCode, 
                    string Original_発送先名, 
                    string Original_発送先郵便番号, 
                    string Original_発送先住所1, 
                    string Original_発送先住所2, 
                    string Original_発送先TEL, 
                    string Original_発送先TEL1, 
                    string Original_発送先TEL2, 
                    string Original_発送先TEL3, 
                    string Original_発送先FAX, 
                    string Original_発送先FAX1, 
                    string Original_発送先FAX2, 
                    string Original_発送先FAX3, 
                    string Original_発送先メールアドレス, 
                    string Original_発送先担当者名, 
                    global::System.Nullable<byte> Original_納品書送付コード, 
                    global::System.Nullable<byte> Original_請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> Original_請求予定日, 
                    global::System.Nullable<decimal> Original_TaxRate, 
                    global::System.Nullable<byte> Original_TaxCalcCode, 
                    global::System.Nullable<byte> Original_税端数処理, 
                    string Original_PackingSlipInputCode, 
                    string Original_PackingSlipInput, 
                    string Original_PackingSlipNote, 
                    string Original_ReceiptCommentCode, 
                    string Original_InvoiceInputCode, 
                    string Original_InvoiceInput, 
                    string Original_InvoiceNote, 
                    string Original_InvoiceFaxCode, 
                    string Original_InvoiceFax, 
                    string Original_ProductionNotice, 
                    string Original_InvoiceFaxToName, 
                    string Original_InvoiceFaxToContact, 
                    string Original_InvoiceFaxToNumber, 
                    global::System.Nullable<byte> Original_受注承認, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造完了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷完了日, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日, 
                    global::System.Nullable<global::System.DateTime> Original_送り状発行日, 
                    global::System.Nullable<global::System.DateTime> Original_確定日時, 
                    string Original_確定者コード, 
                    global::System.Nullable<global::System.DateTime> Original_承認日時, 
                    string Original_承認者コード, 
                    global::System.Nullable<short> Original_PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> Original_PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_ManufacturingCompletionApprovedDate, 
                    string Original_ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_完了承認日, 
                    string Original_完了承認者コード, 
                    global::System.Nullable<byte> Original_受注完了承認, 
                    global::System.Nullable<global::System.DateTime> Original_集計日付, 
                    global::System.Nullable<int> Original_請求コード, 
                    global::System.Nullable<global::System.DateTime> Original_無効日, 
                    global::System.Nullable<short> Original_非表示, 
                    global::System.Nullable<global::System.DateTime> Original_登録日, 
                    string Original_ReceiptComment) {
            if ((受注コード == null)) {
                throw new global::System.ArgumentNullException("受注コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(受注コード));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(受注版数));
            if ((承認日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(承認日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((受注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(受注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((出荷予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(出荷予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(注文番号));
            }
            if ((顧客コード == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(顧客コード));
            }
            if ((顧客担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(顧客担当者名));
            }
            if ((ClosingDay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ClosingDay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((自社担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(自社担当者コード));
            }
            if ((自社担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(自社担当者名));
            }
            if ((ClientCode == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ClientCode));
            }
            if ((発送方法コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(発送方法コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ShippingGroupCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(ShippingGroupCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((発送先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(発送先名));
            }
            if ((発送先郵便番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(発送先郵便番号));
            }
            if ((発送先住所1 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(発送先住所1));
            }
            if ((発送先住所2 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(発送先住所2));
            }
            if ((発送先TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(発送先TEL));
            }
            if ((発送先TEL1 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(発送先TEL1));
            }
            if ((発送先TEL2 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(発送先TEL2));
            }
            if ((発送先TEL3 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(発送先TEL3));
            }
            if ((発送先FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(発送先FAX));
            }
            if ((発送先FAX1 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(発送先FAX1));
            }
            if ((発送先FAX2 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(発送先FAX2));
            }
            if ((発送先FAX3 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(発送先FAX3));
            }
            if ((発送先メールアドレス == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(発送先メールアドレス));
            }
            if ((発送先担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(発送先担当者名));
            }
            if ((納品書送付コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(納品書送付コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((請求書送付コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(請求書送付コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((請求予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(請求予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((TaxRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(TaxRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TaxCalcCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((byte)(TaxCalcCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((税端数処理.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((byte)(税端数処理.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PackingSlipInputCode == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(PackingSlipInputCode));
            }
            if ((PackingSlipInput == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(PackingSlipInput));
            }
            if ((PackingSlipNote == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(PackingSlipNote));
            }
            if ((ReceiptCommentCode == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ReceiptCommentCode));
            }
            if ((InvoiceInputCode == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(InvoiceInputCode));
            }
            if ((InvoiceInput == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(InvoiceInput));
            }
            if ((InvoiceNote == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(InvoiceNote));
            }
            if ((InvoiceFaxCode == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(InvoiceFaxCode));
            }
            if ((InvoiceFax == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(InvoiceFax));
            }
            if ((ProductionNotice == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(ProductionNotice));
            }
            if ((備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(備考));
            }
            if ((InvoiceFaxToName == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(InvoiceFaxToName));
            }
            if ((InvoiceFaxToContact == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(InvoiceFaxToContact));
            }
            if ((InvoiceFaxToNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(InvoiceFaxToNumber));
            }
            if ((改版履歴 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(改版履歴));
            }
            if ((受注承認.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((byte)(受注承認.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((製造開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(製造開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((製造完了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(製造完了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((出荷完了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(出荷完了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((納品書発行日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(納品書発行日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((送り状発行日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(送り状発行日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((確定日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(確定日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((確定者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(確定者コード));
            }
            if ((承認日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(承認日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((承認者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(承認者コード));
            }
            if ((PaymentConfirmation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((short)(PaymentConfirmation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((PaymentReceivedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(PaymentReceivedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((ProductionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((ProductionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(ProductionApproverCode));
            }
            if ((ManufacturingCompletionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(ManufacturingCompletionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((ManufacturingCompletionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(ManufacturingCompletionApproverCode));
            }
            if ((完了承認日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(完了承認日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((完了承認者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(完了承認者コード));
            }
            if ((受注完了承認.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((byte)(受注完了承認.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((集計日付.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(集計日付.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((請求コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(請求コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((無効日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(無効日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((非表示.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((short)(非表示.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((登録日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(登録日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ReceiptComment == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(ReceiptComment));
            }
            if ((Original_受注コード == null)) {
                throw new global::System.ArgumentNullException("Original_受注コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_受注コード));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((short)(Original_受注版数));
            if ((Original_承認日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(Original_承認日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_受注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTime)(Original_受注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_出荷予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_注文番号));
            }
            if ((Original_顧客コード == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_顧客コード));
            }
            if ((Original_顧客担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_顧客担当者名));
            }
            if ((Original_ClosingDay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_ClosingDay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_自社担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_自社担当者コード));
            }
            if ((Original_自社担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_自社担当者名));
            }
            if ((Original_ClientCode == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_ClientCode));
            }
            if ((Original_発送方法コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((byte)(Original_発送方法コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingGroupCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((short)(Original_ShippingGroupCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_発送先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_発送先名));
            }
            if ((Original_発送先郵便番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_発送先郵便番号));
            }
            if ((Original_発送先住所1 == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_発送先住所1));
            }
            if ((Original_発送先住所2 == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_発送先住所2));
            }
            if ((Original_発送先TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_発送先TEL));
            }
            if ((Original_発送先TEL1 == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_発送先TEL1));
            }
            if ((Original_発送先TEL2 == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_発送先TEL2));
            }
            if ((Original_発送先TEL3 == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_発送先TEL3));
            }
            if ((Original_発送先FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_発送先FAX));
            }
            if ((Original_発送先FAX1 == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_発送先FAX1));
            }
            if ((Original_発送先FAX2 == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_発送先FAX2));
            }
            if ((Original_発送先FAX3 == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_発送先FAX3));
            }
            if ((Original_発送先メールアドレス == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_発送先メールアドレス));
            }
            if ((Original_発送先担当者名 == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_発送先担当者名));
            }
            if ((Original_納品書送付コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((byte)(Original_納品書送付コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_請求書送付コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((byte)(Original_請求書送付コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_請求予定日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((System.DateTime)(Original_請求予定日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_TaxRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((decimal)(Original_TaxRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_TaxCalcCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((byte)(Original_TaxCalcCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_税端数処理.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((byte)(Original_税端数処理.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_PackingSlipInputCode == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_PackingSlipInputCode));
            }
            if ((Original_PackingSlipInput == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_PackingSlipInput));
            }
            if ((Original_PackingSlipNote == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_PackingSlipNote));
            }
            if ((Original_ReceiptCommentCode == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_ReceiptCommentCode));
            }
            if ((Original_InvoiceInputCode == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_InvoiceInputCode));
            }
            if ((Original_InvoiceInput == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_InvoiceInput));
            }
            if ((Original_InvoiceNote == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_InvoiceNote));
            }
            if ((Original_InvoiceFaxCode == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_InvoiceFaxCode));
            }
            if ((Original_InvoiceFax == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_InvoiceFax));
            }
            if ((Original_ProductionNotice == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_ProductionNotice));
            }
            if ((Original_InvoiceFaxToName == null)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((string)(Original_InvoiceFaxToName));
            }
            if ((Original_InvoiceFaxToContact == null)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((string)(Original_InvoiceFaxToContact));
            }
            if ((Original_InvoiceFaxToNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((string)(Original_InvoiceFaxToNumber));
            }
            if ((Original_受注承認.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((byte)(Original_受注承認.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_製造開始日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((System.DateTime)(Original_製造開始日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_製造完了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((System.DateTime)(Original_製造完了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷完了日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((System.DateTime)(Original_出荷完了日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((System.DateTime)(Original_納品書発行日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_送り状発行日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((System.DateTime)(Original_送り状発行日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            if ((Original_確定日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((System.DateTime)(Original_確定日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_確定者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(Original_確定者コード));
            }
            if ((Original_承認日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((System.DateTime)(Original_承認日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_承認者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_承認者コード));
            }
            if ((Original_PaymentConfirmation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((short)(Original_PaymentConfirmation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_PaymentReceivedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((System.DateTime)(Original_PaymentReceivedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((System.DateTime)(Original_ProductionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_ProductionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_ProductionApproverCode));
            }
            if ((Original_ManufacturingCompletionApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((System.DateTime)(Original_ManufacturingCompletionApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_ManufacturingCompletionApproverCode == null)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(Original_ManufacturingCompletionApproverCode));
            }
            if ((Original_完了承認日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((System.DateTime)(Original_完了承認日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_完了承認者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_完了承認者コード));
            }
            if ((Original_受注完了承認.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((byte)(Original_受注完了承認.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_集計日付.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((System.DateTime)(Original_集計日付.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_請求コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((int)(Original_請求コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            if ((Original_無効日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((System.DateTime)(Original_無効日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_非表示.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((short)(Original_非表示.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_登録日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((System.DateTime)(Original_登録日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiptComment == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_ReceiptComment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> 承認日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 受注納期, 
                    global::System.Nullable<global::System.DateTime> 出荷予定日, 
                    string 注文番号, 
                    string 顧客コード, 
                    string 顧客担当者名, 
                    global::System.Nullable<int> ClosingDay, 
                    string 自社担当者コード, 
                    string 自社担当者名, 
                    string ClientCode, 
                    global::System.Nullable<byte> 発送方法コード, 
                    global::System.Nullable<short> ShippingGroupCode, 
                    string 発送先名, 
                    string 発送先郵便番号, 
                    string 発送先住所1, 
                    string 発送先住所2, 
                    string 発送先TEL, 
                    string 発送先TEL1, 
                    string 発送先TEL2, 
                    string 発送先TEL3, 
                    string 発送先FAX, 
                    string 発送先FAX1, 
                    string 発送先FAX2, 
                    string 発送先FAX3, 
                    string 発送先メールアドレス, 
                    string 発送先担当者名, 
                    global::System.Nullable<byte> 納品書送付コード, 
                    global::System.Nullable<byte> 請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> 請求予定日, 
                    global::System.Nullable<decimal> TaxRate, 
                    global::System.Nullable<byte> TaxCalcCode, 
                    global::System.Nullable<byte> 税端数処理, 
                    string PackingSlipInputCode, 
                    string PackingSlipInput, 
                    string PackingSlipNote, 
                    string ReceiptCommentCode, 
                    string InvoiceInputCode, 
                    string InvoiceInput, 
                    string InvoiceNote, 
                    string InvoiceFaxCode, 
                    string InvoiceFax, 
                    string ProductionNotice, 
                    string 備考, 
                    string InvoiceFaxToName, 
                    string InvoiceFaxToContact, 
                    string InvoiceFaxToNumber, 
                    string 改版履歴, 
                    global::System.Nullable<byte> 受注承認, 
                    global::System.Nullable<global::System.DateTime> 製造開始日, 
                    global::System.Nullable<global::System.DateTime> 製造完了日, 
                    global::System.Nullable<global::System.DateTime> 出荷完了日, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日, 
                    global::System.Nullable<global::System.DateTime> 送り状発行日, 
                    global::System.Nullable<global::System.DateTime> 確定日時, 
                    string 確定者コード, 
                    global::System.Nullable<global::System.DateTime> 承認日時, 
                    string 承認者コード, 
                    global::System.Nullable<short> PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> ProductionApprovedDate, 
                    string ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> ManufacturingCompletionApprovedDate, 
                    string ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> 完了承認日, 
                    string 完了承認者コード, 
                    global::System.Nullable<byte> 受注完了承認, 
                    global::System.Nullable<global::System.DateTime> 集計日付, 
                    global::System.Nullable<int> 請求コード, 
                    global::System.Nullable<global::System.DateTime> 無効日, 
                    global::System.Nullable<short> 非表示, 
                    global::System.Nullable<global::System.DateTime> 登録日, 
                    string ReceiptComment, 
                    string Original_受注コード, 
                    short Original_受注版数, 
                    global::System.Nullable<global::System.DateTime> Original_承認日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_受注納期, 
                    global::System.Nullable<global::System.DateTime> Original_出荷予定日, 
                    string Original_注文番号, 
                    string Original_顧客コード, 
                    string Original_顧客担当者名, 
                    global::System.Nullable<int> Original_ClosingDay, 
                    string Original_自社担当者コード, 
                    string Original_自社担当者名, 
                    string Original_ClientCode, 
                    global::System.Nullable<byte> Original_発送方法コード, 
                    global::System.Nullable<short> Original_ShippingGroupCode, 
                    string Original_発送先名, 
                    string Original_発送先郵便番号, 
                    string Original_発送先住所1, 
                    string Original_発送先住所2, 
                    string Original_発送先TEL, 
                    string Original_発送先TEL1, 
                    string Original_発送先TEL2, 
                    string Original_発送先TEL3, 
                    string Original_発送先FAX, 
                    string Original_発送先FAX1, 
                    string Original_発送先FAX2, 
                    string Original_発送先FAX3, 
                    string Original_発送先メールアドレス, 
                    string Original_発送先担当者名, 
                    global::System.Nullable<byte> Original_納品書送付コード, 
                    global::System.Nullable<byte> Original_請求書送付コード, 
                    global::System.Nullable<global::System.DateTime> Original_請求予定日, 
                    global::System.Nullable<decimal> Original_TaxRate, 
                    global::System.Nullable<byte> Original_TaxCalcCode, 
                    global::System.Nullable<byte> Original_税端数処理, 
                    string Original_PackingSlipInputCode, 
                    string Original_PackingSlipInput, 
                    string Original_PackingSlipNote, 
                    string Original_ReceiptCommentCode, 
                    string Original_InvoiceInputCode, 
                    string Original_InvoiceInput, 
                    string Original_InvoiceNote, 
                    string Original_InvoiceFaxCode, 
                    string Original_InvoiceFax, 
                    string Original_ProductionNotice, 
                    string Original_InvoiceFaxToName, 
                    string Original_InvoiceFaxToContact, 
                    string Original_InvoiceFaxToNumber, 
                    global::System.Nullable<byte> Original_受注承認, 
                    global::System.Nullable<global::System.DateTime> Original_製造開始日, 
                    global::System.Nullable<global::System.DateTime> Original_製造完了日, 
                    global::System.Nullable<global::System.DateTime> Original_出荷完了日, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日, 
                    global::System.Nullable<global::System.DateTime> Original_送り状発行日, 
                    global::System.Nullable<global::System.DateTime> Original_確定日時, 
                    string Original_確定者コード, 
                    global::System.Nullable<global::System.DateTime> Original_承認日時, 
                    string Original_承認者コード, 
                    global::System.Nullable<short> Original_PaymentConfirmation, 
                    global::System.Nullable<global::System.DateTime> Original_PaymentReceivedDate, 
                    global::System.Nullable<global::System.DateTime> Original_ProductionApprovedDate, 
                    string Original_ProductionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_ManufacturingCompletionApprovedDate, 
                    string Original_ManufacturingCompletionApproverCode, 
                    global::System.Nullable<global::System.DateTime> Original_完了承認日, 
                    string Original_完了承認者コード, 
                    global::System.Nullable<byte> Original_受注完了承認, 
                    global::System.Nullable<global::System.DateTime> Original_集計日付, 
                    global::System.Nullable<int> Original_請求コード, 
                    global::System.Nullable<global::System.DateTime> Original_無効日, 
                    global::System.Nullable<short> Original_非表示, 
                    global::System.Nullable<global::System.DateTime> Original_登録日, 
                    string Original_ReceiptComment) {
            return this.Update(Original_受注コード, Original_受注版数, 承認日, 受注日, 受注納期, 出荷予定日, 注文番号, 顧客コード, 顧客担当者名, ClosingDay, 自社担当者コード, 自社担当者名, ClientCode, 発送方法コード, ShippingGroupCode, 発送先名, 発送先郵便番号, 発送先住所1, 発送先住所2, 発送先TEL, 発送先TEL1, 発送先TEL2, 発送先TEL3, 発送先FAX, 発送先FAX1, 発送先FAX2, 発送先FAX3, 発送先メールアドレス, 発送先担当者名, 納品書送付コード, 請求書送付コード, 請求予定日, TaxRate, TaxCalcCode, 税端数処理, PackingSlipInputCode, PackingSlipInput, PackingSlipNote, ReceiptCommentCode, InvoiceInputCode, InvoiceInput, InvoiceNote, InvoiceFaxCode, InvoiceFax, ProductionNotice, 備考, InvoiceFaxToName, InvoiceFaxToContact, InvoiceFaxToNumber, 改版履歴, 受注承認, 製造開始日, 製造完了日, 出荷完了日, 納品書発行日, 送り状発行日, 確定日時, 確定者コード, 承認日時, 承認者コード, PaymentConfirmation, PaymentReceivedDate, ProductionApprovedDate, ProductionApproverCode, ManufacturingCompletionApprovedDate, ManufacturingCompletionApproverCode, 完了承認日, 完了承認者コード, 受注完了承認, 集計日付, 請求コード, 無効日, 非表示, 登録日, ReceiptComment, Original_受注コード, Original_受注版数, Original_承認日, Original_受注日, Original_受注納期, Original_出荷予定日, Original_注文番号, Original_顧客コード, Original_顧客担当者名, Original_ClosingDay, Original_自社担当者コード, Original_自社担当者名, Original_ClientCode, Original_発送方法コード, Original_ShippingGroupCode, Original_発送先名, Original_発送先郵便番号, Original_発送先住所1, Original_発送先住所2, Original_発送先TEL, Original_発送先TEL1, Original_発送先TEL2, Original_発送先TEL3, Original_発送先FAX, Original_発送先FAX1, Original_発送先FAX2, Original_発送先FAX3, Original_発送先メールアドレス, Original_発送先担当者名, Original_納品書送付コード, Original_請求書送付コード, Original_請求予定日, Original_TaxRate, Original_TaxCalcCode, Original_税端数処理, Original_PackingSlipInputCode, Original_PackingSlipInput, Original_PackingSlipNote, Original_ReceiptCommentCode, Original_InvoiceInputCode, Original_InvoiceInput, Original_InvoiceNote, Original_InvoiceFaxCode, Original_InvoiceFax, Original_ProductionNotice, Original_InvoiceFaxToName, Original_InvoiceFaxToContact, Original_InvoiceFaxToNumber, Original_受注承認, Original_製造開始日, Original_製造完了日, Original_出荷完了日, Original_納品書発行日, Original_送り状発行日, Original_確定日時, Original_確定者コード, Original_承認日時, Original_承認者コード, Original_PaymentConfirmation, Original_PaymentReceivedDate, Original_ProductionApprovedDate, Original_ProductionApproverCode, Original_ManufacturingCompletionApprovedDate, Original_ManufacturingCompletionApproverCode, Original_完了承認日, Original_完了承認者コード, Original_受注完了承認, Original_集計日付, Original_請求コード, Original_無効日, Original_非表示, Original_登録日, Original_ReceiptComment);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T見積明細TableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlTransaction _transaction;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public T見積明細TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T見積明細";
            tableMapping.ColumnMappings.Add("見積コード", "見積コード");
            tableMapping.ColumnMappings.Add("見積版数", "見積版数");
            tableMapping.ColumnMappings.Add("明細番号", "明細番号");
            tableMapping.ColumnMappings.Add("行番号", "行番号");
            tableMapping.ColumnMappings.Add("品名", "品名");
            tableMapping.ColumnMappings.Add("型番", "型番");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("単位", "単位");
            tableMapping.ColumnMappings.Add("標準単価", "標準単価");
            tableMapping.ColumnMappings.Add("単価", "単価");
            tableMapping.ColumnMappings.Add("明細備考", "明細備考");
            tableMapping.ColumnMappings.Add("単価old", "単価old");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T見積明細] WHERE (([見積コード] = @Original_見積コード) AND ([見積版数] = @Original_見積版数) AND ([明細番号] = @Original_明細番号) AND ((@IsNull_行番号 = 1 AND [行番号] IS NULL) OR ([行番号] = @Original_行番号)) AND ((@IsNull_品名 = 1 AND [品名] IS NULL) OR ([品名] = @Original_品名)) AND ((@IsNull_型番 = 1 AND [型番] IS NULL) OR ([型番] = @Original_型番)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR ([数量] = @Original_数量)) AND ((@IsNull_単位 = 1 AND [単位] IS NULL) OR ([単位] = @Original_単位)) AND ((@IsNull_標準単価 = 1 AND [標準単価] IS NULL) OR ([標準単価] = @Original_標準単価)) AND ((@IsNull_単価 = 1 AND [単価] IS NULL) OR ([単価] = @Original_単価)) AND ((@IsNull_明細備考 = 1 AND [明細備考] IS NULL) OR ([明細備考] = @Original_明細備考)) AND ((@IsNull_単価old = 1 AND [単価old] IS NULL) OR ([単価old] = @Original_単価old)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_見積コード", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_見積版数", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積版数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_明細番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_行番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_品名", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_型番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_型番", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 1, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単位", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単価", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_明細備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_明細備考", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T見積明細] ([見積コード], [見積版数], [明細番号], [行番号], [品名], [型番], [数量], [単位], [標準単価], [単価], [明細備考], [単価old]) VALUES (@見積コード, @見積版数, @明細番号, @行番号, @品名, @型番, @数量, @単位, @標準単価, @単価, @明細備考, @単価old);
SELECT 見積コード, 見積版数, 明細番号, 行番号, 品名, 型番, 数量, 単位, 標準単価, 単価, 明細備考, 単価old FROM T見積明細 WHERE (明細番号 = @明細番号) AND (見積コード = @見積コード) AND (見積版数 = @見積版数)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@見積コード", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@見積版数", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積版数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@明細番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@行番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@品名", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@型番", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 1, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単位", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単価", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@明細備考", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T見積明細] SET [見積コード] = @見積コード, [見積版数] = @見積版数, [明細番号] = @明細番号, [行番号] = @行番号, [品名] = @品名, [型番] = @型番, [数量] = @数量, [単位] = @単位, [標準単価] = @標準単価, [単価] = @単価, [明細備考] = @明細備考, [単価old] = @単価old WHERE (([見積コード] = @Original_見積コード) AND ([見積版数] = @Original_見積版数) AND ([明細番号] = @Original_明細番号) AND ((@IsNull_行番号 = 1 AND [行番号] IS NULL) OR ([行番号] = @Original_行番号)) AND ((@IsNull_品名 = 1 AND [品名] IS NULL) OR ([品名] = @Original_品名)) AND ((@IsNull_型番 = 1 AND [型番] IS NULL) OR ([型番] = @Original_型番)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR ([数量] = @Original_数量)) AND ((@IsNull_単位 = 1 AND [単位] IS NULL) OR ([単位] = @Original_単位)) AND ((@IsNull_標準単価 = 1 AND [標準単価] IS NULL) OR ([標準単価] = @Original_標準単価)) AND ((@IsNull_単価 = 1 AND [単価] IS NULL) OR ([単価] = @Original_単価)) AND ((@IsNull_明細備考 = 1 AND [明細備考] IS NULL) OR ([明細備考] = @Original_明細備考)) AND ((@IsNull_単価old = 1 AND [単価old] IS NULL) OR ([単価old] = @Original_単価old)));
SELECT 見積コード, 見積版数, 明細番号, 行番号, 品名, 型番, 数量, 単位, 標準単価, 単価, 明細備考, 単価old FROM T見積明細 WHERE (明細番号 = @明細番号) AND (見積コード = @見積コード) AND (見積版数 = @見積版数)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@見積コード", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@見積版数", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積版数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@明細番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@行番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@品名", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@型番", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 1, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単位", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単価", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@明細備考", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_見積コード", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_見積版数", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "見積版数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_明細番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_行番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_品名", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_型番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_型番", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "型番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 1, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単位", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_標準単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "標準単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単価", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_明細備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_明細備考", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@IsNull_単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::Microsoft.Data.SqlClient.SqlParameter("@Original_単価old", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価old", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=128.20.70.215\\MSSQLSERVER,1435;Initial Catalog=uidb;Persist Security " +
                "Info=True;User ID=sa;Password=Hbm-0855";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 見積コード, 見積版数, 明細番号, 行番号, 品名, 型番, 数量, 単位, 標準単価, 単価, 明細備考, 単価old FROM dbo.T見積" +
                "明細";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T見積明細DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T見積明細DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T見積明細DataTable dataTable = new DataSet1.T見積明細DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T見積明細DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T見積明細");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_見積コード, short Original_見積版数, short Original_明細番号, global::System.Nullable<short> Original_行番号, string Original_品名, string Original_型番, global::System.Nullable<decimal> Original_数量, string Original_単位, global::System.Nullable<int> Original_標準単価, global::System.Nullable<decimal> Original_単価, string Original_明細備考, global::System.Nullable<int> Original_単価old) {
            if ((Original_見積コード == null)) {
                throw new global::System.ArgumentNullException("Original_見積コード");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_見積コード));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_見積版数));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_明細番号));
            if ((Original_行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_品名 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_品名));
            }
            if ((Original_型番 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_型番));
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_単位 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_単位));
            }
            if ((Original_標準単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_標準単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_明細備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_明細備考));
            }
            if ((Original_単価old.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_単価old.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string 見積コード, short 見積版数, short 明細番号, global::System.Nullable<short> 行番号, string 品名, string 型番, global::System.Nullable<decimal> 数量, string 単位, global::System.Nullable<int> 標準単価, global::System.Nullable<decimal> 単価, string 明細備考, global::System.Nullable<int> 単価old) {
            if ((見積コード == null)) {
                throw new global::System.ArgumentNullException("見積コード");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(見積コード));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(見積版数));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(明細番号));
            if ((行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((品名 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(品名));
            }
            if ((型番 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(型番));
            }
            if ((数量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((単位 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(単位));
            }
            if ((標準単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(標準単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((明細備考 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(明細備考));
            }
            if ((単価old.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(単価old.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string 見積コード, 
                    short 見積版数, 
                    short 明細番号, 
                    global::System.Nullable<short> 行番号, 
                    string 品名, 
                    string 型番, 
                    global::System.Nullable<decimal> 数量, 
                    string 単位, 
                    global::System.Nullable<int> 標準単価, 
                    global::System.Nullable<decimal> 単価, 
                    string 明細備考, 
                    global::System.Nullable<int> 単価old, 
                    string Original_見積コード, 
                    short Original_見積版数, 
                    short Original_明細番号, 
                    global::System.Nullable<short> Original_行番号, 
                    string Original_品名, 
                    string Original_型番, 
                    global::System.Nullable<decimal> Original_数量, 
                    string Original_単位, 
                    global::System.Nullable<int> Original_標準単価, 
                    global::System.Nullable<decimal> Original_単価, 
                    string Original_明細備考, 
                    global::System.Nullable<int> Original_単価old) {
            if ((見積コード == null)) {
                throw new global::System.ArgumentNullException("見積コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(見積コード));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(見積版数));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(明細番号));
            if ((行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(品名));
            }
            if ((型番 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(型番));
            }
            if ((数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(単位));
            }
            if ((標準単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(標準単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((明細備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(明細備考));
            }
            if ((単価old.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(単価old.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_見積コード == null)) {
                throw new global::System.ArgumentNullException("Original_見積コード");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_見積コード));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_見積版数));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(Original_明細番号));
            if ((Original_行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(Original_行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_品名));
            }
            if ((Original_型番 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_型番));
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_単位));
            }
            if ((Original_標準単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_標準単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_明細備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_明細備考));
            }
            if ((Original_単価old.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_単価old.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 行番号, 
                    string 品名, 
                    string 型番, 
                    global::System.Nullable<decimal> 数量, 
                    string 単位, 
                    global::System.Nullable<int> 標準単価, 
                    global::System.Nullable<decimal> 単価, 
                    string 明細備考, 
                    global::System.Nullable<int> 単価old, 
                    string Original_見積コード, 
                    short Original_見積版数, 
                    short Original_明細番号, 
                    global::System.Nullable<short> Original_行番号, 
                    string Original_品名, 
                    string Original_型番, 
                    global::System.Nullable<decimal> Original_数量, 
                    string Original_単位, 
                    global::System.Nullable<int> Original_標準単価, 
                    global::System.Nullable<decimal> Original_単価, 
                    string Original_明細備考, 
                    global::System.Nullable<int> Original_単価old) {
            return this.Update(Original_見積コード, Original_見積版数, Original_明細番号, 行番号, 品名, 型番, 数量, 単位, 標準単価, 単価, 明細備考, 単価old, Original_見積コード, Original_見積版数, Original_明細番号, Original_行番号, Original_品名, Original_型番, Original_数量, Original_単位, Original_標準単価, Original_単価, Original_明細備考, Original_単価old);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private 受注明細TableAdapter _受注明細TableAdapter;
        
        private 受注TableAdapter _受注TableAdapter;
        
        private T見積明細TableAdapter _t見積明細TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public 受注明細TableAdapter 受注明細TableAdapter {
            get {
                return this._受注明細TableAdapter;
            }
            set {
                this._受注明細TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public 受注TableAdapter 受注TableAdapter {
            get {
                return this._受注TableAdapter;
            }
            set {
                this._受注TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T見積明細TableAdapter T見積明細TableAdapter {
            get {
                return this._t見積明細TableAdapter;
            }
            set {
                this._t見積明細TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._受注明細TableAdapter != null) 
                            && (this._受注明細TableAdapter.Connection != null))) {
                    return this._受注明細TableAdapter.Connection;
                }
                if (((this._受注TableAdapter != null) 
                            && (this._受注TableAdapter.Connection != null))) {
                    return this._受注TableAdapter.Connection;
                }
                if (((this._t見積明細TableAdapter != null) 
                            && (this._t見積明細TableAdapter.Connection != null))) {
                    return this._t見積明細TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._受注明細TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._受注TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t見積明細TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._受注明細TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.受注明細.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._受注明細TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._受注TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.受注.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._受注TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t見積明細TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T見積明細.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t見積明細TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._受注明細TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.受注明細.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._受注明細TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._受注TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.受注.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._受注TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t見積明細TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T見積明細.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t見積明細TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._t見積明細TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T見積明細.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t見積明細TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._受注TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.受注.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._受注TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._受注明細TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.受注明細.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._受注明細TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._受注明細TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._受注明細TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._受注TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._受注TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t見積明細TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t見積明細TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._受注明細TableAdapter != null)) {
                    revertConnections.Add(this._受注明細TableAdapter, this._受注明細TableAdapter.Connection);
                    this._受注明細TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(workConnection));
                    this._受注明細TableAdapter.Transaction = ((global::Microsoft.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._受注明細TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._受注明細TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._受注明細TableAdapter.Adapter);
                    }
                }
                if ((this._受注TableAdapter != null)) {
                    revertConnections.Add(this._受注TableAdapter, this._受注TableAdapter.Connection);
                    this._受注TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(workConnection));
                    this._受注TableAdapter.Transaction = ((global::Microsoft.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._受注TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._受注TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._受注TableAdapter.Adapter);
                    }
                }
                if ((this._t見積明細TableAdapter != null)) {
                    revertConnections.Add(this._t見積明細TableAdapter, this._t見積明細TableAdapter.Connection);
                    this._t見積明細TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(workConnection));
                    this._t見積明細TableAdapter.Transaction = ((global::Microsoft.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t見積明細TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t見積明細TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t見積明細TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._受注明細TableAdapter != null)) {
                    this._受注明細TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(revertConnections[this._受注明細TableAdapter]));
                    this._受注明細TableAdapter.Transaction = null;
                }
                if ((this._受注TableAdapter != null)) {
                    this._受注TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(revertConnections[this._受注TableAdapter]));
                    this._受注TableAdapter.Transaction = null;
                }
                if ((this._t見積明細TableAdapter != null)) {
                    this._t見積明細TableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(revertConnections[this._t見積明細TableAdapter]));
                    this._t見積明細TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591